openapi: 3.0.3
servers:
  - url: https://api.exchange.bullish.com/trading-api
    description: PRODUCTION
  - url: https://registered.api.exchange.bullish.com/trading-api
    description: PRODUCTION
  - url: https://prod.access.bullish.com/trading-api
    description: PRODUCTION (Direct Connect)
  - url: https://api.bugbounty.bullish.com/trading-api
    description: SECURITY SANDBOX
  - url: https://api.simnext.bullish-test.com/trading-api
    description: API SANDBOX
  - url: https://registered.api.simnext.bullish-test.com/trading-api
    description: API SANDBOX
  - url: https://simnext.access.bullish.com/trading-api
    description: API SANDBOX (Direct Connect)
info:
  description: |
    # Overview

    Welcome to the _Bullish Trading API_ documentation!

    This documentation provides resource descriptions and endpoints usage instructions for the API.

    The API:
    - follows [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) conventions
    - has the base URL `api.exchange.bullish.com` (unless one of the sandbox environments is being used)
    - has endpoints under the below categories:
      - Authenticated endpoints for private client data e.g. [Get Orders](#get-/v2/orders) endpoint
      - Non-authenticated endpoints for public data e.g. [Get Markets](#get-/v1/markets) endpoint
    - uses bearer-based authentication
    - enforces a blanket rate limit across all requests
    - may add new fields to existing response payloads. Please do not use strict deserialisation as it may cause compatibility issues.
    
    # Additional Links
    
    - Code examples - [Bullish Github Repository](https://github.com/bullish-exchange)
    - Deprecated features & APIs - [Deprecated Features Documentation](.././deprecated/index.html)
    - Help center - [Bullish Help Center](https://support.bullish.com)
    - Comprehensive guide for new Institutional users - [Institutional User Guide](https://support.bullish.com/hc/en-us/articles/28811587741721-Comprehensive-New-User-Guide-for-Institutions#h_01HPQBYXD72K2M2CRSRXQ5YEWG)
    - Various order/custody status codes - [Error & Rejection Codes](https://github.com/bullish-exchange/api-docs/wiki/Error-&-Rejection-Codes)
    - Operational status of our exchange - [official status page](https://bullish.statuspage.io/)
    
    
    # Connectivity Options
    
    In GCP, generally our most optimal connection is to operate within asia-southeast1-a Availability Zone. 
    Please note, this may change at any given moment and without warning to another Availability Zone within asia-southeast1 for operational reasons. 
    For AWS or GCP connectivity details, please contact your sales representative

    # FIX API
    
    The FIX API is available to institutional clients and is only accessible through a AWS or GCP private connection:
    - AWS PrivateLink
      - It provides private connectivity between VPCs, AWS service without exposing your traffic to the public internet. 
      Bullish will provide the published service IDs for this service. You will be able to connect to our FIX service endpoint once the connection has been successfully established.
    - GCP Private Service Connect
      - It allows customers to access managed services privately from inside their VPC network.
      Bullish will provide the published service IDs for this service. You will be able to connect to our
      FIX service endpoint once the connection has been successfully established.
    
    
    For more details please refer to the full specification:
    - [Bullish FIX Protocol Specification](../../fix-api/Bullish%20FIX%20Protocol%20Specification%20v1.0.13.pdf)
    - [Bullish FIX Protocol Dictionary](../../fix-api/fix-dictionary.xml) 
    - [Bullish FIX CRT Certificate](../../fix-api/bullish.crt) 
    
    # Exchange Time

    All timestamps are specified in [EPOCH time](https://en.wikipedia.org/wiki/Unix_time).

    # Pagination Support

    If specified in the API documentation, an endpoint may return cursor paginated responses. Default page size is 25.

    There are 4 special query parameters used to control the pagination behaviour.
    - `_pageSize` can be one of `5, 25, 50, 100`, default value is `25`
    - `_metaData` can be false/true, if false the links are NOT part of the response. explicitly set `_metaData=true` to guarantee links are returned.
    - `_nextPage` cursor to the next page. It is provided in the paginated response when `_metaData=true`.
    - `_previousPage` cursor to the previous page. It is provided in the paginated response when `_metaData=true`.

    The paginated data is returned in the following wrapped format with generated links to the previous and next pages:
    ```json
    {
      "data": [
        {
          "averageFillPrice": null,
          "baseFee": "0.00000000",
          "createdAtDatetime": "2018-11-18T00:00:00.000Z",
          "createdAtTimestamp": "1639464207402",
          "handle": null,
          "margin": false,
          "orderId": "390755652232282113",
          "price": "8520.7000",
          "quantity": "1.00000000",
          "quantityFilled": "0.00000000",
          "quoteAmount": "0.0000",
          "quoteFee": "0.0003",
          "side": "BUY",
          "status": "OPEN",
          "statusReason": "Open",
          "statusReasonCode": "6001",
          "stopPrice": null,
          "symbol": "BTCUSD",
          "timeInForce": "GTC",
          "type": "LMT"
        },
        ...
      ],
      "links": {
        "next": "/trading-api/v1/orders?_pageSize=5&symbol=BTCUSD&_nextPage=Mjk3NzM1MzQ5NDI0NjIwMDMy",
        "previous": "/trading-api/v1/orders?_pageSize=5&symbol=BTCUSD&_previousPage=Mjk3NzM1Mzg3NzQ3OTc1Njgw"
      }
    }
    ```


    # Filtering Support
    
    - If specified in the API documentation, an endpoint may support filters on specific fields and values e.g. `GET /orders?status=OPEN`     
    - Only fields returned in an API response may be used as filter parameters. What you see is what you query on and by.
    - For the fields in the API response usable as filter parameters, please consult the API endpoint of interest.
    - Datetime and timestamp filters require additional keywords from this list - `[ gte, lte, gt, lt ]`. A few examples are provided below.
      - `/trading-api/v1/trades?createdAtTimestamp[gte]=1686447835000` queries for trades with `createdAtTimestamp` 
        greater than or equal to `1686447835000`.
      - `/trading-api/v1/trades?createdAtDatetime[gte]=2023-04-06T00:00:00.000Z&createdAtDatetime[lte]=2023-06-07T00:00:00.000Z` 
        queries for trades with `createdAtDatetime` greater than or equal to `2023-04-06T00:00:00.000Z` but less than or equal to `2023-06-07T00:00:00.000Z`
    - By design, pagination query parameters start with an underscore. This differentiates them from filter query parameters e.g. `GET /orders?status=OPEN&_pageSize=25`

    # Rate Limits
    
    ## Public Endpoints
    
    The below mentioned public endpoints will be rate limited. For more information please reach out to your Bullish customer support.
    
    - [/trading-api/v1/markets](#get-/v1/markets) and subpaths
    - [/trading-api/v1/market-data](#overview--multi-orderbook-websocket-unauthenticated) and subpaths
    - [/trading-api/v1/history/markets](#get-/v1/history/markets/-symbol-/trades) and subpaths
    - [/trading-api/v1/assets](#get-/v1/assets) and subpaths
    - [/trading-api/v1/index-prices](#get-/v1/index-prices) and subpaths
    - [/trading-api/v1/index-data](#overview--index-data-websocket-unauthenticated) and subpaths
    
    ## Private Endpoints
    
    API endpoints denoted by `Ratelimited: True` in the description are also subject to rate limits.
    e.g. [Create Order](#post-/v2/orders). The API endpoints fall under the below categories. The rate limit for each category is *independently* applied.
    
    - Unauthenticated endpoints, rate limited at 50 requests per second.
    - Authenticated `/orders` endpoints, rate limited at 50 requests per second.
    - Other Authenticated endpoints, rate limited at 50 requests per second.
    
    ### Rate Limits per IP address
    
    Each IP address is subject to a blanket rate limit of 500 requests per 10 seconds (approximately 50 requests per second).
    If an IP address is rate limited, the http response status code will be `429 Too Many Requests` and the IP address
    is blocked from making any requests for 60 seconds.

    ### Global Rate Limit
    
    The global rate limit is an additional rate limit specific to the exchange. It is used to help limit the flow of orders into the exchange. It affects all clients fairly. 
    When the global rate limit is breached the `x-ratelimit-global-breach` header value will be set to `true` else `false`.
    
    ### Rate Limits Info
    
    When rate limits are not exceeded, the http response header of the API endpoint called will contain the below:
    - `x-ratelimit-limit`: Maximum number of requests allowed for the specific API category within time period.
    - `x-ratelimit-remaining`: Remaining number of requests allowed for the specific API category within time period.
    - `x-ratelimit-reset`: The next time period in which `x-ratelimit-remaining` is reset back to the maximum allowed for the specific API category.
    - `x-ratelimit-global-breach`: true/false, indicating whether the global limit has been breached.

    ### Exceeding Rate Limits
    When rate limits are exceeded, the API endpoint will return the http response status code `429 Too Many Requests` and the http response body will be:
    ```json
      {
        "errorCode": 96000,
        "errorCodeName": "RATE_LIMIT_EXCEEDED",
        "message": "Rate limit exceeded"
      }
    ```

    ### Exceeding The Global Rate Limit
    When the global rate limit is exceeded, the API endpoint will return the http response status code `429 Too Many Requests` and the http response body will be:
    ```json
      {
        "errorCode": 96001,
        "errorCodeName": "GLOBAL_RATE_LIMIT_EXCEEDED",
        "message": "Global rate limit exceeded"
      }
    ```

    ### Increasing Rate Limits
    
    For more information on increasing your rate limits, please reach out to your sales representative.
    
    ### Obtaining Your Rate Limit Token
    
    Each trading account has a unique rate limit token that can be obtained by querying [Get Trading Accounts](#get-/v1/accounts/trading-accounts).
    The rate limit token must be provided in the HTTP request header `BX-RATELIMIT-TOKEN` to enjoy higher tiers of rate limits 
    else the default of 50 msgs/sec is applied.
    
    # Price And Quantity Precision
    
    A market consists of two assets, namely base asset and quote asset.
    For instance, the `BTCUSD` market has `BTC` as base asset and `USD` as quote asset.
    The price of a market is denominated in the quote asset, while the quantity is denominated in the base asset.
    For instance, the price in `BTCUSD` market is in `USD` while the quantity is in `BTC`. 
    Each asset has its own precision. For this, the below asset APIs can be queried.
    
    - The [Get Assets](#get-/v1/assets) API endpoint for all supported asset symbols
    - The [Get Asset By Symbol](#get-/v1/assets/-symbol-) API endpoint for a specific asset symbol
    
    The precision of an asset is the number of decimal places used to express its value in.
    For instance, the quantity in the market `BTCUSD` is in BTC. As BTC has a precision of 8, the quantity in `BTCUSD` has 8 decimal places.
    It follows that in order to express a quantity of 1 BTC in `BTCUSD` market, it has to be `1.00000000` BTC.
    
    Alternatively, the below market APIs can also be queried to obtain the price and quantity precisions for different markets.
    
    - The [Get Markets](#get-/v1/markets) API endpoint for all supported market symbols
    - The [Get Market By Symbol](#get-/v1/markets/-symbol-) API endpoint for a specific market symbol
    
    Following the logic outlined above, 
    - The precision for quantity is defined by the `basePrecision`
    - The precision for price is defined by `quotePrecision`


    # Numeric Identifier Contraints

    Numeric (i64) identifiers such as `nonce` and `handle` should not have leading zero's. For example `009990822212000000` is invalid but `9990822212000000` is valid.

    # Order timeInForce

    The order `timeInForce` can be set to the following values:
    - `GTC` - good until cancelled - the order is open forever unless fully filled or cancelled
    - `FOK` - fill or kill - if the order cannot immediately be filled in full it is cancelled
    - `IOC` - immediate or cancel - the order is immediately filled in full or in part and any remainder is cancelled
    
    # Error & Rejection Codes

    Details of `statusReasonCode` and `statusReason` can be referenced from [Error & Rejection Codes](https://github.com/bullish-exchange/api-docs/wiki/Error-&-Rejection-Codes) 

    # Authentication

    The API uses bearer based authentication. A JWT token is valid for 24 hours only. To generate a JWT token see - [Generate A JWT Token](#overview--generate-a-jwt-token)

    # How To Send Authenticated Requests

    To send an authenticated request, you must follow these steps:
    1. [Generate An API Key](#overview--generate-an-api-key)
    2. [Add Authenticated Request Header](#overview--add-authenticated-request-header)
    3. [Generate A JWT Token](#overview--generate-a-jwt-token)
    4. [Construct The BX-NONCE Header](#overview--construct-the-bx-nonce-header)
    5. [Construct The Command You Want To Send](#overview--construct-the-command-you-want-to-send)
    6. [Construct The BX-SIGNATURE Header](#overview--construct-the-bx-signature-header)
    7. [Fetch Trading Account Ids](#overview--fetch-trading-account-ids)
    8. [Send The HTTP Authenticated Request](#overview--send-the-http-authenticated-request)
    9. [How To Ensure The Order Of *Create Order* or *Cancel Order* Requests](#overview--how-to-ensure-the-order-of-create-order-or-cancel-order-requests)
    10. [How do EMS/Brokers Flag Their Executions Sent To Bullish](#overview--how-do-emsbrokers-flag-their-executions-sent-to-bullish)

    ## Generate An API Key

    A prerequisite to generate API keys is to have a Bullish account. To generate an API key follow these steps:

    1. Log in into your Bullish account
    2. Click on your account initials at the upper right corner and then click **Settings**
    3. Click **API Keys** and then click **Add API Key**
    4. Select the API Key type, either ECDSA or HMAC
    5. Enter a key name in the *Key Name* field
    6. Adding an IP whitelist is optional. Should an IP whitelist be added, login requests must be from within the IP whitelist range.
    7. Click *Generate API Key*
    
    ### HMAC API Key Notes
    
    - A HMAC API Key is a shared secret key that is used for HMAC based signing of trading API requests
    - Always store your HMAC secret in a secure medium as they are used to sign your requests. Do not share your HMAC secret in any publicly accessible areas such as code repositories, client side code, or other vulnerable areas and make sure the keys are not shipped with your mobile or web apps.
    - You do not need the `metadata` string to extract your `userId` like you would a Bullish API Key
    - HMAC API Keys can only be used for Trading on Bullish; the JWT generated using an HMAC API Key is only valid for trading endpoints.

    ### ECDSA API Key Notes

    - An ECDSA API key is a public/private key pair used for ECDSA based signing of trading and custody API requests
    - The private key is what you will use to sign your requests. Always store your private keys in a secure medium as they are used to sign your requests. Do not share your private keys in any publicly accessible areas such as code repositories, client side code, or other vulnerable areas and make sure the keys are not shipped with your mobile or web apps.
    - From here on the:
      - public key will be referred to as `PUBLIC_KEY`
      - private key will be referred to as `PRIVATE_KEY`
    - Key and signature format details:
      - Curve: ECDSA R1 (prime256v1/secp256r1/P-256)
      - Signature encoding: DER
      - Hashing Algorithm: SHA256
      - Key format: X.509 SubjectPublicKeyInfo format, PEM encoded

    An ECDSA API key additionally has a `metadata` string associated with it which is displayed along side the key.
    You must base64 decode the `metadata` to extract your `userId` (example follows). You will need the `userId` in the next step.
    
    ```shell
    echo eyJwdWJsaWNLZXkiOiJQVUJfUjFfNWNpVW52TW5rVThMOVBCWnZaa1BGcjhqdkRnUHpzcHhWNGlqOThIN1JqM1FSNzJyMkEiLCJhY2NvdW50SWQiOjIyMjAwMDAwMDAwMDAwNCwiY3JlZGVudGlhbElkIjoiMTAifQ== | base64 --decode
    {"publicKey":"PUB_R1_5ciUnvMnkU8L9PBZvZkPFr8jvDgPzspxV4ij98H7Rj3QR72r2A","userId":"12345","accountId":"12345","credentialId":"10"}
    ```

    ## Add Authenticated Request Header

    Each authenticated request must include a `Authorization` header:
      - `Authorization: Bearer <JWT_TOKEN>`

    The JWT is valid for 24 hours.

    ## Generate a JWT Token
    ### Bullish API Key
    #### **`Deprecated`** [[more info](.././deprecated/index.html#overview--bullish-key)]: *Existing Bullish API key will no longer be usable as of `28 June, 2024`*
    To generate/get a JWT token for a Bullish API Key you will need to perform the following request:

    #### POST /trading-api/v2/users/login

    - Body
      - `publicKey` - bullish account public key
      - `userId` - bullish user id corresponding to the metadata
      - `signature` - signed JSON string encoding of `loginPayload`, see the code sample for how to get it
      - `expirationTime` - epoch timestamp in seconds that is 5 minutes in the future
      - `nonce` - epoch timestamp in seconds; note this login API nonce has no connection to the orders API nonce
      - `biometricsUsed` - set to `false`
      - `sessionKey` - set to `null`

    ```json
    {
      "publicKey": "<PUBLIC_KEY>",
      "signature": "<SIGNATURE>",
      "loginPayload": {
        "userId": "100008771"
        "nonce": 1638776636,
        "expirationTime": 1638776936,
        "biometricsUsed": false,
        "sessionKey": null
      }
    }
    ```

    - Response

    ```json
    {
      "authorizer": "<AUTHORIZER>",
      "token": "<JWT_TOKEN>"
    }
    ```
    See [generate JWT](https://github.com/bullish-exchange/api-examples/blob/master/session) for sample Python scripts.
    
    ### HMAC API Key
    To generate/get a JWT token for a HMAC API Key you will need to perform the following request:
    
    #### GET /trading-api/v1/users/hmac/login
    
    - Response
    
    ```json
    {
      "authorizer": "<AUTHORIZER>",
      "token": "<JWT_TOKEN>"
    }
    ```
    
    You will need to provide a series of headers along with the request in order to successfully generate a JWT token.
    
    - `BX-TIMESTAMP` - number of milliseconds since EPOCH
    - `BX-NONCE` - client side incremented 64-bit unsigned integer
    - `BX-PUBLIC-KEY` - Public key for the HMAC Key being used to generate the JWT
    - `BX-SIGNATURE` - The signed message related to the login request. Outlined below
    
    To sign the login request for an HMAC API Key login we will need to construct a string that concatenates the following fields:
    - timestamp - value provided for the `BX-TIMESTAMP` header
    - nonce - value provided for the `BX-NONCE`
    - request method - `GET`
    - request path - `/trading-api/v1/users/hmac/login`
    
    See [generate JWT](https://github.com/bullish-exchange/api-examples/blob/master/session/generate_jwt_hmac.py) for a sample Python script.

    ### ECDSA API Key
    To generate/get a JWT token for a ECDSA API Key you will need to perform the following request:

    #### POST /trading-api/v2/users/login

    - Body
      - `publicKey` - ECDSA public key; new line characters should be UNIX encoded (\n, not \r\n or \r)
      - `userId` - bullish user id corresponding to the metadata
      - `signature` - signed JSON string encoding of `loginPayload`, see the code sample for how to get it
      - `expirationTime` - epoch timestamp in seconds that is 5 minutes in the future
      - `nonce` - epoch timestamp in seconds; note this login API nonce has no connection to the orders API nonce
      - `biometricsUsed` - set to `false`
      - `sessionKey` - set to `null`

    ```json
    {
      "publicKey": "<PUBLIC_KEY>",
      "signature": "<SIGNATURE>",
      "loginPayload": {
        "userId": "100008771"
        "nonce": 1638776636,
        "expirationTime": 1638776936,
        "biometricsUsed": false,
        "sessionKey": null
      }
    }
    ```

    - Response

    ```json
    {
      "authorizer": "<AUTHORIZER>",
      "token": "<JWT_TOKEN>"
    }
    ```
    See [generate JWT](https://github.com/bullish-exchange/api-examples/blob/master/session/generate_jwt_ecdsa.py) for a sample Python script.
    
    ## Logout using a JWT Token
    Users can better manage their sessions by logging out of unused sessions. This can be done by calling the `GET /trading-api/v1/users/logout` endpoint with the JWT Token in the header - see [Add Authenticated Request Header](#overview--add-authenticated-request-header).
    
    ## Construct The BX-NONCE Header

    The header `BX-NONCE` value is a unique client-side 64-bit unsigned integer. It has the following characteristics:

    - Each request the client sends how have incrementing `BX-NONCE` value
    - To prevent a client to send the max value of a 64-bit unsigned integer and thus immediately exhaust all unique nonces
    the exchange will only accept a nonce within a specified range
    - The lower and upper bounds of the current nonce range are specified by nonce endpoint e.g. `GET /nonce`
    - The nonce range is updated daily
    - The nonce `lowerBound` is the start of day EPOCH timestamp in micro seconds
    - The nonce `upperBound` is the end of day EPOCH timestamp in micro seconds

    ## Construct The Command You Want To Send

    Each authenticated request contains a `<COMMAND>` to be executed by the API.
    A `<COMMAND>` has the following properties:

      - A `<COMMAND>` is JSON encoded
      - Every field in the JSON payload must have a value. Use `null` to represent the absence of a value
      - The fields must be specified and encoded in the order presented in this documentation

    Find below two `<COMMAND>` examples:
    1. [Create Spot Order](#overview--create-spot-order-example)
    2. [Create Margin Order](#overview--create-margin-order-example)
    2. [Cancel Order](#overview--cancel-order-example)

    ### Create Spot Order Example

    To create a Spot buy limit order:
    - for the BTCUSD market
    - at a price of `55071.5000`
    - for a quantity of `1.87000000`
    - with a time-in-force of `GTC` (good till cancelled)

    The COMMAND would be constructed like below:

    ```json
    {
      "timestamp": "<TIMESTAMP>",
      "nonce": "<NONCE>",
      "authorizer": "<AUTHORIZER>",
      "command": {
        "commandType": "V2CreateOrder",
        "handle": null,
        "symbol": "BTCUSD",
        "type": "LMT",
        "side": "BUY",
        "price": "55071.5000",
        "stopPrice": null,
        "quantity": "1.87000000",
        "timeInForce": "GTC",
        "allowMargin": false,
        "tradingAccountId": "111234567890" 
      }
    }
    ```
    
    ### Create Margin Order Example
    
    With reference to the same payload in [Create Spot Order](#overview--create-spot-order-example), setting the field `allowMargin` to `true` will make it a margin order.
    
    Documentation is available [here](https://github.com/bullish-exchange/api-docs/blob/master/src/trading-api/next/websocket-private-data-update-messages-for-borrowers.pdf) on what happens in the event of liquidation.

    ### Cancel Order Example

    To cancel a buy limit order:
    - for the BTCUSD market
    - where the `orderId` is `390755251743358977`

    The COMMAND would be constructed like below:

    ```json
    {
      "timestamp": "<TIMESTAMP>",
      "nonce": "<NONCE>",
      "authorizer": "<AUTHORIZER>"
      "command": {
        "commandType": "V2CancelOrder",
        "orderId": "390755251743358977",
        "handle": null,
        "symbol": "BTCUSD",
        "tradingAccountId": "111234567890"
      }
    }
    ```
    ### Add Amm instruction 
    
    ```json
    {
      "timestamp": "1621490985000",
      "nonce": "123456789",
      "authorizer": "03E02367E8C900000500000000000000",
      "command": {
        "commandType": "V2AddLiquidity",
        "symbol": "BTCUSD",
        "baseQuantity": "0.00000000",
        "quoteQuantity": "0.00000000",
        "upperBound": "14000.0000",
        "lowerBound": "12000.0000",
        "feeTierId": "1",
        "tradingAccountId": "111234567890"
      }
    }
    ```
    ### Remove Amm instruction
    ```json
    {
      "timestamp": "<TIMESTAMP>",
      "nonce": "<NONCE>",
      "authorizer": "<AUTHORIZER>"
      "command": {
        "commandType": "V2RemoveLiquidity",
        "liquidityId": "557839859386417160",
        "symbol": "BTCUSD",
        "tradingAccountId": "111234567890"
      }
    }
    ```
    
    ### Command for Transfer Asset 
    `POST /trading-api/v1/command?commandType=V1TransferAsset`
    
    ```json
    {
      "timestamp": "<TIMESTAMP>",
      "nonce": "<NONCE>",
      "authorizer": "<AUTHORIZER>"
      "command": {
        "commandType": "V1TransferAsset",
        "assetSymbol": "USD",
        "quantity": "7.0000",
        "fromTradingAccountId": "11123456789",
        "toTradingAccountId": "11198765432"
      }
    }
    ```
    
    ## Construct The BX-SIGNATURE Header

    The following signing formats demonstrates how to obtain the `BX-SIGNATURE` header.

    ## Signing Format
    
    This signing format works with `/trading-api/v2/orders`, `/trading-api/v2/amm-instructions`, `/trading-api/v2/command` and [Custody](#tag--custody) APIs. 
    This signing format has the following benefits:
    - Null fields need not be included in the HTTP request body
    - Fields need not be strictly ordered in the HTTP request body
    
    Construct a string that concatenates the following fields:
    - timestamp - value provided for the `BX-TIMESTAMP` header
    - nonce - value provided for the `BX-NONCE`
    - request method - e.g. `POST`
    - request path - e.g. `/trading-api/v2/orders`
    - request JSON string, removing any spaces and newline characters.
    
    Note that the same request JSON string used in signing must be sent as the HTTP request body.
    
    #### How To Sign - ECDSA API Key
    
    1. Hash the above string using a SHA-256 hash function and sign the resulting hexdigest with your ECDSA `<PRIVATE_KEY>`.
    2. DER encode the signature, and base64 encode the DER encoded signature.  
    
    See [sign a request with ECDSA](https://github.com/bullish-exchange/api-examples/blob/master/orders/create_order_ecdsa.py) for a sample Python script.

    #### How To Sign - HMAC API Key

    1. Hash the above string using a SHA-256 hash function and take the hexdigest.
    2. Sign the hexdigest from step 2 with your HMAC Secret Key.  
    
    See [sign a request with HMAC](https://github.com/bullish-exchange/api-examples/blob/master/orders/create_order_hmac.py) for a sample Python script.

    ## Fetch Trading Account Ids
    
    Trading Account Ids may be required by some endpoints. They can be fetched from [Get All Trading Accounts](#get-/v1/accounts/trading-accounts).
    
    See an API example [Here](https://github.com/bullish-exchange/api-examples/blob/master/session/get_trading_accounts.py).

    ## Send The HTTP Authenticated Request

    See [create an order](https://github.com/bullish-exchange/api-examples/blob/master/orders/create_order_hmac.py) for a sample Python script.

    ## How To Ensure The Order Of *Create Order* or *Cancel Order* Requests

    To ensure the order of the *create order* or *cancel order* requests,
    you must wait for an acknowledgement response which will contain the `orderId`
    generated on the server side.
    Also remember that the `nonce` parameter, for these two requests, must be a
    unique increasing integer value.

    For example, let us assume the following:
    * You sent 10 *create order* requests in a row without waiting for an `orderId`
    * The `nonce` increases with each request sent and thus
    * The `nonce` is unique for each request

    Because the requests received by the Bullish exchange are processed in parallel
    the following two possible scenarios can happen:
    * *happy scenario* which has a small chance to occur: all 10 requests are
    processed in the exact order sent by the client, no error, all great and you
    are happy
    * *unhappy scenario* which has a higher chance to occur: the requests are not
    processed in the exact order sent by you, because the requests might arrive at the
    bullish processing server at different times and thus the validations
    of the `nonce` for each request take place at random times. Because of that all
    the requests that are validated and have the `nonce` higher than the latest
    valid `nonce` will be accepted as valid and the ones which have the `nonce`
    smaller than the last valid `nonce` will be considered invalid and dropped.
    In the worse case scenario the request with the highest `nonce`, the 10th request
    you sent, is validated first, and the rest of the 9 requests will fail the
    validation because they have the `nonce` smaller than the 10th.
    Also if some requests are failing because of some other errors, e.g. incorrect
    inputs or internal error, you will not know because you did not wait for the
    acknowledgement from the server side for each request you sent.

    If you wait the acknowledgement from the server side you ensure the order of
    the requests you sent and you can also verify the status of the order(s) you
    created or cancelled.
    
    ## How To Enable Out-Of-Order Processing of Order Requests
    The header `BX-NONCE-WINDOW-ENABLED` is a string representation of a boolean value which enables out-of-order 
    processing of *Create Order* or *Cancel Order* requests up to a window size of 100 from the highest previously used
    `nonce` value (inclusive).
    
    The `nonce` parameter is required to be both unique and incremental, but setting `BX-NONCE-WINDOW-ENABLED` to `true` 
    loosens this requirement such that the `nonce` is only required to be `unique`. For example, the client is able to 
    send `nonce` values from `1...100` in any order and all the values will be valid.   
    
    ## How do EMS/Brokers Flag Their Executions Sent To Bullish
    The header `BX-REFERRER` value is a unique identifier that can be used by EMS/brokers to flag their executions sent to Bullish.
    
    This referrer header is applicable to the below mentioned authenticated endpoints:
      1. [Create Order](#post-/v2/orders)
      2. [Create OTC Trade](#post-/v2/otc-trades)
    
    For more details, please reach out to your relationship manager to understand which referrer you are assigned.

    # WebSockets

    Connection request to the web-socket uses [JWT_COOKIE based authentication](https://github.com/bullish-exchange/api-examples/blob/master/websocket/private_data_web_socket.py).
    To generate a JWT token see - [Generate A JWT Token](#overview--generate-a-jwt-token). Each web-socket exposes a set of
    topics that can be subscribed to.

    ## Servers
      - `wss://api.exchange.bullish.com` - PRODUCTION
      - `wss://registered.api.exchange.bullish.com` - PRODUCTION
      - `wss://prod.access.bullish.com` - PRODUCTION (Direct Connect)
      - `wss://api.simnext.bullish-test.com` - SANDBOX
      - `wss://registered.api.simnext.bullish-test.com` - SANDBOX
      - `wss://simnext.access.bullish.com` - SANDBOX  (Direct Connect)

    ## Max Open WebSocket Connections
    
    Each WebSocket category has a maximum number of open connections. Once it is reached, new WebSocket requests will be rejected. 
    The WebSocket connections fall under the below categories.
    
    - Unauthenticated WebSockets, maximum of 100 open connections per IP address.
    - Authenticated WebSockets, maximum of 10 open connections per API key.
    
    ## Send A Message Over The WebSocket

    Messages sent by the client to the server over a web-socket follows the
    [JSON-RPC 2.0 Specification](https://www.jsonrpc.org/specification). The server then returns a response following
    the same JSON-RPC 2.0 format. The `id` field sent by the client will be included in the response, allowing the
    client to map the server's responses to the messages sent by the client. The client ensures the uniqueness of the
    `id` field.

    Find below the message types accepted by the web-socket:
      1. [Subscription Message](#overview--subscribe-to-a-topic)
      2. [Keepalive Ping Message](#overview--keep-websocket-open)

    ## Subscribe To A Topic

    Subscribe to receive a snapshot of your existing data and subsequently receive updates.

    Two types of subscription:
      1. Subscribe by `<TOPIC>`
      2. Subscribe by `<TOPIC>` and `<SYMBOL>` plus optional fields (if any)

    Message fields:
      - `<TOPIC>`: subscription topic
      - `<SYMBOL>`: market symbol
      - `<COMMAND_ID>`: unique unsigned long value

    The subscription message would be constructed like below:

    Subscribe by `<TOPIC>`
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "<TOPIC>",
      },
      "id": "<COMMAND_ID>"
    }
    ```

    Subscribe by `<TOPIC>` and `<SYMBOL>`
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "<TOPIC>",
          "symbol": "<SYMBOL>",
      },
      "id": "<COMMAND_ID>"
    }
    ```

    Sample subscription messages:
     - Orders
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "orders"
      },
      "id": "1611082473000"
    }
    ```
     - L1 Order Book
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "l1Orderbook"
          "symbol": "BTCUSD"
      },
      "id": "1611082473000"
    }
    ```

    Find below the available `<TOPIC>`:
      1. [Multi-OrderBook Data WebSocket](#overview--multi-orderbook-websocket-unauthenticated)
      2. [Anonymous Trades WebSocket](#overview--anonymous-trades-websocket-unauthenticated)
      2. [Anonymous Market Data WebSocket](#overview--anonymous-market-data-price-tick-unauthenticated)
      3. [Index Data WebSocket](#overview--index-data-websocket-unauthenticated)
      4. [Private Data WebSocket](#overview--private-data-websocket-authenticated)


    ## Keep WebSocket Open

    Keep the web-socket connection open by sending keepalive ping messages periodically.
    The web-socket closes automatically after 5 minutes.


    The keepalive ping message would be constructed like below:

    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "keepalivePing",
      "params": {},
      "id": "<COMMAND_ID>"
    }
    ```

    ## Receive A Message From The WebSocket

    JSON-RPC responses are of the following format:

    Success responses
    ```json
    {
      "jsonrpc": "2.0",
      "id": "1650865877698",
      "result": {
        "responseCode": "200",
        "responseCodeName": "OK",
        "message": "Successfully subscribed"
      }
    }
    ```

    Error responses
    ```json
    {
      "jsonrpc": "2.0",
      "id": "1650865877698",
      "error": {
        "code": "-32602",
        "errorCode": "29013",
        "errorCodeName": "INVALID_TOPIC_ERROR",
        "message": "'a-random-topic' is not a valid topic"
    }
    ```

    - `code`: [JSON-RPC 2.0 error code](https://www.jsonrpc.org/specification)
    - `responseCode`/`errorCode`: unique ID for response/error code
    - `responseCodeName`/`errorCodeName`: unique name for response/error code
    - `message`: textual description of the `responseCode`/`errorCode`


    Snapshot responses are of the following format:
    ```json
    {
      "type": "snapshot",
      "dataType": "<DATA_TYPE>",
      "data": [ { <TOPIC_RESPONSE> } ]
    }
    ```

    Update responses are of the following format:
    ```json
    {
      "type": "update",
      "dataType": "<DATA_TYPE>",
      "data": { <TOPIC_RESPONSE> }
    }
    ```

    Error responses are of the following format:
    ```json
    {
      "type": "error",
      "dataType": "V1TAErrorResponse",
      "data": {
        "errorCode": <ERROR_CODE>,
        "errorCodeName": "<ERROR_CODE_NAME>"
      }
    }
    ```

    ## Heartbeat
    - this is a `beta/experimental` feature that is currently being tested
    - the heart beat message is periodically sent approximately every 30 seconds on the `heartbeat` topic for the [Private Data WebSocket](#overview--private-data-websocket-authenticated) API and [Multi-OrderBook WebSocket)](#overview--multi-orderbook-websocket-unauthenticated) API
    - the heat beat serves to validate end to end communication between the exchange and the client
    - if 3 heart beats are missed, then it is advisable to check the [official status page](https://bullish.statuspage.io/) for any announcements on the degradation of the exchanges features
    - if no announcements have been made, it is advisable to disconnect and reconnect the websocket API given the issue may be isolated to a specific gateway

    ## Multi-OrderBook WebSocket (unauthenticated)
    **Route**
    - `/trading-api/v1/market-data/orderbook`
    
    This allows simultaneous subscriptions to multiple L1 and L2 orderbooks of different markets:
    
    It also provides a heartbeat topic which sends heartbeat every 30s as an indicator of platform healthiness. Please refer to the [heartbeat session](#overview--heartbeat) for the details.
    
    ### Multi-Orderbook Subscription
    The orderbooks of different markets to be subscribed are controlled by the parameters in the subscription message listed below:
    | Parameters            | Type   | Description                                                                     |
    |:----------------------|:-------|:--------------------------------------------------------------------------------|
    | topic                 | String | l1 orderbook: l1Orderbook<br />l2 orderbook: l2Orderbook<br />heartbeat: heartbeat  |
    | symbol                | String | market symbol                                                                   |

    L1 Subscription Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "l1Orderbook",
          "symbol": "BTCUSD"
      },
      "id": "1611082473000"
    }
    ```

    L2 Subscription Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "l2Orderbook",
          "symbol": "BTCUSD"
      },
      "id": "1611082473000"
    }
    ```

    Heartbeat Subscription Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "heartbeat"
      },
      "id": "1611082473000"
    }
    ```

    ### Multi-Orderbook Response
    
    * L1 Update Response
    | Name           | Type   | Description                                                                                                   |
    |:---------------|:-------|:--------------------------------------------------------------------------------------------------------------|
    | sequenceNumber | String | incrementing, unique, unsigned integer that identifies a state of the L1-orderbook                            |
    | symbol         | String | market symbol                                                                                                 |
    | timestamp      | String | denotes the time the update was created                                                                       |
    | bid            | Array  | nested array containing price and quantity of highest bid                                                     |
    | ask            | Array  | nested array containing price and quantity of lowest ask                                                      |
    
    
    ```json
    {
      "type": "update",
      "dataType": "V1TALevel1",
      "data": {
        "symbol": "BTCUSD",
        "bid": [
          "5199.5000",
          "61.95995262"
        ],
        "ask": [
          "5199.6000",
          "96.59626782"
        ],
        "sequenceNumber": "8",
        "datetime": "2020-06-29T06:28:55.500Z",
        "timestamp": "1593412135500"
      }
    }
    ``` 
    
    * L2 Snapshot Response

    | Name                    | Type   | Description                                                                                                                                                                                                              |
    |---------------------    |--------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
    | symbol                  | String | market symbol                                                                                                                                                                                                            |
    | bids                    | Array  | array of size 200 where even indices denote price, odd indices denote absolute quantities                                                                                                                                |
    | asks                    | Array  | array of size 200 where even indices denote price, odd indices denote absolute quantities                                                                                                                                |
    | sequenceNumberRange     | Array  | array of size 2 where first element denotes lower bound, second element denotes upper bound of sequence numbers <br /> lower and upper bound are equal for initial snapshot; this may differ for subsequent snapshots    |
    | datetime                | String | denotes the time the update was created by the engine, ISO 8601 with millisecond as string                                                                                                                               |
    | timestamp               | String | denotes the time the update was created by the engine                                                                                                                                                                    |
    | publishedAtTimestamp    | String | denotes the time the update was broadcasted to connected websockets                                                                                                                                                      |

    ```json
    {
      "type": "snapshot",
      "dataType": "V1TALevel2",
      "data": {
        "symbol": "BTCUSDC",
        "bids": [
          "5199.5000",
          "110.92467647",
          "5199.4000",
          "20.92470365",
          "5199.3000",
          "0.92473034",
          "5199.2000",
          "0.92475701",
          "5199.1000",
          "0.92478369",
          "5199.0000",
          "0.92481038",
          "5198.9000",
          "0.92483705",
          "5198.8000",
          "0.92486375",
          "5198.7000",
          "0.92489042",
          "5198.6000",
          "0.92491712"
        ],
        "asks": [
          "5199.6000",
          "96.37848193",
          "5199.7000",
          "0.92465082",
          "5199.8000",
          "11.04464563",
          "5199.9000",
          "0.92459696",
          "5200.0000",
          "0.92457029",
          "5200.1000",
          "0.92454362",
          "5200.2000",
          "0.92451695",
          "5200.3000",
          "0.92449028",
          "5200.4000",
          "0.92446361",
          "5200.5000",
          "0.92443695"
        ],
        "sequenceNumberRange": [
            1370055970,
            1370055970
        ],
        "datetime": "2025-02-14T07:15:33.797Z",
        "timestamp": "1739517333797",
        "publishedAtTimestamp": "1739517333798"
      }
    }
    ```
    
    See [connect to multi-orderbook web-socket](https://github.com/bullish-exchange/api-examples/blob/master/websocket/multi_orderbook_web_socket.py) for a sample Python script.

    ## Unified Anonymous Trades WebSocket (unauthenticated)
    **Route**
    - `/trading-api/v1/market-data/trades`
    
    This allows simultaneous trade subscriptions to multiple markets. Additionally, instead of sending trades one by one, trades are sent in batches.
    
    Upon subscribing to a market, the client will first receive a snapshot of the latest 100 trades, followed by batches of trade updates.
    
    ### Unified Anonymous Trade Subscription
    Anonymous trades from different markets to be subscribed to are controlled by the parameters in the subscription message listed below:
    | Parameters            | Type   | Description                                                                     |
    |:----------------------|:-------|:--------------------------------------------------------------------------------|
    | topic                 | String | anonymousTrades                                                                 |
    | symbol                | String | market symbol                                                                   |

    Trade Subscription Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "anonymousTrades",
          "symbol": "BTCUSDC"
      },
      "id": "1611082473000"
    }
    ```

    ### Trade Response Fields
    Each trade in a snapshot or update contains the following fields:
    | Name                 | Type      | Description                                                                               |
    |:---------------------|:----------|:------------------------------------------------------------------------------------------|
    | tradeId              | String    | unique trade ID                                                                           |
    | symbol               | String    | market symbol                                                                             |
    | price                | String    | price, see [asset value](#overview--price-and-quantity-precision) format                  |
    | quantity             | String    | quantity, see [asset value](#overview--price-and-quantity-precision) format               |
    | side                 | String    | order side                                                                                |
    | isTaker              | Boolean   | denotes whether this is a taker's trade                                                   |
    | otcMatchId           | String    | unique OTC match id                                                                       |
    | otcTradeId           | String    | unique Bullish OTC trade id                                                               |
    | clientOtcTradeId     | String    | unique client OTC trade id                                                                |
    | createdAtTimestamp   | String    | denotes the time the order was ACK'd by the exchange                                      |
    | createdAtDatetime    | String    | denotes the time the order was ACK'd by the exchange, ISO 8601 with millisecond as string |
    | publishedAtTimestamp | String    | denotes the time the update was broadcasted to connected websockets                       |

    ### Unified Anonymous Trade Snapshot Response
    The client will receive a trade snapshot with the latest 100 trades upon subscription.
    
    Sample:
    ```json
    {
      "type": "snapshot",
      "dataType": "V1TAAnonymousTradeUpdate",
      "data": {
        "trades": [
          {
            "tradeId": "100069000000063765",
            "isTaker": true,
            "price": "23404.8636",
            "createdAtTimestamp": "1721879160353",
            "quantity": "0.00029411",
            "publishedAtTimestamp": "1721879162124",
            "side": "SELL",
            "createdAtDatetime": "2024-07-25T03:46:00.353Z",
            "symbol": "BTCUSDC",
            "otcMatchId": "1",
            "otcTradeId": "200069000000063765",
            "clientOtcTradeId": "300069000000063765"
          },
          {
            "tradeId": "100069000000063764",
            "isTaker": true,
            "price": "23405.3380",
            "createdAtTimestamp": "1721879155351",
            "quantity": "0.00029411",
            "publishedAtTimestamp": "1721879162124",
            "side": "SELL",
            "createdAtDatetime": "2024-07-25T03:45:55.351Z",
            "symbol": "BTCUSDC",
            "otcMatchId": "2",
            "otcTradeId": "200069000000063764",
            "clientOtcTradeId": "300069000000063764"
          },
          ...
          {
              "tradeId": "100069000000063666",
              "isTaker": true,
              "price": "23001.8708",
              "createdAtTimestamp": "1721879028067",
              "quantity": "0.00029411",
              "publishedAtTimestamp": "1721879162124",
              "side": "SELL",
              "createdAtDatetime": "2024-07-25T03:43:48.067Z",
              "symbol": "BTCUSDC"
          }
        ],
        "createdAtTimestamp": "1721879160353",
        "publishedAtTimestamp": "1721879162125",
        "symbol": "BTCUSDC"
      }
    }
    ```

    ### Unified Anonymous Trade Update Response
    After receiving the snapshot, the client will receive subsequent trade updates in batches.
    
    Sample:
    ```json
    {
      "type": "update",
      "dataType": "V1TAAnonymousTradeUpdate",
      "data": {
        "trades": [
          {
            "tradeId": "100028000018887830",
            "isTaker": true,
            "price": "111.8940",
            "createdAtTimestamp": "1722408780738",
            "quantity": "0.00100000",
            "publishedAtTimestamp": "1722408780790",
            "side": "BUY",
            "createdAtDatetime": "2024-07-31T06:53:00.738Z",
            "symbol": "BTCUSDC"
          },
          {
            "tradeId": "100028000018887837",
            "isTaker": false,
            "price": "111.8716",
            "createdAtTimestamp": "1722408780738",
            "quantity": "0.00009595",
            "publishedAtTimestamp": "1722408780790",
            "side": "SELL",
            "createdAtDatetime": "2024-07-31T06:53:00.738Z",
            "symbol": "BTCUSDC",
            "otcMatchId": "10",
            "otcTradeId": "200028000018887837",
            "clientOtcTradeId": "300028000018887837"
          },
          ...
          {
            "tradeId": "100028000018887992",
            "isTaker": true,
            "price": "112.2896",
            "createdAtTimestamp": "1722408780786",
            "quantity": "0.00100000",
            "publishedAtTimestamp": "1722408780790",
            "side": "BUY",
            "createdAtDatetime": "2024-07-31T06:53:00.786Z",
            "symbol": "BTCUSDC",
            "otcMatchId": "11",
            "otcTradeId": "200028000018887992",
            "clientOtcTradeId": "300028000018887992"
          }
        ],
        "createdAtTimestamp": "1722408780786",
        "publishedAtTimestamp": "1722408780790",
        "symbol": "BTCUSDC"
      }
    }
    ```
    
    ## Unified Anonymous Tick WebSocket (unauthenticated)
    **Route**
    - `/trading-api/v1/market-data/tick`
    
    This allows simultaneous tick subscriptions to multiple markets. 
    
    Upon subscribing to a market, the client will first receive a snapshot of latest ticker, followed by updates. 
    See the data model: [Get Market Tick](#get-/v1/markets/-symbol-/tick)
    
    ### Unified Anonymous Tick Subscription
    Tick of different markets to be subscribed to, are controlled by parameters in the subscription message listed below:
    | Parameters            | Type   | Description                                                                     |
    |:----------------------|:-------|:--------------------------------------------------------------------------------|
    | topic                 | String | `tick`                                                                        |
    | symbol                | String | market symbol such as `BTCUSDC`                                                 |

    ### Tick Subscription Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "tick",
          "symbol": "BTCUSD"
      },
      "id": "1611082473000"
    }
    ```

    ### Keepalive Message Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "keepalivePing",
      "params": {},
      "id": "1611082473001"
    }
    ```
    
    ### Tick response example
    ```json
    {
      "type": "snapshot",
      "dataType": "V1TATickerResponse",
      "data": {
        "askVolume": "3.56000000",
        "average": "5200.0400",
        "baseVolume": "1.00000000",
        "bestAsk": "6543.0000",
        "bestBid": "2345.0000",
        "bidVolume": "2.00000000",
        "change": "0.0000",
        "close": "5200.0400",
        "createdAtTimestamp": "1591058897000",
        "publishedAtTimestamp": "1591058898000",
        "high": "5200.0400",
        "last": "5200.0400",
        "lastTradeDatetime": "2020-06-02T00:40:39.500Z",
        "lastTradeSize": "1.00000000",
        "low": "5200.0400",
        "open": "5200.0400",
        "percentage": "0.00",
        "quoteVolume": "5200.0400",
        "symbol": "BTC-USDC-PERP",
        "type": "ticker",
        "vwap": "5200.0400",
        "currentPrice": "0.0007",
        "ammData": [
          {
            "feeTierId": "1",
            "currentPrice": "0.0007",
            "baseReservesQuantity": "96153.00000000",
            "quoteReservesQuantity": "500005200.0400",
            "bidSpreadFee": "0.00000005",
            "askSpreadFee": "0.00000006"
          },
          {
            "feeTierId": "2",
            "currentPrice": "0.0017",
            "baseReservesQuantity": "96153.00000000",
            "quoteReservesQuantity": "500005200.0400",
            "bidSpreadFee": "0.00000015",
            "askSpreadFee": "0.00000016"
          }
        ],
        "createdAtDatetime": "2020-06-02T00:48:17.000Z",
        "markPrice": "26000.0000",
        "fundingRate": "0.114100",
        "openInterest": "9.00000000"
      }
    }
    ```
    
    ## Anonymous Market Data Price Tick (unauthenticated)
    **Route**
    - `/trading-api/v1/market-data/tick/{symbol}`
    
    **Note**: This endpoint does not require subscriptions.
    
    On connection, the client receives current Tick by Market Symbol. See the data model: [Get Market Tick](#get-/v1/markets/-symbol-/tick)

    ### Tick response example
    ```json
    {
      "type": "snapshot",
      "dataType": "V1TATickerResponse",
      "data": {
        "askVolume": "3.56000000",
        "average": "5200.0400",
        "baseVolume": "1.00000000",
        "bestAsk": "6543.0000",
        "bestBid": "2345.0000",
        "bidVolume": "2.00000000",
        "change": "0.0000",
        "close": "5200.0400",
        "createdAtTimestamp": "1591058897000",
        "publishedAtTimestamp": "1591058898000",
        "high": "5200.0400",
        "last": "5200.0400",
        "lastTradeDatetime": "2020-06-02T00:40:39.500Z",
        "lastTradeSize": "1.00000000",
        "low": "5200.0400",
        "open": "5200.0400",
        "percentage": "0.00",
        "quoteVolume": "5200.0400",
        "symbol": "BTC-USDC-PERP",
        "type": "ticker",
        "vwap": "5200.0400",
        "currentPrice": "0.0007",
        "ammData": [
          {
            "feeTierId": "1",
            "currentPrice": "0.0007",
            "baseReservesQuantity": "96153.00000000",
            "quoteReservesQuantity": "500005200.0400",
            "bidSpreadFee": "0.00000005",
            "askSpreadFee": "0.00000006"
          },
          {
            "feeTierId": "2",
            "currentPrice": "0.0017",
            "baseReservesQuantity": "96153.00000000",
            "quoteReservesQuantity": "500005200.0400",
            "bidSpreadFee": "0.00000015",
            "askSpreadFee": "0.00000016"
          }
        ],
        "createdAtDatetime": "2020-06-02T00:48:17.000Z",
        "markPrice": "26000.0000",
        "fundingRate": "0.114100",
        "openInterest": "9.00000000"
      }
    }
    ```
    
  
    ## Index Data websocket (unauthenticated)
    **Route**
    - `/trading-api/v1/index-data`
    
    ### Index Price Subscription
    The index price of different assets to be subscribed are controlled by the parameters in the subscription message listed below:
    | Parameters            | Type   | Description                                                                     |
    |:----------------------|:-------|:--------------------------------------------------------------------------------|
    | topic                 | String | Index Price: `indexPrice` <br/>                                                   |
    | assetSymbol           | String | Asset symbol, such as `BTC` or `USDC`                                           |

    Index Price Subscription Sample:
    ```json
    {
      "jsonrpc": "2.0",
      "type": "command",
      "method": "subscribe",
      "params": {
          "topic": "indexPrice",
          "assetSymbol": "USDC"
      },
      "id": "1611082473000"
    }
    ```
    
    ### IndexPrice Response
    On successful subscription for an `assetSymbol`, the client receives a snapshot with the current index price, and updates after. 
    
    | Name                 | Type      | Description                                                                               |
    |:---------------------|:----------|:------------------------------------------------------------------------------------------|
    | assetSymbol          | String    | asset symbol                                                                              |
    | price                | String    | price in USD, see [asset value](#overview--price-and-quantity-precision) format           |
    | updatedAtDatetime    | String    | denotes the time the index price was updated by the exchange, in ISO 8601 format          |
    | updatedAtTimestamp   | String    | denotes the epoch millisecond time the index price was updated by the exchange            |
    
    ```json
    {
      "type": "update",
      "dataType": "V1TAIndexPrice",
      "data": {
        "assetSymbol": "USDC",
        "price": "1.0000",
        "updatedAtDatetime": "2024-06-29T06:29:50.500Z",
        "updatedAtTimestamp": "1719642590000"
      }
    }
    ```

    ## Private Data WebSocket (authenticated)
    - All private data updates are realtime.

    Establishing a websocket connection
    1. Getting private data from a single trading account.
      - Connect to `/trading-api/v1/private-data?tradingAccountId=<Id of the Trading Account>`
      - For example, to subscribe to the `orders` topic, the following subscription message is sent:
      ```json
        {
            "jsonrpc": "2.0",
            "type": "command",
            "method": "subscribe",
            "params": {
                "topic": "orders"
            },
            "id": "1611082473000"
        }
      ```
      - It is possible to subscribe to multiple topics with a single subscription message. For example, a topic of `assetAccounts+derivativesPositionsV2` 
        would subscribe to both `assetAccounts` and `derivativesPositionsV2`
    
    2. Getting private data from multiple trading accounts.
      - Connect to `/trading-api/v1/private-data`
      - For example, to subscribe to the `orders` topic for each of your trading accounts, the following subscription message is sent for each trading account you wish to subscribe to:
      ```json
        {
            "jsonrpc": "2.0",
            "type": "command",
            "method": "subscribe",
            "params": {
                "topic": "orders",
                "tradingAccountId": "<Id of the Trading Account>"
            },
            "id": "1611082473000"
        }
      ```

    | Topic                  | Description                                                                                                                           | Data Type                | Subscription Type |
    | :--                    | :--                                                                                                                                   | :--                      | :--               |
    | orders                 | Provides snapshot and updates on your orders. The snapshot will contain all open orders and the 20 most recent closed orders.         | `V1TAOrder`              | By `<TOPIC>`      |
    | trades                 | Provides snapshot and updates on your trades. The snapshot will contain the 20 most recent trades.                                    | `V1TATrade`              | By `<TOPIC>`      |
    | ~spotAccounts~         | `Deprecated`[[more info](.././deprecated/index.html#overview--spot-account)] Provides snapshot and updates on assets in your account. | `V1TASpotAccount`        | By `<TOPIC>`      |
    | assetAccounts          | Provides snapshot and updates on assets in your account.                                                                              | `V1TAAssetAccount`       | By `<TOPIC>`      |
    | tradingAccounts        | Provides snapshot and updates on your trading account summary.                                                                        | `V1TATradingAccount`     | By `<TOPIC>`      |
    | heartbeat              | Provides heartbeat updates for healthcheck.                                                                                           | `V1TAHeartbeat`          | By `<TOPIC>`      |
    | ~derivativesPositions~ | `Deprecated`[*Replaced by:* `derivativesPositionsV2`] Provides derivative position information on your trading account.               | `V1TAPerpetualPosition`  | By `<TOPIC>`      |
    | derivativesPositionsV2 | Provides derivative position information on your trading account.                                                                     | `V1TADerivativesPosition`| By `<TOPIC>`      |
    | ammInstructions        | Provides amm instructions update on your trading account.                                                                             | `V1TAAmmInstruction`     | By `<TOPIC>`      |
    | mmpTrigger             | Provides snapshot and updates on your market maker protection trigger events.                                                         | `V1TAMMPTrigger`         | By `<TOPIC>`      |
    | mmpRequest             | Provides snapshot and updates on your market maker protection configurations.                                                         | `V1TAMMPConfigRequest`   | By `<TOPIC>`      |
    ### orders response

    | Name                  | Type      | Description                                                                                                                                                                                        |
    |:-------------------   |:----------|:------------------------------------------------------------------------------------------                                                                                                         |
    | ~handle~              | String    | unique numeric (i64) identifier generated on the client side expressed as a string value <br /><br />`Deprecated`*to be remove towards the end of Q3 2024.* <br /> *Replaced by:* `clientOrderId`        |
    | clientOrderId         | String    | unique numeric (i64) identifier generated on the client side expressed as a string value                                                                                                           |
    | orderId               | String    | unique order ID                                                                                                                                                                                    |
    | symbol                | String    | market symbol                                                                                                                                                                                      |
    | price                 | String    | price, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                           |
    | averageFillPrice      | String    | average fill price, see [asset value](#overview--price-and-quantity-precision) format                                                                                                              |
    | stopPrice             | String    | stop price, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                      |
    | ~margin~              | Boolean   | indicates if the order was allowed to borrow (does not indicate that borrowing occurred) <br /><br />`Deprecated`*to be remove towards the end of Q3 2024.* <br /> *Replaced by:* `allowBorrow`          |
    | allowBorrow           | Boolean   | indicates if the order was allowed to borrow (does not indicate that borrowing occurred)                                                                                                           |
    | quantity              | String    | quantity, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                        |
    | quoteAmount           | String    | quote quantity deducted from asset account, see [asset value](#overview--price-and-quantity-precision) format                                                                                      |
    | quantityFilled        | String    | quantity filled, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                 |
    | baseFee               | String    | base fee rate that will be charged upon trade execution, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                        |
    | quoteFee              | String    | quote fee rate that will be charged upon trade execution, see [asset value](#overview--price-and-quantity-precision) format                                                                                                                       |
    | ~borrowedQuantity~    | String    | quantity borrowed, see [asset value](#overview--price-and-quantity-precision) format - BUY order borrows quote, SELL order borrows base <br /><br />`Deprecated`*to be remove towards the end of Q3 2024.* <br /> *Replaced by:* `borrowedBaseQuantity` & `borrowedQuoteQuantity` |
    | borrowedBaseQuantity  | String    | base quantity borrowed, see [asset value](#overview--price-and-quantity-precision) format                                                                                                          |
    | borrowedQuoteQuantity | String    | quote quantity borrowed, see [asset value](#overview--price-and-quantity-precision) format                                                                                                         |
    | isLiquidation         | Boolean   | indicates if the order was executed as a liquidation order                                                                                                                                         |
    | side                  | String    | order side                                                                                                                                                                                         |
    | type                  | String    | order type                                                                                                                                                                                         |
    | timeInForce           | String    | time in force                                                                                                                                                                                      |
    | status                | String    | order status                                                                                                                                                                                       |
    | statusReason          | String    | status reason, describes why the order is in a specific state                                                                                                                                      |
    | statusReasonCode      | Integer   | status reason code, see [details](https://github.com/bullish-exchange/api-docs/wiki/Error-&-Rejection-Codes#order-statusreasoncode-map)                                                                                                                           |
    | createdAtDatetime     | String    | denotes the time the order was ACK'd by the exchange, ISO 8601 with millisecond as string                                                                                                          |
    | createdAtTimestamp    | String    | denotes the time the order was ACK'd by the exchange                                                                                                                                               |
    | publishedAtTimestamp  | String    | denotes the time the update was broadcasted to connected websockets                                                                                                                                |

    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TAOrder",
      "data": [
        {
          "handle": null,
          "orderId": "392883006043848705",
          "symbol": "BTCUSD",
          "price": "66858.2000",
          "averageFillPrice": "66858.2000",
          "stopPrice": null,
          "margin": false,
          "quantity": "2.00000000",
          "quantityFilled": "2.00000000",
          "quoteAmount": "23000.0000",
          "baseFee": "0.00000000",
          "quoteFee": "0.0005",
          "side": "BUY",
          "borrowedQuantity": "0.0010",
          "isLiquidation": false,
          "type": "LMT",
          "timeInForce": "GTC",
          "status": "CLOSED",
          "statusReason": "Executed",
          "statusReasonCode": 6002,
          "createdAtDatetime": "2021-12-30T07:36:35.918Z",
          "createdAtTimestamp": "1640849795918",
          "publishedAtTimestamp": "1640849795920"
        }
      ]
    }
    ```

    ### trades response

    | Name                   | Type      | Description                                                                                                    |
    |:-----------------------|:----------|:---------------------------------------------------------------------------------------------------------------|
    | tradeId                | String    | unique trade ID                                                                                                |
    | orderId                | String    | unique order ID                                                                                                |
    | handle                 | String    | unique numeric identifier (i64) generated on the client side expressed as a string value                       |
    | symbol                 | String    | market symbol                                                                                                  |
    | price                  | String    | price, see [asset value](#overview--price-and-quantity-precision) format                                       |
    | quantity               | String    | quantity, see [asset value](#overview--price-and-quantity-precision) format                                    |
    | quoteAmount            | String    | quote quantity deducted from asset account, see [asset value](#overview-price-and-quantity-precision) format   |
    | baseFee                | String    | base fee, see [asset value](#overview--price-and-quantity-precision) format                                    |
    | quoteFee               | String    | quote fee, see [asset value](#overview--price-and-quantity-precision) format                                   |
    | side                   | String    | order side                                                                                                     |
    | tradeRebateAmount      | String    | amount of rebate that is credited to the user as part of the trade                                         |
    | tradeRebateAssetSymbol | String    | symbol of the asset in which the rebate is paid                                                                |
    | isTaker                | Boolean   | denotes whether this is a taker's trade                                                                        |
    | otcMatchId             | String    | unique OTC match id                                                                                            |
    | otcTradeId             | String    | unique Bullish OTC trade id                                                                                    |
    | clientOtcTradeId       | String    | unique client OTC trade id                                                                                     |
    | createdAtDatetime      | String    | denotes the time the trade was executed by the exchange, ISO 8601 with millisecond as string                   |
    | createdAtTimestamp     | String    | denotes the time the trade was executed by the exchange                                                        |
    | publishedAtTimestamp   | String    | denotes the time the update was broadcasted to connected websockets                                            |

    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TATrade",
      "data": [
        {
          "tradeId": "100014000000000118",
          "orderId": "392883006043848705",
          "handle": "123456",
          "symbol": "BTCUSD",
          "price": "66858.2000",
          "quantity": "2.00000000",
          "quoteAmount": "23000.0000",
          "baseFee": "0.00000000",
          "quoteFee": "66.8582",
          "side": "BUY",
          "isTaker": false,
          "tradeRebateAmount": "3.0000",
          "tradeRebateAssetSymbol": "USDC",
          "otcMatchId": "15",
          "otcTradeId": "200014000000000118",
          "clientOtcTradeId": "300014000000000118",
          "createdAtDatetime": "2021-12-30T07:36:35.918Z",
          "createdAtTimestamp": "1640849795918",
          "publishedAtTimestamp": "1640849795920"
        }
      ]
    }
    ```
    
    ### assetAccounts response
    
    - `V1TAAssetAccount` provides a more granular view of the assets in your trading account compared to `V1TASpotAccount`. 
    
    
    | Name                 | Type      | Description                                                                                                                                                                                  |
    |----------------------|-----------|----------------------------------------------------------------------------------------------------------------------------------------------------                                          | 
    | tradingAccountId     | String    | id of the trading account                                                                                                                                                                    |
    | assetId              | String    | asset ID                                                                                                                                                                                     |
    | assetSymbol          | String    | asset symbol                                                                                                                                                                                 |
    | availableQuantity    | String    | the assets that are available to use on the account, see [asset value](#overview--price-and-quantity-precision) format                                                                       |
    | borrowedQuantity     | String    | the assets on the account that are borrowed, see [asset value](#overview--price-and-quantity-precision) format                                                                               |
    | lockedQuantity       | String    | the assets on the account that are locked in orders, loans and AMM instructions, see [asset value](#overview--price-and-quantity-precision) format                                           |
    | loanedQuantity       | String    | the assets on the account that are being loaned, see [asset value](#overview--price-and-quantity-precision) format                                                                           |
    | updatedAtDatetime    | String    | denotes the time the asset account was updated by the exchange, ISO 8601 with millisecond as string                                                                                          |
    | updatedAtTimestamp   | String    | denotes the time the asset account was updated by the exchange                                                                                                                               |
    | publishedAtTimestamp | String    | denotes the time the update was broadcasted to connected websockets                                                                                                                          |
    
    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TAAssetAccount",
      "data": [
        {
          "tradingAccountId": "1111",
          "assetId": "1",
          "assetSymbol": "BTC",
          "availableQuantity": "4.00000000",
          "borrowedQuantity": "20.00000000",
          "lockedQuantity": "0.00000000",
          "loanedQuantity": "10.00000000",
          "updatedAtDatetime": "2021-12-30T07:36:35.918Z",
          "updatedAtTimestamp": "1640849795918",
          "publishedAtTimestamp": "1640849795920"
        },
        {
          "tradingAccountId": "1111",
          "assetId": "2",
          "assetSymbol": "USD",
          "availableQuantity": "229016.0734",
          "borrowedQuantity": "20000.0000",
          "lockedQuantity": "0.0000",
          "loanedQuantity": "10000.0000",
          "updatedAtDatetime": "2021-12-30T07:36:35.918Z",
          "updatedAtTimestamp": "1640849795918",
          "publishedAtTimestamp": "1640849795920"
        }
      ]
    }
    ```
    
    ### tradingAccounts response
    
    -  Provides a summary of the total borrowed and total collateral values on the specific trading account ID. 
    `totalBorrowedQuantity` and `totalCollateralQuantity` do not represent the absolute quantity of the borrowed assets and 
    are notional values represented in the reference asset.
    -  `snapshot` contains a list with a single entry corresponding to the trading account ID specified in the `tradingAccountId` 
    query parameter when opening the websocket connection.
    
    | Name                    | Type      | Description                                                                                           |
    |-------------------------|-----------|-------------------------------------------------------------------------------------------------------|
    | tradingAccountId        | String    | id of the trading account                                                                             |
    | totalBorrowedQuantity   | String    | total borrowed across all assets in this trading account displayed in the reference asset             |        
    | totalCollateralQuantity | String    | total collateral across all assets in this trading account displayed in the reference asset           |
    | totalBorrowedUSD        | String    | total borrowed across all assets in this trading account displayed in USD                             |
    | totalCollateralUSD      | String    | total collateral across all assets in this trading account displayed in USD                           |
    | initialMarginUSD        | String    | The minimum margin one must maintain in order to be able to purposefully increase risk                |
    | warningMarginUSD        | String    | The minimum margin when the customer will receive warning via email/notifications over UI             |
    | liquidationMarginUSD    | String    | The minimum value of margin one must maintain in order to avoid liquidation                           |
    | fullLiquidationMarginUSD| String    | The value of margin when full liquidation occurs                                                      |
    | endCustomerId           | String    | The end customer id used for self trade prevention (default is institution id, max 32 characters)     |
    | defaultedMarginUSD      | String    | The value of margin when this trading account will be moved into a Defaulted state                    |
    | riskLimitUSD            | String    | The maximum allowed borrowing for this trading account displayed in USD                               |
    | totalLiabilitiesUSD     | String    | The total liabilities for this trading account displayed in USD                       |
    | maxInitialLeverage      | String    | The maximum initial leverage                                                                          |
    | isPrimaryAccount        | String    | Whether this trading account is the primary account                                                   |
    | isBorrowing             | String    | Whether this trading account is borrowing any asset                                                   |
    | isLending               | String    | Whether this trading account has any open loan offers                                                 |
    | isDefaulted             | String    | Whether this trading account is in a defaulted state                                                  |
    | ~takerFee~                | String    | Deprecated and no longer accurate. See `tradeFeeRate` at [Get Trading Account](#get-/v1/accounts/trading-accounts/-tradingAccountId-) instead |
    | ~makerFee~                | String    | Deprecated and no longer accurate. See `tradeFeeRate` at [Get Trading Account](#get-/v1/accounts/trading-accounts/-tradingAccountId-) instead |
    | referenceAssetSymbol    | String    | asset symbol                                                                                          |
    | liquidityAddonUSD       | String    | Expected market impact of unwinding the portfolio in the case of a liquidation event                  |
    | marketRiskUSD           | String    | The worst possible loss on the portfolio based on scenario analysis                                   |
    | marginProfile                          | Object | Contains the market risk multipliers applied to a trading account to derive the five individual Margin Requirement values         |
    | initialMarketRiskMultiplierPct         | String | Market risk multiplier used to calculate initial margin requirement of the account                                               |
    | warningMarketRiskMultiplierPct         | String | Market risk multiplier used to calculate warning margin requirement of the account                                               |
    | liquidationMarketRiskMultiplierPct     | String | Market risk multiplier used to calculate liquidation margin requirement of the account                                           |
    | fullLiquidationMarketRiskMultiplierPct | String | Market risk multiplier used to calculate full liquidation margin requirement of the account                                      |
    | defaultedMarketRiskMultiplierPct       | String | Market risk multiplier used to calculate defaulted margin requirement of the account                                             | 
    | updatedAtDatetime       | String    | denotes the time the trading account was updated by the exchange, ISO 8601 with millisecond as string |
    | updatedAtTimestamp      | String    | denotes the time the trading account was updated by the exchange                                      |
    | publishedAtTimestamp    | String    | denotes the time the update was broadcasted to connected websockets                                   |
    
    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TATradingAccount",
      "data": [
        {
          "tradingAccountId": "1111",
          "totalBorrowedQuantity": "12000.0000",
          "totalCollateralQuantity": "13000.0000",
          "totalBorrowedUSD": "12000.0000",
          "totalCollateralUSD": "13000.0000",
          "referenceAssetSymbol": "USD",
          "initialMarginUSD": "900000.0000",
          "warningMarginUSD": "700000.0000",
          "liquidationMarginUSD": "600000.0000",
          "fullLiquidationMarginUSD": "500000.0000",
          "endCustomerId" : "PrimeBroker",
          "defaultedMarginUSD": "300000.0000",
          "riskLimitUSD": "1000000.0000",
          "totalLiabilitiesUSD": "13000.0000",
          "maxInitialLeverage": "3",
          "isPrimaryAccount": true,
          "isBorrowing": true,
          "isLending": false,
          "isDefaulted": false,
          "takerFee": null,
          "makerFee": null,
          "liquidityAddonUSD": "100.0000",
          "marketRiskUSD": "200.0000",
          "marginProfile": {
            "initialMarketRiskMultiplierPct": "200.00",
            "warningMarketRiskMultiplierPct": "150.00",
            "liquidationMarketRiskMultiplierPct": "100.00",
            "fullLiquidationMarketRiskMultiplierPct": "75.00",
            "defaultedMarketRiskMultiplierPct": "50.00"
          },
          "updatedAtDatetime": "2021-12-30T07:36:35.918Z",
          "updatedAtTimestamp": "1640849795918",
          "publishedAtTimestamp": "1640849795920"
        }
      ]
    }
    ```
    
    ### heartbeat response

    -  Provides heartbeat update every 30s as an indicator of platform healthiness. Please refer to the [heartbeat session](#overview--heartbeat) for the details.
    
    | Name                    | Type      | Description                                                                                           |
    |-------------------------|-----------|-------------------------------------------------------------------------------------------------------|
    | sequenceNumber          | String    | sequence number of the heartbeat                                                                      |
    | createdAtTimestamp      | String    | time at which the heartbeat is generated                                                              |
    
    ```json
    {
      "type": "update",
      "dataType": "V1TAHeartbeat",
      "data": [
        {
          "sequenceNumber": "3",
          "createdAtTimestamp": "1611082473000"
        }
      ]
    }
    ```
    ### Derivative position response
    `Deprecated`: *Topic derivativesPosition will be replaced by `derivativesPositionV2`*
    -  Provide a detail view of the derivative position of each market.
    
    | Name                    | Type      | Description                                                                                                                                                                                                   |
    |-------------------------|-----------|-------------------------------------------------------------------------------------------------------                                                                                                        |
    | tradingAccountId        | String    | Id of the trading account                                                                                                                                                                                     |
    | symbol                  | String    | Market symbol, eg. BTC-USDC-PERP                                                                                                                                                                             |
    | side                    | String    | Side of the position                                                                                                                                                                                          |
    | quantity                | String    | Current size of the  position [asset value](#overview--price-and-quantity-precision) format                                                                                                                   |
    | notional                | String    | Notional value of the current position, calculated using the mark price                                                                                                                                       |
    | entryNotional           | String    | Notional value of the position, using the average entry price                                                                                                                                                 |
    | mtmPnl                  | String    | Sum of all mark-to-market profits and losses plus profits and losses realised from trading, accumulated since the last settlement                                                                             |
    | reportedMtmPnl          | String    | The profit/losses from the net price change since the last time the absolute quantity decreased. It is updated with every mark to market and is not updated during settlement or a position size increase     |
    | reportedFundingPnl      | String    | Sum of all funding payments received  since the position was opened. This is updated every time funding is paid.                                                                                              |
    | realizedPnl             | String    | Total profits realized since the trading account first opened this position. This is only updated every time a position’s absolute quantity (aka size) is reduced.                                            |
    | createdAtDatetime       | String    | denotes the time the position was created by the exchange, ISO 8601 with millisecond as string                                                                                                                |
    | createdAtTimestamp      | String    | denotes the time the position was created by the exchange, number of milliseconds since EPOCH                                                                                                                 |
    | updatedAtDatetime       | String    | denotes the time the position was updated by the exchange, ISO 8601 with millisecond as string                                                                                                                |
    | updatedAtTimestamp      | String    | denotes the time the position was updated by the exchange  number of milliseconds since EPOCH                                                                                                                 |
    | publishedAtTimestamp    | String    | denotes the time the update was broadcasted to connected websockets                                                                                                                                           |
    
    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TAPerpetualPosition",
      "data": [
        {
          "tradingAccountId": "111234567890",
          "symbol": "BTC-USDC-PERP",
          "side": "BUY",
          "quantity": "1.00000000",
          "notional": "30000.0000",
          "entryNotional": "30000.0000",
          "mtmPnl": "110.0000",
          "reportedMtmPnl": "120.0000",
          "reportedFundingPnl": "130.0000",
          "realizedPnl": "140.0000",
          "createdAtDatetime": "2020-01-01T00:00:00.000Z",
          "createdAtTimestamp": "1577836800000",
          "updatedAtDatetime": "2020-01-02T00:00:00.000Z",
          "updatedAtTimestamp": "1577923200000",
          "publishedAtTimestamp": "1577923300000"
        }
      ]
    }
    ```
    ### Derivative position V2 response
    -  Provide a detail view of the derivative position of each market.
    
    | Name                    | Type      | Description                                                                                                                                                                                                   |
    |-------------------------|-----------|-------------------------------------------------------------------------------------------------------                                                                                                        |
    | tradingAccountId        | String    | Id of the trading account                                                                                                                                                                                     |
    | symbol                  | String    | Market symbol, eg. BTC-USDC-PERP                                                                                                                                                                              |
    | side                    | String    | Side of the position                                                                                                                                                                                          |
    | quantity                | String    | Current size of the  position [asset value](#overview--price-and-quantity-precision) format                                                                                                                   |
    | notional                | String    | Notional value of the current position, calculated using the mark price                                                                                                                                       |
    | entryNotional           | String    | Notional value of the position, using the average entry price                                                                                                                                                 |
    | mtmPnl                  | String    | Sum of all mark-to-market profits and losses plus profits and losses realised from trading, accumulated since the last settlement                                                                             |
    | reportedMtmPnl          | String    | The profit/losses from the net price change since the last time the absolute quantity decreased. It is updated with every mark to market and is not updated during settlement or a position size increase     |
    | reportedFundingPnl      | String    | Sum of all funding payments received  since the position was opened. This is updated every time funding is paid.                                                                                              |
    | realizedPnl             | String    | Total profits realized since the trading account first opened this position. This is only updated every time a position’s absolute quantity (aka size) is reduced.                                            |
    | settlementAssetSymbol   | String    | Settlement asset symbol                                                                                                                                                                                       |
    | eventType               | String    | Derivatives position update event types                                                                                                                                                                       |
    | createdAtDatetime       | String    | denotes the time the position was created by the exchange, ISO 8601 with millisecond as string                                                                                                                |
    | createdAtTimestamp      | String    | denotes the time the position was created by the exchange, number of milliseconds since EPOCH                                                                                                                 |
    | updatedAtDatetime       | String    | denotes the time the position was updated by the exchange, ISO 8601 with millisecond as string                                                                                                                |
    | updatedAtTimestamp      | String    | denotes the time the position was updated by the exchange  number of milliseconds since EPOCH                                                                                                                 |
    | publishedAtTimestamp    | String    | denotes the time the update was broadcasted to connected websockets                                                                                                                                           |
    
    ```json
    {
      "tradingAccountId": "1111",
      "type": "snapshot",
      "dataType": "V1TADerivativesPosition",
      "data": [
        {
          "tradingAccountId": "111234567890",
          "symbol": "BTC-USDC-PERP",
          "side": "BUY",
          "quantity": "1.00000000",
          "notional": "30000.0000",
          "entryNotional": "30000.0000",
          "mtmPnl": "110.0000",
          "reportedMtmPnl": "120.0000",
          "reportedFundingPnl": "130.0000",
          "realizedPnl": "140.0000",
          "settlementAssetSymbol": "USDC",
          "eventType": "settlementUpdate",
          "createdAtDatetime": "2020-01-01T00:00:00.000Z",
          "createdAtTimestamp": "1577836800000",
          "updatedAtDatetime": "2020-01-02T00:00:00.000Z",
          "updatedAtTimestamp": "1577923200000",
          "publishedAtTimestamp": "1577923300000"
        }
      ]
    }
    ```
    ### ammInstruction response
    
    - Provides `updates` of the active AMM instructions on the specific trading account ID.
    - This topic does not provide `snapshot`
    
    | Name                  | Type   | Description                                                                                                                                   |
    |-----------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------|
    | tradingAccountId      | String | id of the trading account                                                                                                                     |
    | instructionId         | String | unique AMM instruction ID                                                                                                                     |
    | symbol                | String | market symbol                                                                                                                                 |
    | baseFee               | String | base fee, see [asset value](#overview--price-and-quantity-precision) format                                                                   |
    | quoteFee              | String | quote fee, see [asset value](#overview--price-and-quantity-precision) format                                                                  |
    | status                | String | order status                                                                                                                                  |
    | statusReason          | String | status reason, describes why the order is in a specific state                                                                                 |
    | statusReasonCode      | String | status reason code, see [details](#overview--error--rejection-codes)                                                                      |
    | createdAtDatetime     | String | denotes the time the order was ACK'd by the exchange, ISO 8601 with millisecond as string                                                     |
    | createdAtTimestamp    | String | denotes the time the order was ACK'd by the exchange                                                                                          |
    | baseCurrentQuantity   | String | amount of base asset this AMM instruction currently holds, only for AMM instruction with `OPEN` status                                        |
    | baseInvestQuantity    | String | initial base investment                                                                                                                       |
    | basePrice             | String | current price of base asset                                                                                                                   |
    | baseWithdrawQuantity  | String | amount of base asset returned when AMM instruction is terminated                                                                              |
    | currentValue          | String | value of assets (base and quote) in USD amount that this AMM instruction currently holds                                                      |
    | feeTierId             | String | unique fee tier ID, see [Get Market By Symbol](#get-/v1/markets/-symbol-)                                                                        |
    | finalValue            | String | value of assets (base and quote) in USD amount when AMM instruction was terminated, only for AMM instruction with `CLOSED` status             |
    | impermanentLoss       | String | impermanent loss                                                                                                                              |
    | liquidity             | String | liquidity amount                                                                                                                              |
    | lastDistributedPrice  | String | (Perpetual market only) The price used at the time of settlement for AMM Instructions that can be used to determine mtmPnl and the actual Pnl |
    | lowerBound            | String | lower bound of price range, in quote currency                                                                                                 |
    | price                 | String | current price of AMM, see [Get Tick By Symbol](#get-/v1/markets/-symbol-/tick)                                                                   |
    | quoteCurrentQuantity  | String | amount of quote asset this AMM instruction currently holds, only for AMM instruction with `OPEN` status                                       |
    | quoteInvestQuantity   | String | initial quote investment                                                                                                                      |
    | quotePrice            | String | current price of quote asset                                                                                                                  |
    | quoteWithdrawQuantity | String | amount of quote asset returned when AMM instruction is terminated                                                                             |
    | requestID             | String | unique request ID                                                                                                                             |
    | updatedAtDatetime     | String | denotes the time the AMM instruction was updated by the exchange, ISO 8601 with millisecond as string                                         |
    | updatedAtTimestamp    | String | denotes the time the AMM instruction was updated by the exchange                                                                              |
    | upperBound            | String | upper bound of price range, in quote currency                                                                                                 |
    
    ```json
    {
      "tradingAccountId": "1111",
      "type": "update",
      "dataType": "V1TAAmmInstruction",
      "data": [
        {
          "instructionId": "100",
          "symbol": "BTCUSDC",
          "baseFee": "1.00000000",
          "quoteFee": "1.0000",
          "status": "OPEN",
          "statusReason": "Ok",
          "statusReasonCode": "1001",
          "createdAtDatetime": "2021-05-20T01:01:01.000Z",
          "createdAtTimestamp": "1621490985000",
          "baseCurrentQuantity": "0.00000000",
          "baseInvestQuantity": "0.00000008",
          "basePrice": "345.67000000",
          "baseWithdrawQuantity": "0.00000010",
          "currentValue": "0.0000",
          "feeTierId": "1",
          "finalValue": "0.0001",
          "impermanentLoss": "0.0000",
          "liquidity": "0.0001",
          "lowerBound": "0.0013",
          "price": "456.7800",
          "quoteCurrentQuantity": "0.0000",
          "quoteInvestQuantity": "0.0009",
          "quotePrice": "1.0000",
          "quoteWithdrawQuantity": "0.0011",
          "lastDistributedPrice": null
          "requestId": "197735387747975680",
          "updatedAtDatetime": "2021-05-20T01:01:01.000Z",
          "updatedAtTimestamp": "1621490985000",
          "upperBound": "14000.0000",
        }
    }
    ```
    
    ### mmpTrigger response

    | Name                  | Type   | Description                                                                                                                                   |
    |-----------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------|
    | tradingAccountId      | String | id of the trading account                                                                                                                     |
    | mmpTriggerId          | String | unique MMP trigger ID                                                                                                                         |
    | underlyingAssetSymbol | String | underlying asset symbol                                                                                                                       |
    | triggeredBy           | String | trigger reason                                                                                                                                |
    | frozenTimeInSecond    | String | duration for which a market maker’s trading activity is temporarily halted after a protective measure is triggered                            |
    | frozenStartTime       | String | start time of the MMP trigger in epoch milliseconds                                                                                           |
    | frozenUntil           | String | end time of the MMP trigger in epoch milliseconds                                                                                             |

    ```json
    {
      "tradingAccountId": "111000000000000",
      "type": "snapshot",
      "dataType": "V1TAMMPTrigger",
      "data": [
        {
          "mmpTriggerId": "100000000000000"
          "tradingAccountId": "111000000000000",
          "underlyingAssetSymbol": "BTC",
          "triggeredBy": "Delta Limit",
          "frozenTimeInSecond": "10",
          "frozenStartTime": "1611082473000",
          "frozenUntil": "1611082483000"
        }
      ]
    }
    ```
    ### mmpRequest response

    | Name                  | Type   | Description                                                                                                                                   |
    |-----------------------|--------|-----------------------------------------------------------------------------------------------------------------------------------------------|
    | tradingAccountId      | String | id of the trading account                                                                                                                     |
    | requestId             | String | id of the request                                                                                                                             |
    | assetSymbol           | String | underlying asset symbol                                                                                                                       |
    | windowTimeInSecond    | String | time window during which the MMP checks are conducted                                                                                         |
    | frozenTimeInSecond    | String | duration for which a market maker’s trading activity is temporarily halted after a protective measure is triggered                            |
    | quantityLimit         | String | cap on the total number of contracts that a market maker can trade within `windowTimeInSeconds`                                               |
    | deltaLimit            | String | net delta exposure that a market maker can accumulate within `windowTimeInSeconds`                                                            |
    | status                | String | status of the request                                                                                                                         |
    | statusReason          | String | status reason, describes why the request is in a specific state                                                                               |
    | isReset               | String | boolean value that indicates if it was a set or reset MMP configuration request                                                               |
    | createdAt             | String | denotes the time the request was ACK'd by the exchange                                                                                        |

    ```json
    {
      "tradingAccountId": "111000000000000",
      "type": "snapshot",
      "dataType": "V1TAMMPConfigRequest",
      "data": [
        {
          "requestId": "1",
          "tradingAccountId": "111000000000000",
          "assetSymbol": "BTC",
          "windowTimeInSecond": "10",
          "frozenTimeInSecond": "10",
          "quantityLimit": "1000",
          "deltaLimit": "500",
          "status": "CLOSED",
          "statusReason": "Ok",
          "isReset": "false",
          "createdAt": "1611082473000"
        }
      ]
    }
    ```
    
    See [connect to private data web-socket](https://github.com/bullish-exchange/api-examples/blob/master/websocket/private_data_web_socket.py) for a sample Python script.

    # Quickly Try The API

    To quickly try the API you can use the `TRY` green button which you can find on the bottom right side of each endpoint documentation section, next to `FILL EXAMPLE` and `CLEAR` buttons.

    ## Try The Non-Authenticated Endpoints

    To try the endpoints for which the authentication is not required follow below steps:
    1. Fill in the input parameters, including the request headers
    2. Click the `TRY` green button
    3. Inspect the results

    ## Try The Authenticated Endpoints

    To try the endpoints for which authentication is required follow below steps:
    1. Obtain a [bearer token](#overview--generate-a-jwt-token) using your API key
    2. Set it in the dedicated `api-token` field in the [Authentication](#auth) section
    2. Fill in the input parameters
    2. Click the `TRY` green button
    3. Inspect the results
    
    
    # API Change Log
    ## 2025 Changes
    - August
      - new REST API - [Get Option Ladder](#tag--option-ladder)
      - updated REST API - [Get Markets](#get-/v1/markets) NEW fields `strikePrice`
      - updated REST API - [Get Market Tick](#get-/v1/markets/-symbol-/tick) NEW fields `bidIVPercentage`, `askIVPercentage` and `greeks`
      - new REST API - [OTC](#tag--OTC)
      - new fields at [Get Trades](#get-/v1/trades) - `otcMatchId` and `otcTradeId`
      - new REST API - [Market Maker Protection](#tag--market-maker-protection(MMP))
      - new WebSocket API - `mmpRequest` topic for [Private Data WebSocket](#overview--private-data-websocket-authenticated)
      - new WebSocket API - `mmpTrigger` topic for [Private Data WebSocket](#overview--private-data-websocket-authenticated)
      - new REST API - [Get Market Maker Protection Configuration by Trading Account Id](#get-/v2/mmp-configuration)
    - July
      - new Websocket API - [Unified tick for multiple markets](#overview--anonymous-unified-tick-websocket-unauthenticated)
    - June
      - new REST API - [Get Historical Trades](#get-/v1/history/trades)
      - new REST API - [Get Historical Orders](#get-/v2/history/orders)
    - May
      - Deprecated Features to be removed June 2025:
        - Hybrid OrderBook WebSocket (unauthenticated)
        - Market Data WebSocket (authenticated)
        - Anonymous Trades WebSocket (unauthenticated)
      true
      - Support for fee rebates - [Get Trades](#get-/v1/trades) new fields `tradeRebateAmount` and `tradeRebateAssetSymbol`
      
    - April
      - updated REST API - [Get Historical Market Trades](#get-/v1/history/markets/-symbol-/trades) new filter `tradeId`
    - March
      - updated REST API - [Get Trading Account](#tag--trading-accounts) new field `tradeFees`
      - updated REST API - [Get Trading Account](#tag--trading-accounts) Deprecated fields `makerFee` and `takerFee`
      - updated REST API - [Get Markets](#tag--market-data) new field `feeGroupId`
      - updated REST API - [Get Markets](#tag--market-data) Deprecated fields `makerFee` and `takerFee`
      - Removal of request parameter `depth` from [Get Market Orderbook](#get-/v1/markets/-symbol-/orderbook/hybrid)
      - Removal of subscription parameter `depth` from [unauthenticated multi-orderbook websocket](#overview--multi-orderbook-websocket-unauthenticated)
      - updated REST API - [Order Amendment Commands](#post-/v2/command-amend) new command `V1AmendOrder`
    ## 2024 Changes
    - December
      - updated REST API - [Get Trading Account](#tag--trading-accounts) new field `totalLiabilitiesUSD`
      - updated WebSocket API - `/private-data` topic - `tradingAccounts` new field `totalLiabilitiesUSD`
    - November
      - updated REST API - [Get Trading Account](#tag--trading-accounts) new fields `liquidityAddonUSD`, `marketRiskUSD` and `marginProfile`
      - updated WebSocket API - `/private-data` topic - `tradingAccounts` new fields `liquidityAddonUSD`, `marketRiskUSD` and `marginProfile`
      - updated REST API - [Get Assets](#tag--asset-data) new nested fields `underlyingAsset`
      - updated REST API - [Get Markets](#tag--market-data) new field `expiryDatetime`
      - Deprecated REST API - [Perpetual Settlement History]
      - New REST API - [Derivatives Settlement History](#get-/v1/history/derivatives-settlement)
      - Deprecating REST API - `GET /trading-api/v1/history/perpetual-settlement`
      - WebSocket API `/private-data` new topic - `derivativesPositionV2`
    - October
      - New REST API - [Portfolio Margin Simulator](#tag--portfolio-margin-simulator)
    - September
      - New REST API - [Funding Rate History](#get-/v1/history/markets/-symbol-/funding-rate)
      - updated REST API - [Get Markets](#tag--market-data) deprecated fields `maxInitialLeverage`, `warningLeverage`, `liquidationLeverage`, `fullLiquidationLeverage` and `defaultedLeverage`
    - August
      - New [Unified Anonymous Trade WS API](#overview--unified-anonymous-trades-websocket-unauthenticated)
    - July
      - updated REST API - [Get Trading Account](#tag--trading-accounts) new field `isConcentrationRiskEnabled`
      - updated REST API - [Get Markets](#tag--market-data) new fields `openInterestUSD`, `concentrationRiskThresholdUSD` and `concentrationRiskPercentage`
      - updated REST API - [Get Markets](#tag--market-data) new fields `roundingCorrectionFactor`, `makerMinLiquidityAddition`, `liquidityInvestEnabled` and `liquidityWithdrawEnabled`
      - New APIs
        - WebSocket `/trading-api/v1/index-data` for [index price updates](#overview--index-data-websocket-unauthenticated) 
        - REST - `GET /trading-api/v1/index-prices`
        - REST - `GET /trading-api/v1/index-prices/{assetSymbol}`
    - June
      - updated REST API - [Get Assets](#tag--asset-data) new fields `name` and `collateralBands`
      - updated REST API - [Get Assets](#tag--asset-data) deprecating field `collateralRating`
    - May
      - WebSocket API `/private-data` new topic - `ammInstructions`
    - April
      - Moved deprecated items to [Deprecated Features & APIs](.././deprecated/index.html)
        - Bullish Key
        - Old Signing Format
        - Hybrid OrderBook WebSocket (unauthenticated)
        - Market Data WebSocket (authenticated)
        - V1 Orders APIs
        - V1 AMM Instructions APIs
        - REST - `GET /accounts/spot`
        - REST - `GET /accounts/spot/{symbol}`
      - Removed decommissioned items
        - REST - `POST /trading-api/v1/users/login`
    - March
      - Added POST_ONLY order type for [POST /trading-api/v2/orders](#post-/v2/orders)
      - Added POST_ONLY order type for [GET /markets](#get-/v1/markets)
      - WebSocket API `/private-data` response models contain new field - `tradingAccountId`
    - February
      - Response model changes for [GET /trading-api/assets](#get-/v1/assets) and [GET `/trading-api/assets/{symbol}`](#get-/v1/assets/-symbol-)
        - new fields `totalOfferedLoanQuantity` and `loanBorrowedQuantity`
      - new REST API - [GET /trading-api/v1/history/transfer](#get-/v1/history/transfer)
      - Updated REST API - [Get Trading-Accounts](#get-/v1/accounts/trading-accounts) new fields  `totalBorrowedUSD` `totalCollateralUSD`, `initialMarginUSD`, `warningMarginUSD` `liquidationMarginUSD`, `fullLiquidationMarginUSD`, `defaultedMarginUSD`, `endCustomerId`
      - Updated WS API - `/private-data` websocket, `tradingAccounts` response model updated with new fields
    - January
      - Added new field `quoteAmount` for response models
        - REST - `GET /orders`
        - REST - `GET /trades`
        - Websocket - `orders` and `trades` topic
    ## 2023 Changes
    - December
      - History APIs require date/time range to be specified.
      - Direct Connect connectivity option added.
      - Deprecation of authenticated L1 websocket in favour of [unauthenticated multi-orderbook websocket](#overview--multi-orderbook-websocket-unauthenticated).
      - Deprecation of unauthenticated per-market L2 websocket in favour of [unauthenticated multi-orderbook websocket](#overview--multi-orderbook-websocket-unauthenticated).
      - Added test instruments.
    - November
      - New APIs for placing commands into the exchange. Uses [signing format](#overview--signing-format) and allows non-strict precision on price/quantities.
        - [POST /trading-api/v2/orders](#post-/v2/orders) for creating orders, [GET /trading-api/v2/orders](#get-/v2/orders) for fetching orders.
        - [POST /trading-api/v2/amm-instructions](#post-/v2/amm-instructions) for creating AMM instructions, [GET /trading-api/v2/amm-instructions](#get-/v2/amm-instructions) for fetching AMM instructions.
        - [POST /trading-api/v2/command](#post-/v2/command) for all other commands.
      - Deprecation of following APIs, will be removed towards the end of Q3 2024.
        - `/trading-api/v1/orders`
        - `/trading-api/v1/amm-instructions`
        - `/trading-api/v1/command`
      - Response model changes for [GET /trading-api/v2/orders](#get-/v2/orders), [GET /trading-api/v1/orders](#get-/v1/orders) and [Private Data WebSocket (authenticated)](#overview--private-data-websocket-authenticated) orders topic.
        - `allowBorrow`, `borrowedBaseQuantity`, `borrowedQuoteQuantity`, `clientOrderId` added.
        - `margin`, `borrowedQuantity`, `handle` deprecated, will be removed towards the end of Q3 2024.
      - Response model changes for [GET /trading-api/v2/amm-instructions](#get-/v2/amm-instructions) and [GET /trading-api/v1/amm-instructions](#get-/v1/amm-instructions)
        - `instructionId` added.
        - `liquidityId` deprecated, will be removed towards the end of Q3 2024.
      - New [Multi-OrderBook WebSocket (unauthenticated)](#overview--multi-orderbook-websocket-unauthenticated) API
      - new REST API - [derivatives positions](#get-/v1/derivatives-positions)
      - new REST API - perpetual settlement  
      - updated REST API - [Get Markets](#get-/v1/markets) new fields `marketType` and new fields for perpetual market only: `contractMultiplier`,`settlementAssetSymbol`, `underlyingBaseSymbol`, `underlyingQuoteSymbol`
      - updated REST API - [Get Market Tick](#get-/v1/markets/-symbol-/tick) new fields `markPrice` `fundingRate`, `openInterest`
      - updated REST API - [Get Trading-Accounts](#get-/v1/accounts/trading-accounts) new field `riskLimitUSD`
      - updated REST API - [Get AMM Instruction](#get-/v2/amm-instructions) new field `lastDistributedPrice`
      - New [Get Market Tick WebSocket API](#overview--anonymous-market-data-price-tick-unauthenticated)
      - Websocket - Updated API [Private Data WebSocket](#overview--private-data-websocket-authenticated) new Topic `derivativesPositions`
      - Websocket - Updated API [Private Data WebSocket](#overview--private-data-websocket-authenticated) Topic `tradingAccounts`, response model updated.
    - October
      - New heartbeat topic for [Private Data WebSocket (authenticated)](#overview--private-data-websocket-authenticated)
      - New ECDSA API Keys and ECDSA based signing
        - Login API - `POST /trading-api/v2/users/login` supports ECDSA signatures
        - BX-SIGNATURE header supports signatures generated via ECDSA
    - September
      - New HMAC API Keys and HMAC based signing
        - Login API - `GET /v1/users/hmac/login` 
        - BX-SIGNATURE header supports signatures generated via HMAC and EDDSA 
      - New FIX API - The FIX API is available to institutional clients
    - August - New REST API - `GET /history/borrow-interest`
      - New REST API - `Cancel All Open Limit Orders after Delay` - `POST /command?commandType=V1DelayedCancelAllOrders`
      - New REST API -  logout session -  `GET /v1/users/logout` 
    - July - Margin related REST and WS changes
      - `borrowedQuantity` and `isLiquidation` fields added to `GET /orders` and `WS /private-data` orders topic
      - Calculation for `free` and `used` fields changed in `GET /accounts/spot`, `GET /accounts/spot/{symbol}` and `WS /private-data` `spotAccounts` topic
      - New `GET /accounts/asset` and `GET /accounts/asset/{symbol}`
      - New `assetAccounts` and `tradingAccounts` topics in `WS /private-data`
      - `isLending`, `isBorrowing`, `isDefaulted`, `maxInitialLeverage`, `makerFee` and `takerFee` fields added to `GET /accounts/trading-accounts`
      - `collateralRating` and `maxBorrow` fields added to `/assets`
    - May - add V1CancelAllOrdersByMarket to cancel all open orders by trading account id and market
    - April - add V1CancelAllOrders to cancel all open limit orders by trading account id
    - April - add `/accounts/trading-accounts` endpoint to fetch all trading accounts
    - April - new hybrid orderbook WebSocket API with greater depth and aggregation factor
      - Private Data WebSocket `/v1/private-data` -> [New API](#overview--private-data-websocket-authenticated) `/v1/private-data?tradingAccountId=111234567890`
      - Get account details [Current API](../v1/#get-/accounts/spot) -> [New API](#tag--accounts)
      - Get trade details [Current API](../v1/#get-/trades) -> [New API](#get-/v1/trades)
      - Get AMM Instruction by ID [Current API](../v1/#get-/amm-instructions/-liquidityId-) -> [New API](#get-/v2/amm-instructions/-instructionid-)
      - Get AMM instruction details [Current API](../v1/#get-/amm-instructions) -> [New API](#get-/v2/amm-instructions)
      - Remove AMM instruction [Current API](../v1/#delete-/amm-instructions) -> [New API](../v2/#delete-/amm-instructions)
      - Add AMM instruction [Current API](../v1/#post-/amm-instructions) -> [New API](#post-/v2/amm-instructions)
      - Get order details [Current API](../v1/#get-/orders) -> [New API](#get-/v2/orders)
      - Cancel order [Current API](../v1/#delete-/orders) -> [New API](../v2/#delete-/orders)
      - Create order [Current API](../v1/#post-/orders) -> [New API](#post-/v2/orders)
      - Updated REST API:
      - New REST API: [To transfer asset between two trading accounts ](#tag--command-entry)
      - New REST API: [To retrieve all the trading account details for current user](../v2/#get-/v1/accounts/trading-accounts) Gets details for all trading accounts accessible by the API key used in the request. Requires [bearer token](#overview--add-authenticated-request-header) in authorization header. The trading account's id will be used in all other REST API
    - March - introduce "trading account Id" to authenticated REST API and websocket
    - March - add custody SIGNET support, remove SEN support
    - March - add unsolicited amend status reason code
    - March - add nonce window to `/orders` to allow out-of-order order requests to be processed
    - March - `/v1/users/login` to be deprecated towards the end of Q2 2023
    - January - add AMM instructions API
    ## 2022 Changes
    - November - deprecate subscription topics in `/private-data` - `events`, `positions` and `marginAccounts`
    - November - deprecate `/accounts/margin`, `/accounts/margin/{symbol}`, `/positions` and `/positions/{symbol}`
    - October - add Custody API
    - August - add anonymous trades WebSocket API
    - July - deprecate WebSocket API `/v1/private` and `/v1/market-data`
    - July - add hybrid orderbook WebSocket API
    - June - add handle field to `GET /trades` and `GET /trades/{tradeId}`
    - June - add handle field to `V1TATrade` for private data WebSocket
    - June - orderbook default depth of `10` - `GET /markets/{symbol}/orderbook/hybrid`
    - May - add `events` topic to private data WebSocket
    - April - add market data WebSocket API
    - April - add private data WebSocket API
    - March - add optional `depth` parameter to `GET /markets/{symbol}/orderbook/hybrid?depth=10`
    - March - add IOC time-in-force order type
    - March - add FOK time-in-force order type
    - March - add order `statusReasonCode` map to API documentation
    - March - add historical anonymous trades API - `GET /history/markets/{symbol}/trades`
    - February - add filter by status=CANCELLED to `GET /orders?status=CANCELLED`
    - January - add pagination support to `GET /markets/{symbol}/candle`

  version: 1.0.0
  title: Bullish Trading API
  contact:
    name: Bullish Help Center
    email: support@bullish.com
    url: https://support.bullish.com

tags:
  - name: nonce
    x-displayName: Nonce
    description: Non-authenticated API for getting nonce range information
  - name: users
    description: Authenticated APIs for interacting with users
  - name: orders
    description: Authenticated APIs for interacting with orders
  - name: "amm instructions"
    description: |+
      Authenticated APIs that allow users to Create, View and Terminate AMM instructions.

      Please refer to the [AMM instruction Overview Doc](https://github.com/bullish-exchange/api-docs/wiki/Automated-Market-Making-%28AMM%29-Instructions) 
      for more details on how AMM instructions work.
  - name: "transfers"
    description: Authenticated API for initiating asset transfers between trading accounts.
  - name: "command entry"
    description: Authenticated API for submitting commands into the exchange.
  - name: custody
    description: |+
      Authenticated APIs for custody,  [Custody Basic Examples](https://github.com/bullish-exchange/api-examples/blob/master/bullish/rest/custody_basics.py)
      
      Custody APIs have a limit of 40 requests per IP, per minute. This is combined across all endpoints of type **/wallets/***
  - name: trades
    description: Authenticated APIs for reading trade data
  - name: accounts
    description: Authenticated APIs for reading account data
  - name: time
    description: Non-authenticated API for reading time data
  - name: asset-data
    description: Non-authenticated APIs for accessing general asset data information
  - name: market-data
    description: Non-authenticated APIs for accessing general market data information
  - name: account-model
    x-displayName: SpotAccount Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SpotAccount"/>
  - name: order-model
    x-displayName: Order Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Order"/>
  - name: create-order-request-model
    x-displayName: Create Order Request Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/CreateOrderRequest"/>
  - name: update-order-quantity-request-model
    x-displayName: Update Order Quantity Request Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UpdateOrderQuantityRequest"/>
  - name: trade-model
    x-displayName: Trade Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Trade"/>
  - name: obfuscated-trade-model
    x-displayName: Obfuscated Trade Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ObfuscatedTrade"/>
  - name: market-model
    x-displayName: Market Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Market"/>
  - name: orderbook-model
    x-displayName: Order Book Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderBook"/>
  - name: tick-model
    x-displayName: Tick Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Tick"/>
  - name: ohlcv-candle-model
    x-displayName: OHLCV Candle Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OHLCVCandle"/>
  - name: position-model
    x-displayName: Position Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Position"/>
  - name: spot-account-id
    x-displayName: SpotAccount ID
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SpotAccountID"/>
  - name: order-id
    x-displayName: Order ID
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderID"/>
  - name: trade-id
    x-displayName: Trade ID
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TradeID"/>
  - name: market-id
    x-displayName: Market ID
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/MarketID"/>
  - name: timestamp
    x-displayName: Timestamp Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TimeStamp"/>
  - name: timestamp-as-string
    x-displayName: Timestamp Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TimeStampAsString"/>
  - name: datetime
    x-displayName: Datetime Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/DateTime"/>
  - name: order-time-in-force
    x-displayName: Order Time In Force
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderTimeInForce"/>
  - name: order-time-in-force-as-string
    x-displayName: Order Time In Force
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderTimeInForceAsString"/>
  - name: order-type
    x-displayName: Order Type
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderType"/>
  - name: order-type-as-string
    x-displayName: Order Type
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderTypeAsString"/>
  - name: order-status
    x-displayName: Order Status
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderStatus"/>
  - name: order-status-as-string
    x-displayName: Order Status
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderStatusAsString"/>
  - name: order-side
    x-displayName: Order Side
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderSide"/>
  - name: order-side-as-string
    x-displayName: Order Side
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/OrderSideAsString"/>
  - name: candle-window
    x-displayName: Candle Window
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/CandleWindow"/>
  - name: sessions
  - name: trading-accounts
  - name: derivatives
  - name: history
  - name: otc
    description: The OTC Clearing Facility API (OTC API) is available to customers to book trades negotiated outside of the Bullish Exchange order book to Bullish’s clearing and settlement platform. Customers may agree to an OTC transaction through bilateral negotiations or via a 3rd party RFQ platform. Once the two customers agree on the trade details, they can use the OTC API to book the trade to their Bullish account to benefit from Bullish’s risk and collateral management system. For purposes of clarity, the OTC API is not for trading purposes.
x-tagGroups:
  - name: Authenticated API
    tags:
      - accounts
      - orders
      - "amm instructions"
      - "transfers"
      - trades
      - custody
  - name: Non-authenticated API
    tags:
      - market-data
      - asset-data
      - time

paths:
  /v1/nonce:
    get:
      tags:
        - nonce
      summary: Get The Current Nonce Range
      description: |
        Get the current nonce range. The lower bound of nonce range is EPOCH start of day in microseconds, and upper bound of nonce range is EPOCH end of day in microseconds.

        **Ratelimited:** `False`
      operationId: user-get-current-nonce-range
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nonce'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/users/logout:
    get:
      tags:
        - sessions
      summary: Logout
      description: |
        Logout of the session associated with the JWT. It requires [bearer token](#overview--add-authenticated-request-header) in authorization header. 

        **Ratelimited:** `True`
      operationId: logout
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: OK
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v2/users/login:
    post:
      tags:
        - sessions
      summary: Login
      description: |
        Login and generate a new session associated with a JWT. Once you log in from an IP, the same IP must be used for 
        the duration of the session for any subsequent requests.

        **Ratelimited:** `True`
      operationId: login
      responses:
        '200':
          description:  returns JWT and the `authorizer` for signing requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        description: login request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      security: []
  /v1/users/hmac/login:
    get:
      tags:
        - sessions
      summary: HMAC Login
      description: |
        Login and generate a new session associated with a JWT using HMAC. Once you log in from an IP, the same IP must
        be used for the duration of the session for any subsequent requests.

        **Ratelimited:** `True`
      operationId: hmac-login
      parameters:
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-PUBLIC-KEY'
      responses:
        '200':
          description: returns JWT and the `authorizer` for signing requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/accounts/trading-accounts:
    get:
      tags:
        - trading-accounts
      summary: Get all trading Accounts details
      description: |
        Gets details for all trading accounts accessible by the API key used in the request. It requires [bearer token](#overview--add-authenticated-request-header) in authorization header. The trading account's id will be used in all other REST API

        **Ratelimited:** `True`
      operationId: user-get-trading-accounts
      parameters:
        - $ref: '#/components/parameters/Authorization' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/TradingAccountResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/accounts/trading-accounts/{tradingAccountId}:
    get:
      tags:
        - trading-accounts
      summary: Get trading account details by trading account id
      description: |
        Gets details for specific trading account by `tradingAccountId` and API key used in the request. It requires [bearer token](#overview--add-authenticated-request-header) in authorization header.

        **Ratelimited:** `True`
      operationId: user-get-trading-account-by-id
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingAccountResponse'
        '400':
          description: Bad Request Parameter
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]

  /v1/accounts/asset:
    get:
      tags:
        - accounts
      summary: Get Asset Accounts
      description: |
        Gets the asset accounts, requires [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`
      operationId: user-get-asset-accounts
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/AssetAccount'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/accounts/asset/{symbol}:
    get:
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/AssetSymbol'
          required: true
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      tags:
        - accounts
      summary: Get Asset Account by Symbol
      description: |
        Gets the asset account by symbol, requires [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`
      operationId: user-get-asset-account-by-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAccount'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]

  /v2/orders:
    get:
      tags:
        - orders
      summary: Get Orders
      description: |
        Retrieve a list of orders placed by a trading account with specified filters.
        - Only the last 24 hours of data is available for querying
        
        This endpoint requires [authentication](#overview--generate-a-jwt-token) and supports [pagination](#overview--pagination-support).
        To filter by `createdAtDatetime` and `createdAtTimestamp`, additional parameters are required. For detailed instructions, see the [Filtering Support](#overview--filtering-support) section.
        Additionally, this endpoint is subjected to rate limiting.
      operationId: trade-get-orders-v2
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: false
        - in: query
          name: clientOrderId
          description: Unique numeric (i64) identifier generated on the client side expressed as a string value
          schema:
            $ref: '#/components/schemas/OrderHandle'
          required: false
        - in: query
          name: side
          description: order side
          schema:
            $ref: '#/components/schemas/OrderSide'
          required: false
        - in: query
          name: status
          description: order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
    post:
      tags:
        - orders
      summary: Create Order
      description: |
        Creates an order, requires [bearer token](#overview--add-authenticated-request-header) in authorization header.

        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field ordering 
        and addition of null fields in the request body. Quantities and prices does not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.

        **Ratelimited:** `True`. Higher tiers of rate limits available by providing the `BX-RATELIMIT-TOKEN` request header.
      operationId: trade-create-order-v2
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-NONCE-WINDOW-ENABLED'
        - $ref: '#/components/parameters/BX-REFERRER'
      responses:
        '200':
          description: Status OK. The create order command was successfully acknowledged. To check the current status of the order, query [Get Order by ID](#get-/trading-api/v2/orders/-orderId-) using the `orderId` received in the response payload. Please consult the section [How To Ensure The Order Of *Create Order* or *Cancel Order* Requests](#overview--how-to-ensure-the-order-of-create-order-or-cancel-order-requests) for more information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderCommandResponseV3'
        '400':
          description: |+
            Bad Request

            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        description: new order request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderCommandV3'
            examples:
              CreateLimitOrderCommand:
                $ref: '#/components/examples/CreateLimitOrderCommand'
              CreateMarketOrderCommand:
                $ref: '#/components/examples/CreateMarketOrderCommand'
              CreateStopLimitOrderCommand:
                $ref: '#/components/examples/CreateStopLimitOrderCommand'
              CreatePostOnlyOrderCommand:
                $ref: '#/components/examples/CreatePostOnlyOrderCommand'
      security:
        - jwtTokenAuth: [ ]
  /v2/orders/{orderId}:
    parameters:
      - in: path
        name: orderId
        schema:
          type: number
        required: true
        description: order ID
    get:
      tags:
        - orders
      summary: Get Order by ID
      description: |
        Retrieve a specific order using its unique identifier.
        
        This endpoint requires [authentication](#overview--generate-a-jwt-token) and is subjected to rate limiting.
      operationId: trade-get-order-by-id-v2
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v2/history/orders:
    get:
      tags:
        - history
      summary: Get Historical Orders
      description: |
        Retrieve a list of orders placed by a trading account with specified filters.
        - Only the last 90 days of data is available for querying

        This endpoint requires [authentication](#overview--generate-a-jwt-token) and supports [pagination](#overview--pagination-support).
        To filter by `createdAtDatetime` and `createdAtTimestamp`, additional parameters are required. For detailed instructions, see the [Filtering Support](#overview--filtering-support) section.
        Additionally, this endpoint is subjected to rate limiting.
      operationId: trade-get-orders-history-v2
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: false
        - in: query
          name: orderId
          schema:
            $ref: '#/components/schemas/OrderID'
          required: false
        - in: query
          name: clientOrderId
          description: Unique numeric (i64) identifier generated on the client side expressed as a string value
          schema:
            $ref: '#/components/schemas/OrderHandle'
          required: false
        - in: query
          name: side
          description: order side
          schema:
            $ref: '#/components/schemas/OrderSide'
          required: false
        - in: query
          name: status
          description: order status
          schema:
            $ref: '#/components/schemas/OrderStatus'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v2/amm-instructions:
    get:
      tags:
        - "amm instructions"
      summary: Get AMM Instructions
      description: |
        Gets a list of AMM instructions based on applied filters.
        - requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        - [supports pagination](#overview--pagination-support)

        **Ratelimited:** `True`
      operationId: trade-get-amm-instructions
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: false
        - in: query
          name: status
          description: order status
          schema:
            $ref: '#/components/schemas/AMMInstructionStatus'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/AMMInstruction'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
    post:
      tags:
        - "amm instructions"
      summary: Create AMM Instruction
      description: |
        Creates an AMM instruction, requires [bearer token](#overview--add-authenticated-request-header) 
        in authorization header.

        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field ordering
        in the request body. Quantities and prices does not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.

        **Ratelimited:** `True`
      operationId: trade-create-amm-instruction
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
      responses:
        '200':
          description: Status OK. This means a create AMM instruction command was successfully acknowledged. It does not necessarily mean the instruction was created. To check the current status, query [Get AMM Instruction by ID](#get-/trading-api/v2/amm-instructions/-instructionid-) using the `instructionId` received in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAMMInstructionCommandResponseV3'
              examples:
                CreateAMMInstructionCommandResponse:
                  $ref: '#/components/examples/CreateAMMInstructionCommandResponse'
        '400':
          description: |+
            Bad Request

            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        description: new AMM instruction
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAMMInstructionCommandV3'
            examples:
              CreateAMMInstructionCommand:
                $ref: '#/components/examples/CreateAMMInstructionCommand'
      security:
        - jwtTokenAuth: [ ]
  /v2/amm-instructions/{instructionId}:
    parameters:
      - in: path
        name: instructionId
        schema:
          type: number
        required: true
        description: unique AMM instruction ID
      - in: query
        name: tradingAccountId
        description: Id of the trading account
        schema:
          $ref: '#/components/schemas/TradingAccountId'
        required: true
    get:
      tags:
        - "amm instructions"
      summary: Get AMM Instruction by ID
      description: |
        Gets a specific AMM instruction based on the `instructionId`, 
        requires [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`
      operationId: trade-get-amm-instruction-by-id-v2
      parameters:
        - $ref: '#/components/parameters/Authorization'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AMMInstruction'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]

  /v2/command:
    post:
      tags:
        - "command entry"
        - "amm instructions"
        - "transfers"
      summary: Create Command
      description: |
        Submits a command to the trading engine. A successful response indicates that the command entry was acknowledged 
        but does not indicate that the command was executed. 
        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field 
        ordering and addition of null fields in the request body. Quantities and prices does not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.
        
        Command schemas and examples are provided below. Supported commands:
        - V3CancelOrder
        - V1CancelAllOrders
        - V1CancelAllOrdersByMarket
        - V1DelayedCancelAllOrders
        - V1UnsetDelayedCancelAllOrders
        - V1AmendOrder
        - V3TerminateAMMInstruction
        - V2TransferAsset
        
        Requires
        - [bearer token](#overview--add-authenticated-request-header) in authorization header
        
        **Ratelimited:** `True`. Higher tiers of rate limits available by providing the `BX-RATELIMIT-TOKEN` request header.
      operationId: command-entry
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-NONCE-WINDOW-ENABLED'
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CancelOrderCommandResponseV3'
                  - $ref: '#/components/schemas/CancelAllOrdersByMarketResponse'
                  - $ref: '#/components/schemas/TerminateAMMInstructionCommandResponseV3'
              examples:
                CancelOrderResponse:
                  $ref: '#/components/examples/CancelOrderCommandResponse'
                CancelAllOrdersResponse:
                  $ref: '#/components/examples/CancelAllOrdersCommandResponse'
                CancelAllOrdersByMarketResponse:
                  $ref: '#/components/examples/CancelAllOrdersByMarketCommandResponse'
                DelayedCancelAllOrdersResponse:
                  $ref: '#/components/examples/DelayedCancelAllOrdersCommandResponse'
                UnsetDelayedCancelAllOrdersResponse:
                  $ref: '#/components/examples/UnsetDelayedCancelAllOrdersCommandResponse'
                TerminateAMMInstructionResponse:
                  $ref: '#/components/examples/TerminateAMMInstructionCommandResponse'
                TransferAssetResponse:
                  $ref: '#/components/examples/TransferAssetCommandResponse'
                AmendOrderResponse:
                  $ref: '#/components/examples/AmendOrderCommandResponse'
        '400':
          description: |+
            Bad Request
            
            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CancelOrderCommandV3'
                - $ref: '#/components/schemas/CancelAllOrdersCommand'
                - $ref: '#/components/schemas/CancelAllOrdersByMarketCommand'
                - $ref: '#/components/schemas/DelayedCancelAllOrdersCommand'
                - $ref: '#/components/schemas/UnsetDelayedCancelAllOrdersCommand'
                - $ref: '#/components/schemas/TerminateAMMInstructionCommandV3'
                - $ref: '#/components/schemas/TransferAssetCommandV2'
                - $ref: '#/components/schemas/AmendOrderCommandV1'
            examples:
              CancelOrderCommand:
                $ref: '#/components/examples/CancelOrderCommand'
              CancelAllOrdersCommand:
                $ref: '#/components/examples/CancelAllOrdersCommand'
              CancelAllOrdersByMarketCommand:
                $ref: '#/components/examples/CancelAllOrdersByMarketCommand'
              DelayedCancelAllOrdersCommand:
                $ref: '#/components/examples/DelayedCancelAllOrdersCommand'
              UnsetDelayedCancelAllOrdersCommand:
                $ref: '#/components/examples/UnsetDelayedCancelAllOrdersCommand'
              AmendOrderCommand:
                $ref: '#/components/examples/AmendOrderCommand'
              TerminateAMMInstructionCommand:
                $ref: '#/components/examples/TerminateAMMInstructionCommand'
              TransferAssetCommand:
                $ref: '#/components/examples/TransferAssetCommand'
      security:
        - jwtTokenAuth: [ ]

  /v2/command#cancellations:
    post:
      tags:
        - "orders"
      summary: Order Cancellation Commands
      description: |
        Submits a command to the trading engine. A successful response indicates that the command entry was acknowledged 
        but does not indicate that the command was executed. 
        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field 
        ordering and addition of null fields in the request body. Quantities and prices does not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.

        Command schemas and examples are provided below. Supported commands:
        - V3CancelOrder
        - V1CancelAllOrders
        - V1CancelAllOrdersByMarket
        - V1DelayedCancelAllOrders
        - V1UnsetDelayedCancelAllOrders

        Requires
        - [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`. Higher tiers of rate limits available by providing the `BX-RATELIMIT-TOKEN` request header.
      operationId: command-entry-cancellations
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-NONCE-WINDOW-ENABLED'
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CancelOrderCommandResponseV3'
                  - $ref: '#/components/schemas/CancelAllOrdersByMarketResponse'
              examples:
                CancelOrderResponse:
                  $ref: '#/components/examples/CancelOrderCommandResponse'
                CancelAllOrdersResponse:
                  $ref: '#/components/examples/CancelAllOrdersCommandResponse'
                CancelAllOrdersByMarketResponse:
                  $ref: '#/components/examples/CancelAllOrdersByMarketCommandResponse'
                DelayedCancelAllOrdersResponse:
                  $ref: '#/components/examples/DelayedCancelAllOrdersCommandResponse'
                UnsetDelayedCancelAllOrdersResponse:
                  $ref: '#/components/examples/UnsetDelayedCancelAllOrdersCommandResponse'

        '400':
          description: |+
            Bad Request

            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CancelOrderCommandV3'
                - $ref: '#/components/schemas/CancelAllOrdersCommand'
                - $ref: '#/components/schemas/CancelAllOrdersByMarketCommand'
                - $ref: '#/components/schemas/DelayedCancelAllOrdersCommand'
                - $ref: '#/components/schemas/UnsetDelayedCancelAllOrdersCommand'
            examples:
              CancelOrderCommand:
                $ref: '#/components/examples/CancelOrderCommand'
              CancelAllOrdersCommand:
                $ref: '#/components/examples/CancelAllOrdersCommand'
              CancelAllOrdersByMarketCommand:
                $ref: '#/components/examples/CancelAllOrdersByMarketCommand'
              DelayedCancelAllOrdersCommand:
                $ref: '#/components/examples/DelayedCancelAllOrdersCommand'
              UnsetDelayedCancelAllOrdersCommand:
                $ref: '#/components/examples/UnsetDelayedCancelAllOrdersCommand'
      security:
        - jwtTokenAuth: [ ]

  /v2/command#amend:
    post:
      tags:
        - "orders"
      summary: Order Amendment Command
      description: |
        Ability to amend the `price` ,`quantity` and `type` (i.e. change from Taker Only to Maker only and vice-versa) on Limit orders. It can be applied only to open orders (`quantityFilled=0` and `status=OPEN`).
        
        This submits a command to the trading engine to amend an order. A successful response indicates that the command entry was acknowledged 
        but does not indicate that the command was executed. 
        
        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field 
        ordering and addition of null fields in the request body. Quantities and prices does not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.

        Requires
        - [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`. Higher tiers of rate limits available by providing the `BX-RATELIMIT-TOKEN` request header.
      operationId: command-entry-amend
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-NONCE-WINDOW-ENABLED'
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AmendOrderCommandResponseV1'
              examples:
                AmendOrderResponse:
                  $ref: '#/components/examples/AmendOrderCommandResponse'
        '400':
          description: |+
            Bad Request

            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AmendOrderCommandV1'
            examples:
              AmendOrderCommand:
                $ref: '#/components/examples/AmendOrderCommand'
      security:
        - jwtTokenAuth: [ ]
  /v2/mmp-configuration:
    post:
      tags:
        - market-maker-protection(MMP)
      summary: Setup Market Maker Protection (MMP)
      description: |
        MMP configurations are setup per underlying asset symbol for a specific trading Account. While setting up MMP configurations you can specify `windowTimeInSeconds`, `frozenTimeInSeconds`, `quantityLimit` and `deltaLimit` and use it as best suited.
        Please reach out to your relationship manager to understand how to enable MMP for your trading accounts.
        
        - To get updates on the status of your set / reset MMP configs request for an underlying asset symbol over WS ,please subscribe to `mmpRequest` TOPIC within the [Private Data WebSocket](#overview--private-data-websocket-authenticated).
        - To get updates about MMP triggered event over WS ,please subscribe to the `mmpTriggered` TOPIC within the [Private Data WebSocket](#overview--private-data-websocket-authenticated).
        
        To update/amend your MMP configs ,please use the resetMMPCommandV1 to reset the MMP configurations , followed by setting up a new MMP config via setMMPCommandV1 per underlying asset symbol.
        
        Note: MMP is only applicable for Options [Orders created](#post-/v2/orders) with the `isMMP` flag set to `true`.
      operationId: set-mmp-config
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SetMMPCommandResponse'
                  - $ref: '#/components/schemas/ResetMMPCommandResponse'
              examples:
                SetMMPCommandResponse:
                  $ref: '#/components/examples/SetMMPCommandResponse'
                ResetMMPCommandResponse:
                  $ref: '#/components/examples/ResetMMPCommandResponse'
        '400':
          description: Bad Request
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SetMMPCommandV1'
                - $ref: '#/components/schemas/ResetMMPCommandV1'
            examples:
              SetMMPCommandV1:
                $ref: '#/components/examples/SetMMPCommandV1'
              ResetMMPCommandV1:
                $ref: '#/components/examples/ResetMMPCommandV1'
      security:
        - jwtTokenAuth: [ ]
    get:
      tags:
        - market-maker-protection(MMP)
      summary: Get Market Marker Protection Configuration By Trading Account Id
      description: |
        Get market maker protection configurations under a trading account id 
        
        This endpoint requires [authentication](#overview--generate-a-jwt-token). To filter by `symbol`, additional parameters are required. For detailed instructions, see the [Filtering Support](#overview--filtering-support) section.
      operationId: get-mmp-config-by-trading-account-id
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          description: The underlying asset id you filter the configurations against. If symbol is provided, this API will only return the market maker protection configuration for this symbol for this trading account.
          schema:
            $ref: '#/components/schemas/UnderlyingAssetSymbol'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMmpConfigurationResponse'
        '400':
          description: Bad Request
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
      security:
        - jwtTokenAuth: [ ]

  /v1/trades:
    get:
      tags:
        - trades
      summary: Get Trades
      description: |
        Get a list of trades based on specified filters.
        - requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        - Only the last 24 hours of data is available for querying
        - [supports pagination](#overview--pagination-support)
        - filtering on `createdAtDatetime`, `createdAtTimestamp` requires additional keywords, [see filtering support](#overview--filtering-support)

        **Ratelimited:** `True`
      operationId: trade-get-trades
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: false
        - in: query
          name: orderId
          description: unique order ID
          schema:
            $ref: '#/components/schemas/OrderID'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
        - in: query
          name: otcTradeId
          description: unique Bullish otc trade id
          schema:
            $ref: '#/components/schemas/OtcTradeId'
          required: false
        - in: query
          name: clientOtcTradeId
          description: unique client otc trade id
          schema:
            $ref: '#/components/schemas/ClientOtcTradeId'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Trade'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/trades/{tradeId}:
    get:
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: tradeId
          schema:
            type: number
          required: true
          description: trade ID
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      tags:
        - trades
      summary: Get Trade by ID
      description: |
        Gets a trade by ID, requires [bearer token](#overview--add-authenticated-request-header) in authorization header

        **Ratelimited:** `True`
      operationId: trade-get-trade-by-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/history/trades:
    get:
      tags:
        - history
      summary: Get Historical Trades
      description: |
        Get a list of trades based on specified filters.
        - requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        - Only the last 90 days of data is available for querying
        - [supports pagination](#overview--pagination-support)
        - filtering on `createdAtDatetime`, `createdAtTimestamp` requires additional keywords, [see filtering support](#overview--filtering-support)
  
        **Ratelimited:** `True`
      operationId: trade-get-trades-history
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: false
        - in: query
          name: orderId
          description: unique order ID
          schema:
            $ref: '#/components/schemas/OrderID'
          required: false
        - in: query
          name: tradeId
          description: unique trade ID
          schema:
            $ref: '#/components/schemas/TradeID'
          required: false
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: otcTradeId
          description: unique Bullish otc trade id
          schema:
            $ref: '#/components/schemas/OtcTradeId'
          required: false
        - in: query
          name: clientOtcTradeId
          description: unique client otc trade id
          schema:
            $ref: '#/components/schemas/ClientOtcTradeId'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Trade'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/wallets/transactions:
    get:
      tags:
        - custody
      summary: Get Custody Transaction History
      description: |
        Get custody transaction history, requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        
        Please note that Custody endpoints utilize a non-multiplied asset format for long decimal assets like SHIB and PEPE, ensuring consistency with real-world asset representation. This differs from Trading endpoints, which use a multiplied asset format, such as SHIB1M and PEPE1M. For more information, please see [help centre](https://bullishexchange.atlassian.net/wiki/spaces/BHC/pages/20807684/Understanding+Multiplied+Assets+PEPE1M+and+SHIB1M)
        
        - [supports pagination](#overview--pagination-support)
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-history
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustodyHistory'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/wallets/limits/{symbol}:
    get:
      tags:
        - custody
      summary: Get Withdrawal Limits for Symbol
      description: |
        Get withdrawal limits for symbol, requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        
        Please note that Custody endpoints utilize a non-multiplied asset format for long decimal assets like SHIB and PEPE, ensuring consistency with real-world asset representation. This differs from Trading endpoints, which use a multiplied asset format, such as SHIB1M and PEPE1M. For more information, please see [help centre](https://bullishexchange.atlassian.net/wiki/spaces/BHC/pages/20807684/Understanding+Multiplied+Assets+PEPE1M+and+SHIB1M)
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-limits
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/CustodySymbol'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodyLimits'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/wallets/deposit-instructions/crypto/{symbol}:
    get:
      tags:
        - custody
      summary: Get Deposit Instructions for Crypto
      description: |
        Get deposit instructions, requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        
        Please note that Custody endpoints utilize a non-multiplied asset format for long decimal assets like SHIB and PEPE, ensuring consistency with real-world asset representation. This differs from Trading endpoints, which use a multiplied asset format, such as SHIB1M and PEPE1M. For more information, please see [help centre](https://bullishexchange.atlassian.net/wiki/spaces/BHC/pages/20807684/Understanding+Multiplied+Assets+PEPE1M+and+SHIB1M)
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-deposit-instructions-crypto
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/CustodySymbol'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustodyCryptoDepositInstructions'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/wallets/withdrawal-instructions/crypto/{symbol}:
    get:
      tags:
        - custody
      summary: Get Withdrawal Instructions for Crypto
      description: |
        Get crypto withdrawal instructions, requires [bearer token](#overview--add-authenticated-request-header) in authorization header. Please note that all withdrawal addresses must be whitelisted via the Bullish website before any digital asset withdrawals can be processed.
        
        Please note that Custody endpoints utilize a non-multiplied asset format for long decimal assets like SHIB and PEPE, ensuring consistency with real-world asset representation. This differs from Trading endpoints, which use a multiplied asset format, such as SHIB1M and PEPE1M. For more information, please see [help centre](https://bullishexchange.atlassian.net/wiki/spaces/BHC/pages/20807684/Understanding+Multiplied+Assets+PEPE1M+and+SHIB1M)
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-withdrawal-instructions-crypto
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/CustodySymbol'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustodyCryptoWithdrawalInstructions'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/wallets/deposit-instructions/fiat/{symbol}:
    get:
      tags:
        - custody
      summary: Get Deposit Instructions for Fiat
      description: |
        Get deposit instructions, requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-deposit-instructions-fiat
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          example: 'USD'
          schema:
            $ref: '#/components/schemas/InstrumentId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustodyFiatDepositInstructions'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/wallets/withdrawal-instructions/fiat/{symbol}:
    get:
      tags:
        - custody
      summary: Get Withdrawal Instructions for Fiat
      description: |
        Get withdrawal instructions added by the user, requires [bearer token](#overview--add-authenticated-request-header) in authorization header. Please note that before withdrawal destinations can be used for withdrawing to, they must be whitelisted on the Bullish website.
        
        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-get-withdrawal-instructions-fiat
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/CustodyFiatSymbol'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustodyFiatWithdrawalInstructions'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/wallets/withdrawal:
    post:
      tags:
        - custody
      summary: Create Withdrawal
      description: |
        Trigger a withdrawal, requires [bearer token](#overview--add-authenticated-request-header) in authorization header

        The `BX-SIGNATURE` header should be created by signing the request with an ECDSA API Key as follows:

        1. Construct a string that concatenates the following fields:
            - `timestamp` - current epoch milliseconds e.g. 1697008474031
            - `nonce` - a UUID identifier to protect against replay attacks e.g. 255241a1-2cde-4954-87b1-13beef547960
            - `request method` - e.g. POST
            - `request path` - e.g. /trading-api/v1/wallets/withdrawal
            - `request body JSON string`, removing any spaces and newline characters
        2. Hash the string using a SHA-256 hash function and sign the resulting hexdigest with your `<PRIVATE_KEY>`.
        3. DER encode the signature, and BASE64 encode the DER encoded signature.

        > **Bullish requires you to whitelist a withdrawal destination address before submitting a withdrawal request. You may view, approve, and manage your list of destination addresses in Account Settings on the Bullish website. If you attempt a withdrawal without first whitelisting an address in Account Settings, then the withdrawal attempt will fail.**

        For a full example of using the withdrawal endpoint please see the [Custody Withdrawal Example](https://github.com/bullish-exchange/api-examples/blob/master/custody/custody_withdrawal_ecdsa.py)

        Please note that Custody endpoints utilize a non-multiplied asset format for long decimal assets like SHIB and PEPE, ensuring consistency with real-world asset representation. This differs from Trading endpoints, which use a multiplied asset format, such as SHIB1M and PEPE1M. For more information, please see [help centre](https://bullishexchange.atlassian.net/wiki/spaces/BHC/pages/20807684/Understanding+Multiplied+Assets+PEPE1M+and+SHIB1M)
        
        The currently supported precisions for withdrawal quantities are as follows. Please note that fees are always specified in units of the symbol itself, not in smaller denominations (e.g. BTC not Satoshi, ETH not Wei) :

        | Symbol | Precision | Remarks |
        | ---------- |---------------- | --- |
        | USD | 2dp | |
        | BTC | 8dp | |
        | DOGE | 8dp | |
        | ETH | 8dp | |
        | LTC | 8dp | |
        | XRP | 6dp | |
        | AAVE | 8dp | |
        | CRV | 8dp | |
        | LINK | 8dp | |
        | MANA | 8dp | |
        | MATIC | 8dp | |
        | SUSHI | 8dp | |
        | UNI | 8dp | |
        | USDC | 6dp | |
        | USDT | 6dp | |
        | SHIB | 2dp | Please ensure to use the non-multiplied asset format (e.g., SHIB, PEPE, BONK) when creating withdrawals, as Custody endpoints align with real-world asset representation |
        | PEPE | 2dp | Please ensure to use the non-multiplied asset format (e.g., SHIB, PEPE, BONK) when creating withdrawals, as Custody endpoints align with real-world asset representation |
        | BONK | Round to the nearest ten (e.g., 120 or 130, not 125). | Please ensure to use the non-multiplied asset format (e.g., SHIB, PEPE, BONK) when creating withdrawals, as Custody endpoints align with real-world asset representation |

        **Ratelimited:** `True` - see [custody limits](#tag--custody)
      operationId: custody-withdrawal
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
      requestBody:
        description: withdrawal request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustodyApiEcdsaWithdrawalRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustodyApiWithdrawalResponse'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: []
  /v1/assets:
    get:
      tags:
        - asset-data
      summary: Get Assets
      description: Get supported assets. Clients can ignore [test assets](#overview--test-assets).
      operationId: asset-data-get-assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Asset'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/assets/{symbol}:
    get:
      tags:
        - asset-data
      summary: Get Asset by Symbol
      description: Get Asset by Symbol
      operationId: asset-data-get-asset
      parameters:
        - in: path
          name: symbol
          schema:
            type: string
          required: true
          example: BTC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/derivatives-positions:
    get:
      tags:
        - derivatives
      summary: Get derivatives positions
      description: Get derivatives positions
      operationId: get-derivatives-positions
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account. `tradingAccountId` is mandatory in the query for users with multiple trading accounts. For users with a single trading account, it can be automatically retrieved from the login.
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: false
        - in: query
          name: symbol
          example: BTC-USDC-PERP
          schema:
            $ref: '#/components/schemas/MarketSymbol'
        - in: query
          name: marketType
          description: Optional - Filter for results by expiry date
          example: DATED_FUTURE
          schema:
            $ref: '#/components/schemas/MarketTypeAsString'
        - in: query
          name: optionType
          description: Optional - Filter for results by option type
          example: CALL
          schema:
            $ref: '#/components/schemas/OptionTypeAsString'
        - in: query
          name: sort
          description: Optional - Sort results by Market Type or Option Type
          schema:
            $ref: '#/components/schemas/MarketTypeOrOptionTypeSortByAsString'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DerivativesPositionResponse'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/history/derivatives-settlement:
    get:
      tags:
        - history
      summary: Get Historical Hourly Derivatives Settlement
      description: |
        Get historical derivatives settlement. 
        - [supports pagination](#overview--pagination-support)
        - filtering on `settlementDatetime` requires additional keywords, [see filtering support](#overview--filtering-support)
        - Only the last 90 days of data is available for querying
      operationId: get-derivatives-settlement-history
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account. `tradingAccountId` is mandatory in the query for users with multiple trading accounts. For users with a single trading account, it can be automatically retrieved from the login.
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: false
        - in: query
          name: symbol
          example: BTC-USDC-PERP
          schema:
            $ref: '#/components/schemas/DatedFutureMarketSymbol'
          required: false
        - in: query
          name: settlementDatetime[gte]
          description: start timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
        - in: query
          name: settlementDatetime[lte]
          description: end timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/DerivativesSettlementResponse'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/history/transfer:
    get:
      tags:
        - history
      summary: Get Historical Account Transfer
      description: |
        Get historical transfers.
        - [supports pagination](#overview--pagination-support)
        - filtering on `createdAtDatetime` and `createdAtTimestamp` requires additional keywords, [see filtering support](#overview--filtering-support)
        - Only the last 90 days of data is available for querying
      operationId: get-transfer-history
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account. `tradingAccountId` is mandatory in the query for users with multiple trading accounts. For users with a single trading account, it can be automatically retrieved from the login.
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: false
        - in: query
          name: status
          description: Status of the transfer request. Defaults to `CLOSED`
          schema:
            type: string
            example: "CLOSED"
            default: "CLOSED"
        - in: query
          name: requestId
          description: Unique identifier of the transfer request
          schema:
            type: string
            example: "561287547935260672"
        - in: query
          name: assetSymbol
          description: Asset symbol of the transfer request
          schema:
            $ref: '#/components/schemas/AssetSymbol'
        - in: query
          name: createdAtDatetime[gte]
          description: start datetime of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
        - in: query
          name: createdAtDatetime[lte]
          description: end datetime of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/SubAccountTransferResponse'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/markets:
    parameters:
      - in: query
        name: marketType
        description: Market Types to filter markets against
        schema:
          $ref: '#/components/schemas/MarketTypeAsString'
        required: false
      - in: query
        name: optionType
        description: Option Type to filter markets against. If this is present, only Option Markets will be returned
        schema:
          $ref: '#/components/schemas/OptionTypeAsString'
        required: false
    get:
      tags:
        - market-data
      summary: Get Markets
      description: Get Markets. Clients can ignore [test markets](#overview--test-markets). Note -> "Leverage = Collateral ÷ (Collateral - Debt)"
      operationId: market-data-get-markets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 10
                items:
                  $ref: '#/components/schemas/Market'
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/markets/{symbol}:
    parameters:
      - in: path
        name: symbol
        schema:
          $ref: '#/components/schemas/MarketSymbol'
        required: true
    get:
      tags:
        - market-data
      summary: Get Market by Symbol
      description: Get Market by Symbol. Note -> "Leverage = Collateral ÷ (Collateral - Debt)"
      operationId: market-data-get-market
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market'
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/history/markets/{symbol}:
    parameters:
      - in: path
        name: symbol
        schema:
          $ref: '#/components/schemas/OptionAndDatedFuturesMarketSymbol'
        required: true
    get:
      tags:
        - market-data
      summary: Get Historical Market by Symbol
      description: Get Historical Market by Symbol. This endpoint will return specified market even if it is expired. Only applicable for this is applicable only for `DATED_FUTURE` and `OPTION` markets.
      operationId: market-data-get-historical-market
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Market'
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/markets/{symbol}/orderbook/hybrid:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: true
          description: symbol to get
      tags:
        - market-data
      summary: Get Market Order Book
      description: |
        Get Order Book by Market Symbol

        **Ratelimited:** `False`
      operationId: market-data-get-market-orderbook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderBook'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/markets/{symbol}/trades:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: true
          description: symbol to get
      tags:
        - market-data
      summary: Get Latest Market Trades
      description: |
        Get Market Trades by Market Symbol.
        - return 100 most recent trades
        - lookup from local cache

        **Ratelimited:** `False`
      operationId: market-data-get-anonymous-trades-by-market-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 100
                items:
                  $ref: '#/components/schemas/ObfuscatedTrade'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/index-prices:
    get:
      tags:
        - index-data
      summary: Get Index Prices
      description: |
        Retrieves the index price of all supported assets
      operationId: get-index-prices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndexPrice'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/index-prices/{assetSymbol}:
    parameters:
      - in: path
        name: assetSymbol
        schema:
          $ref: '#/components/schemas/AssetSymbol'
        required: true
    get:
      tags:
        - index-data
      summary: Get Index Price by Asset Symbol
      description: Retrieves the index price of a specified asset
      operationId: get-index-price-by-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexPrice'
        '404':
          description: Not found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/history/markets/{symbol}/trades:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: true
          description: symbol to get
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: tradeId
          description: specific `tradeId` to search for, if any
          schema:
            $ref: '#/components/schemas/TradeID'
            required: false
      tags:
        - history
      summary: Get Historical Market Trades
      description: |
        Get Historical Market Trades by Market Symbol. Supports querying of up to 7 days of data at a time.
        - [supports pagination](#overview--pagination-support)

        **Ratelimited:** `False`
        - Only the last 90 days of data is available for querying
      operationId: market-data-get-historical-anonymous-trades-by-market-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/ObfuscatedTradeWithId'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/history/markets/{symbol}/funding-rate:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/PerpMarketSymbol'
          required: true
          description: symbol to get
        - in: query
          name: updatedAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
        - in: query
          name: updatedAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
      tags:
        - history
      summary: Get Historical Funding Rate
      description: |
        Get historical hourly funding rate for the requested perpetual market
        - [supports pagination](#overview--pagination-support)
        - Only the last 90 days of data is available for querying
      operationId: market-data-get-funding-rate-history-by-market-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 100
                items:
                  $ref: '#/components/schemas/FundingRateHistoryResponse'
        '400':
          description: Bad Request
        '404':
          description: Market Symbol Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/option-ladder:
    get:
      parameters:
        - in: query
          name: baseSymbol
          schema:
            $ref: '#/components/schemas/AssetSymbol'
          required: true
          description: symbol to get
        - in: query
          name: expiry
          description: Optional - Filter results by expiry date of the option markets
          schema:
            $ref: '#/components/schemas/OptionExpiryDate'
        - in: query
          name: type
          description: Optional - Filter results by type (`CALL` or ` PUT`) of the option markets
          schema:
            $ref: '#/components/schemas/OptionType'
        - in: query
          name: sort
          description: Optional - Sort results by Option Type or Expiry Datetime
          schema:
            $ref: '#/components/schemas/OptionTypeOrExpiryDatetimeSortAsString'
      tags:
        - option-ladder
      summary: Get Option Ladder
      description: |
        Returns the available options contracts. This data helps traders quickly assess the available options and their respective prices, implied volatilities, and Greeks (such as delta, gamma, theta, and vega).
      operationId: get-option-ladder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionLadderResponse'
        '400':
          description: Bad Request
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/option-ladder/{symbol}:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/OptionMarketSymbol'
          required: true
          description: symbol to get. Only option markets are supported.
      tags:
        - option-ladder
      summary: Get Option Ladder for market
      description: |
        Returns the for a given `baseSymbol`, organised by strike prices and expiration dates. This data helps traders quickly assess the available options and their respective prices, implied volatilities, and Greeks (such as delta, gamma, theta, and vega).
      operationId: get-option-ladder-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionLadderResponse'
        '400':
          description: Bad Request
        '404':
          description: Option Market Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/markets/{symbol}/tick:
    get:
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: true
          description: symbol to get. Only perpetual markets are supported.
      tags:
        - market-data
      summary: Get Market Tick
      description: |
        Get Current Tick by Market Symbol.
        - return top 100

        **Ratelimited:** `False`
      operationId: market-data-current-tick-by-market-symbol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tick'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/markets/{symbol}/candle:
    get:
      tags:
        - market-data
      summary: Get Market Candle
      description: |
        Get Current OHLCV Candle by Market Symbol
        - [supports pagination](#overview--pagination-support)
        - filtering on `createdAtDatetime`, `createdAtTimestamp` requires additional keywords, [see filtering support](#overview--filtering-support)

        **Ratelimited:** `False`
      operationId: market-data-current-candle-by-market-symbol
      parameters:
        - in: path
          name: symbol
          schema:
            $ref: '#/components/schemas/MarketSymbol'
          required: true
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
        - in: query
          name: timeBucket
          schema:
            $ref: '#/components/schemas/TimeBucket'
          required: true
          description: time bucket size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 25
                items:
                  $ref: '#/components/schemas/OHLCVCandle'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/history/borrow-interest:
    get:
      tags:
        - history
      summary: Get Historical Hourly Borrow Interest
      description: |
        Get Historical Hourly Borrow Interest. Each entry denotes the hourly quantities for the specific asset. 
        Total borrowed quantity is inclusive of interest. `interest = totalBorrowedQuantity - borrowedQuantity` 
        which denotes the interest charged in the particular hour for the asset.
        - [supports pagination](#overview--pagination-support)
        - filtering `createdAtDatetime`, `createdAtTimestamp` requires additional keywords, [see filtering support](#overview--filtering-support)
        - Only the last 90 days of data is available for querying

        **Ratelimited:** `True`
      operationId: market-data-get-historical-borrow-interest
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account. `tradingAccountId` is mandatory in the query for users with multiple trading accounts. For users with a single trading account, it can be automatically retrieved from the login.
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: false
        - in: query
          name: assetSymbol
          example: BTC
          schema:
            $ref: '#/components/schemas/AssetSymbol'
          required: true
        - in: query
          name: createdAtDatetime[gte]
          description: start timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
        - in: query
          name: createdAtDatetime[lte]
          description: end timestamp of period, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/BorrowInterest'
        '404':
          description: Resource Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security:
        - jwtTokenAuth: [ ]
  /v1/time:
    get:
      tags:
        - time
      summary: Get Exchange Time
      description: Get Current Exchange Time
      operationId: market-data-get-current-exchange-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentExchangeTimeResponse'
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      security: []
  /v1/command:
    post:
      tags:
        - trading-accounts
      summary: Transfer Asset
      description: |
        Send command to transfer asset between two trading accounts.
      operationId: command
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - in: query
          name: commandType
          description: The command type, must be 'V1TransferAsset'
          required: true
          schema:
            type: string
            enum: ['V1TransferAsset']
            example: 'V1TransferAsset'
      responses:
        '200':
          description: Status OK. This means the request was successfully acknowledged. It does not necessarily mean the command was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingAccountTransferResponse'
        '400':
          description: |+
            Bad Request

            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOrderEntryResponse'
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        description: Command for action
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradingAccountTransferRequest'
      security:
        - jwtTokenAuth: [ ]
  /v1/simulate-portfolio-margin:
    post:
      tags:
        - portfolio-margin-simulator
      summary: Portfolio Margin Simulator
      description: |
        Use Portfolio margin simulator to determine your margin requirements and risk levels based on your current portfolio balances. 
        You can also append position details on top of your portfolio specifics to see simulated results.
      operationId: simulate-portfolio-margin

      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: includeExisting
          schema:
            $ref: '#/components/schemas/Boolean'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioSimulationResponse'
        '400':
          description: Bad Request
        '401':
          description: Not Authenticated
        '403':
          description: Access Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioSimulationRequest'
      security:
        - jwtTokenAuth: [ ]

  /v2/otc-trades:
    post:
      summary: Create OTC Trade
      operationId: create-otc-trade
      description: |
        Creates an OTC trade, requires [bearer token](#overview--add-authenticated-request-header) in authorization header.
        
        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field ordering 
        and addition of null fields in the request body. Prices do not require strict precision. 
        Eg. for asset precision of 4 - `100`, `100.0`, `100.00`, `100.000` and `100.0000` are all accepted.
      tags:
        - OTC
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
        - $ref: '#/components/parameters/BX-REFERRER'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOtcTradeCommand'
      responses:
        '200':
          description: |
            Status OK. The create OTC trade command was successfully acknowledged. To check the current status of the 
            OTC trade, query [Get Trade by ID](#get-/v2/otc-trades/-otcTradeId-) using `otcTradeId` or `clientOtcTradeId` received in the response payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOtcTradeResponse'
        '400':
          description: |+
            Bad Request
            
            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '401':
          description: Unauthorized. Either API details are missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '403':
          description: Forbidden- You do not have access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
      security:
        - jwtTokenAuth: [ ]
    get:
      summary: Get OTC Trades
      operationId: get-otc-trades
      description: |
        Get the otc trade list based on specified filters.
        - requires [bearer token](#overview--add-authenticated-request-header) in authorization header
        - [supports pagination](#overview--pagination-support)
        - supports filtering on `status`, `tradingAccountId`, `sharedMatchKey`, `clientOtcTradeId`, `createdAtDatetime`, `createdAtTimestamp`
      tags:
        - OTC
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: status
          description: OTC trade status
          schema:
            $ref: '#/components/schemas/OtcTradeExternalStatus'
          required: false
        - in: query
          name: tradingAccountId
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
        - in: query
          name: sharedMatchKey
          schema:
            $ref: '#/components/schemas/SharedMatchKey'
        - in: query
          name: clientOtcTradeId
          schema:
            $ref: '#/components/schemas/ClientOtcTradeId'
          required: false
        - in: query
          name: createdAtDatetime[ gte ]
          description: Start timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
        - in: query
          name: createdAtDatetime[ lte ]
          description: End timestamp of window, ISO 8601 with millisecond as string
          schema:
            $ref: '#/components/schemas/DateTime'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 0
                maxItems: 25
                items:
                  $ref: '#/components/schemas/OtcTradeView'
        '400':
          description: For example, sending a request with an invalid trading account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '403':
          description: Access Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
      security:
        - jwtTokenAuth: [ ]
  /v2/otc-trades/{otcTradeId}:
    parameters:
      - in: path
        name: otcTradeId
        schema:
          type: string
        required: true
        description: Id of the OTC Trade
    get:
      summary: Get OTC Trade by ID
      operationId: get-otc-trade--by-id
      description: Retrieve a specific otc trade using its unique identifier.
      tags:
        - OTC
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - in: query
          name: tradingAccountId
          description: Id of the trading account
          schema:
            $ref: '#/components/schemas/TradingAccountId'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtcTradeView'
        '400':
          description: For example, sending a request with an invalid trading account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '401':
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '403':
          description: Access Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '404':
          description: The given otcTradeId does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
      security:
        - jwtTokenAuth: [ ]
  /v2/otc-command:
    post:
      summary: OTC Trade Cancellation Command
      operationId: otc-command
      description: |
        Submits a command to the trading engine. A successful response indicates that the command entry was acknowledged 
        but does not indicate that the command was executed. 
        This endpoint uses the [signing format](#overview--signing-format) which does not require strict field 
        ordering and addition of null fields in the request body. 
        
        Command schemas and examples are provided below. Supported commands:
        - V1CancelOtcTrade
        - V1CancelAllOtcTrades
        
        Requires
        - [bearer token](#overview--add-authenticated-request-header) in authorization header
      tags:
        - OTC
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/BX-SIGNATURE'
        - $ref: '#/components/parameters/BX-TIMESTAMP'
        - $ref: '#/components/parameters/BX-NONCE'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              discriminator:
                propertyName: commandType
                mapping:
                  V1CancelOtcTrade: '#/components/schemas/CancelOtcTradeCommand'
                  V1CancelAllOtcTrades: '#/components/schemas/CancelAllOtcTradesCommand'
              oneOf:
                - $ref: '#/components/schemas/CancelOtcTradeCommand'
                - $ref: '#/components/schemas/CancelAllOtcTradesCommand'
            examples:
              CancelOtcTrade:
                $ref: '#/components/examples/CancelOtcTradeCommand'
              CancelAllOtcTrades:
                $ref: '#/components/examples/CancelAllOtcTradesCommand'
      responses:
        '200':
          description: Status OK. This means a command was successfully acknowledged.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CancelOtcTradeResponse'
                  - $ref: '#/components/schemas/CancelAllOtcTradesResponse'
              examples:
                CancelOtcTradeResponse:
                  $ref: '#/components/examples/CancelOtcTradeResponse'
                CancelAllOtcTradeResponse:
                  $ref: '#/components/examples/CancelAllOtcTradesResponse'
        '400':
          description: |+
            Bad Request
            
            For example, sending a request with the `BX-SIGNATURE` header missing will result in the following response:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '401':
          description: Unauthorized. Either API details are missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '403':
          description: Forbidden- You do not have access to the requested resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadOtcTradeEntryResponse'
      security:
        - jwtTokenAuth: [ ]

components:
  securitySchemes:
    jwtTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    Authorization:
      in: header
      name: Authorization
      description: authorization header, its value must be 'Bearer '  + [token](#overview--generate-a-jwt-token)
      required: true
      schema:
        type: string
    BX-SIGNATURE:
      in: header
      name: BX-SIGNATURE
      description: signature obtained using the [signing format](#overview--how-to-ensure-the-order-of-create-order-or-cancel-order-requests)
      required: true
      schema:
        type: string
    BX-TIMESTAMP:
      in: header
      name: BX-TIMESTAMP
      description: timestamp is the number of milliseconds since EPOCH
      required: true
      schema:
        type: string
    BX-NONCE:
      in: header
      name: BX-NONCE
      description: nonce is a client side incremented unsigned 64 bit integer
      required: true
      schema:
        type: string
    BX-REFERRER:
      in: header
      name: BX-REFERRER
      description: A numeric referrer id if applicable
      required: false
      schema:
        type: string
    BX-PUBLIC-KEY:
      in: header
      name: BX-PUBLIC-KEY
      description: public key being used to generate the JWT
      required: true
      schema:
        type: string
    BX-NONCE-WINDOW-ENABLED:
      in: header
      name: BX-NONCE-WINDOW-ENABLED
      description: |
        string representation of a boolean value, [enables out-of-order order requests to be processed](#overview--how-to-enable-out-of-order-processing-of-order-requests)
      schema:
        type: string
        enum:
          - "false"
          - "true"
        default: "false"
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Boolean:
      type: boolean
      format: true or false
      example: true
    MarketTypeOrOptionTypeSortByAsString:
      type: string
      description: Sorting parameter that can have the following string values `"marketType"`, `"optionType"`
      enum:
        - marketType
        - optionType
      example: optionType
    OptionTypeOrExpiryDatetimeSortAsString:
      type: string
      description: Sorting parameter that can have the following string values `"optionType"`, `"expiryDatetime"`
      enum:
        - optionType
        - expiryDatetime
      example: optionType
    MarketTypeAsString:
      type: string
      description: market type can have the following string values `"SPOT"`, `"PERPETUAL"`, `"DATED_FUTURE"`, `"OPTION"`
      enum:
        - SPOT
        - PERPETUAL
        - DATED_FUTURE
        - OPTION
      example: SPOT
    OptionTypeAsString:
      type: string
      description: option type can have the following string values `"CALL"`, `"PUT"`
      enum:
        - CALL
        - PUT
      example: CALL
    OrderTypeAsString:
      type: string
      description: order type can have the following string values `"LMT"`, `"MKT"`, `"STOP_LIMIT"`, `"POST_ONLY"`. `"MKT"` and `"STOP_LIMIT"` are not applicable for Options
      example: "LMT"
    OrderTypeAsStringV2:
      type: string
      description: order type can have the following string values `"LIMIT"`, `"MARKET"`, `"STOP_LIMIT"`, `"POST_ONLY"`. `"MARKET"` and `"STOP_LIMIT"` are not applicable for Options
      example: "LIMIT"
    OrderTypeAsStringAmend:
      type: string
      description: order type can have the following string values `"LIMIT"`, `"POST_ONLY"`
      example: "LIMIT"
    OrderSideAsString:
      type: string
      description: order side can have the following string values `"BUY"`, `"SELL"`
      example: BUY
    OrderTimeInForceAsString:
      type: string
      description: time in force can have the following string values `"GTC"`, `"FOK"`, `"IOC"`, see [details](#overview--order-timeinforce)
    OrderStatusAsString:
      type: string
      description: order status can have the following string values `"OPEN"`, `"CLOSED"`, `"CANCELLED"`, `"REJECTED"`
      example: OPEN
    TimeStampAsString:
      type: string
      format: string
      example: "1621490985000"
      description: unsigned 64 bit integer value which is the number of milliseconds since EPOCH expressed as string
    NonceAsString:
      type: string
      format: string
      example: "123456789"
      description: the nonce is a client side incremented unsigned 64 bit integer expressed as string
    SpotAccountID:
      type: string
      example: "1"
    OrderID:
      type: string
      example: "297735387747975680"
    AMMInstructionID:
      type: string
      example: "297735387747975680"
    RequestID:
      type: string
      example: "197735387747975680"
    OrderHandle:
      description: Unique numeric (i64) identifier generated on the client side expressed as a string value
      type: string
      example: "187"
    TradingAccountId:
      description: unique trading account ID
      type: string
      example: "111000000000001"
    TradingAccountIds:
      description: list of trading account ids.
      type: array
      items:
        type: string
        example: "111000000000001"
    MarketID:
      type: string
      example: "10000"
    TradeID:
      type: string
      example: "100020000000000060"
    AssetValue:
      description: see [asset value](#overview--price-and-quantity-precision) format
      type: string
      example: '1.00000000'
    UsdcValue:
      description: see [asset value](#overview--price-and-quantity-precision) format
      type: string
      example: '1.0000'
    UserId:
      type: string
      example: "12345"
      description: Bullish user ID
    TimeStampInSeconds:
      type: integer
      format: int64
      example: 1621490985
      description: number of seconds since EPOCH as integer
    DateTime:
      type: string
      format: date-time
      example: "2025-05-20T01:01:01.000Z"
      description: ISO 8601 with millisecond as string
    OptionExpiryDate:
      type: string
      format: date
      example: "20250520"
      description: Expiry Date of option, in YYYYMMDD format
    TimeStamp:
      type: string
      format: int64
      example: "1621490985000"
      description: number of milliseconds since EPOCH as string
    CustodyDestinationID:
      type: string
      example: '1560ec0b406c0d909bb9f5f827dd6aa14a1f638884f33a2a3134878102e78038'
      description: destination id provided by bullish that uniquely identifies a whitelisted address or account
    CustodyDestinationUserWalletType:
      type: string
      enum:
        - HOSTED
        - SELF_HOSTED
        - UNKNOWN
      description: The host type of the wallet. `HOSTED` wallet uses a custodial wallet service, `SELF_HOSTED` wallet is a non-custodial wallet.
    CustodyDestinationSigned:
      type: boolean
      example: true
      description: Whether this destination has been signed by the user. Some operations such as withdrawal requires the destination to be signed.
    CustodyDestinationVaspName:
      type: string
      example: Bullish
      description: The name of the hosting VASP of the wallet. This is only applicable for `HOSTED` wallets.
    CustodySelfHostedRequestedDepositAmount:
      type: string
      example: '12.3456'
      description: User-requested amount for the deposit.
    CustodySelfHostedVerificationAmount:
      type: string
      example: '0.0012'
      description: Bullish specified additional small deposit amount to add to the `requestedDepositAmount` for wallet verification.
    CustodySelfHostedDepositAddress:
      type: string
      example: '0xb0a64d976972d87b0783eeb1ff88306cd1891f02'
      description: The address of the Bullish trading account that the user should deposit to during a self hosted deposit attempt.
    CustodySelfHostedDepositMemo:
      type: string
      example: MZAXEMRXA
      description: The memo or destination tag of the Bullish trading account that the user should deposit to during a self hosted deposit attempt.
    CustodySelfHostedTotalDepositAmount:
      type: string
      example: '12.3468'
      description: The actual amount that the user should deposit for wallet verification. It is the sum of `requestedDepositAmount` and `verificationAmount`.
    CustodySelfHostedVerificationStatus:
      type: string
      enum:
        - VERIFIED
        - PENDING_VERIFICATION
        - VERIFICATION_EXPIRED
      description: |
        The status for the self-hosted wallet verification attempt.
        - `VERIFIED` - Self-hosted wallet has been verified
        - `PENDING_VERIFICATION` - pending verification via satoshi test
        - `VERIFICATION_EXPIRED` - the verification has expired
    NetworkID:
      type: string
      example: 'ETH'
      description: the network of the native coin or token, e.g. BTC, ETH, SOL
    CustodyNetworkAddress:
      type: string
      example: '0xb0a64d976972d87b0783eeb1ff88306cd1891f02'
      description: an address on the given network
    CustodySymbol:
      type: string
      example: 'USDC'
      description: symbol representing coin or token, e.g. USDC, BTC, ETH, SHIB
    CustodyFiatSymbol:
      type: string
      example: 'USD'
      description: symbol representing fiat currency, e.g. USD, EUR
    CustodyTransactionID:
      type: string
      example: 'DB:9e6304a08c9cc2a33e6bc6429a088eae2a6b940c8e312aede3a3780257b9b979'
      description: unique identifier for tracking a withdrawal during signing and in history
    CustodyTransactionHistoryID:
      type: string
      example: 'DB:9e6304a08c9cc2a33e6bc6429a088eae2a6b940c8e312aede3a3780257b9b979'
      description: unique identifier for tracking a deposit or withdrawal
    CustodyDirection:
      type: string
      example: 'DEPOSIT'
      description: direction of transaction from API user's perspective, 'DEPOSIT' or 'WITHDRAWAL'
    CustodyWithdrawalChallenge:
      type: string
      example: 041f3105d6e20fc84399dece611f4e6dbf8ad59d51b0db7fd6acf518d38401d4
    CustodyBankName:
      type: string
      example: Silvergate Bank
      description: name of bank
    CustodyPhysicalBankAddress:
      type: string
      description: physical location of bank
      example: 4250 Executive Square Suite 300 La Jolla, CA 92037
    CustodyBankAccountNumber:
      type: string
      description: bank account number
      example: "9873481227"
    CustodyBankNetworkID:
      type: string
      description: the fiat network, e.g. SWIFT, ABA or SEPA
      example: SWIFT
    CustodyBankRoutingCode:
      type: string
      description: routing code of bank
      example: "322286803"
    CustodyQuantity:
      type: string
      description: total quantity of symbol to withdraw including fee in units of symbol, not in smaller denominations (e.g. BTC not Satoshi, ETH not Wei) - quantity received will have fee subtracted.
      example: '100000.00'
    CustodyWithdrawalFee:
      type: string
      example: "3.00"
      description: withdrawal fee charged in units of symbol, not in smaller denominations (e.g. BTC not Satoshi, ETH not Wei)
    CustodyDepositMemo:
      type: string
      example: "925891241"
      description: memo or destination tag used during deposit to help identify account to credit funds to
    CustodyWithdrawalMemo:
      type: string
      example: MZAXEMRXA
      description: memo or destination tag that will be used as a reference on transaction
    CustodyWithdrawalLabel:
      type: string
      example: Our cold wallet
      description: descriptive label of destination provided by user
    CustodyTransactionStatus:
      type: string
      example: 'COMPLETE'
      description: one of 'PENDING', 'COMPLETE', 'CANCELLED', 'FAILED'
    CustodyTransactionDetails:
      type: object
      properties:
        address:
          type: string
          description: crypto network address
          example: "0xb0a64d976972d87b0783eeb1ff88306cd1891f02"
        blockchainTxId:
          type: string
          description: transaction id on chain
          example: "0xec557f2c7278d2dae2d98a27b9bd43f386789a4209090cbbd11595f1bed4a4c2"
        swiftUetr:
          type: string
          description: unique end-to-end-transaction reference for swift transactions
          example: b55aa5cd-baa2-4122-8c17-ae9b856ae36a
    CustodyAvailableWithdrawalLimit:
      type: string
      example: "20000.0"
      description: remaining limit on amount of coin or token that could be withdrawn now, in units of the symbol itself, not in smaller denominations (e.g. BTC not Satoshi, ETH not Wei)
    Custody24HWithdrawalLimit:
      type: string
      example: "1000000.00"
      description: limit on amount of coin or token that can be withdrawn over a 24 hour period, in units of the symbol itself, not in smaller denominations (e.g. BTC not Satoshi, ETH not Wei)
    CustodyCreatedAtDateTime:
      type: string
      example: "2022-09-16T07:56:15.000Z"
      description: time of initial transaction
    CustodyUpdatedAtDateTime:
      type: string
      example: "2022-09-16T07:59:23.000Z"
      description: last updated time of transaction
    PublicKey:
      type: string
      example: PUB_R1_6PTdfWbXvXWQduhcCiRooGHTVpriu15xMqfr7EDq6sWLDj7NjS
    Signature:
      type: string
      example: SIG_R1_K35d5hSY5FbNoJwrCfmH6QvPG7m9XmhL2mgWYcSB7q2hKJ2mv39Luck9WBJroSB635ZAXhdg36TYG7QJX1fTidbsMvyE8N
    SpotAccount:
      type: object
      required:
        - accountId
        - type
        - symbol
        - total
        - free
        - used
        - updatedAtDatetime
        - updatedAtTimestamp
      properties:
        accountId:
          description: unique spot account ID
          allOf:
            - $ref: '#/components/schemas/SpotAccountID'
        type:
          description: Spot Account
          allOf:
            - type: string
              description: Type of Account
              example: spot
        symbol:
          description: asset symbol
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        total:
          description: total is `free` + `used` assets within the account, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        free:
          description: refers to the assets that are available to use on the account excluding borrowed assets, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        used:
          description: refers to the assets that are locked in orders, loans and AMM instructions, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        updatedAtDatetime:
          description: denotes the time the AMM instruction was updated by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        updatedAtTimestamp:
          description: denotes the time the AMM instruction was updated by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    AssetAccount:
      type: object
      required:
        - tradingAccountId
        - assetId
        - assetSymbol
        - availableQuantity
        - borrowedQuantity
        - lockedQuantity
        - loanedQuantity
        - updatedAtDatetime
        - updatedAtTimestamp
      properties:
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        assetId:
          description: asset ID
          allOf:
            - $ref: '#/components/schemas/AssetID'
        assetSymbol:
          description: asset symbol
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        availableQuantity:
          description: the assets that are available to use on the account, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        borrowedQuantity:
          description: the assets on the account that are borrowed, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        lockedQuantity:
          description: the assets on the account that are locked in orders, loans and AMM instructions, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        loanedQuantity:
          description: the assets on the account that are being loaned, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        updatedAtDatetime:
          description: denotes the time the AMM instruction was updated by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        updatedAtTimestamp:
          description: denotes the time the AMM instruction was updated by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    AmendOrderRequest:
      type: object
      required:
        - quantity
      properties:
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        handle:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          description: symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        price:
          description: updated price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        stopPrice:
          description: updated stop price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: updated quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
    CreateOrderResponse:
      type: object
      required:
        - message
        - requestId
        - orderId
        - test
      properties:
        message:
          description: message
          type: string
          example: "Command acknowledged - CreateOrder"
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
    CreateOrderCommandResponseV3:
      type: object
      required:
        - message
        - requestId
        - orderId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        clientOrderId:
          description: unique numeric identifier generated on the client side expressed as a string value
          type: string
      example:
        message: 'Command acknowledged - CreateOrder'
        requestId: '633910976353665024'
        orderId: '633910775316480001'
        clientOrderId: '1234567'
    AmendOrderCommandResponseV1:
      type: object
      required:
        - message
        - requestId
        - orderId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        clientOrderId:
          description: Will be updated as part of a successful order amendment
          type: string
      example:
        message: 'Command acknowledged - AmendOrder'
        requestId: '633910976353665024'
        orderId: '633910775316480001'
        clientOrderId: '1234567-1'
    CancelOrderCommandResponseV3:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        clientOrderId:
          description: unique numeric identifier generated on the client side expressed as a string value
          type: string
      example:
        message: 'Command acknowledged - CancelOrder'
        requestId: '633910976353665024'
        orderId: '633910775316480001'
    CreateOrderCommand:
      type: object
      required:
        - commandType
        - handle
        - symbol
        - type
        - side
        - price
        - stopPrice
        - quantity
        - allowMargin
        - timeInForce
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V2CreateOrder'
          type: string
          example: 'V2CreateOrder'
        handle:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        type:
          allOf:
            - $ref: '#/components/schemas/OrderTypeAsString'
          example: 'LMT'
        side:
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
          example: 'BUY'
        price:
          description: price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        stopPrice:
          description: stop price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        timeInForce:
          allOf:
            - $ref: '#/components/schemas/OrderTimeInForceAsString'
          example: 'GTC'
        allowMargin:
          description: allows to borrow on the order
          type: boolean
          example: false
        isMMP:
          description: Indicate if the order is subject to `Market Maker Protection`. Only applicable to option markets
          type: boolean
          example: true
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    CreateOrderCommandV3:
      type: object
      required:
        - commandType
        - symbol
        - type
        - side
        - quantity
        - timeInForce
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V3CreateOrder'
          type: string
        clientOrderId:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        type:
          allOf:
            - $ref: '#/components/schemas/OrderTypeAsStringV2'
        side:
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
        price:
          description: price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        stopPrice:
          description: stop price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        timeInForce:
          allOf:
            - $ref: '#/components/schemas/OrderTimeInForceAsString'
        allowBorrow:
          description: allows to borrow on the order
          type: boolean
          default: false
          example: false
        isMMP:
          description: Indicate if the order is subject to `Market Maker Protection`. Only applicable to option markets
          type: boolean
          example: true
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    AmendOrderV1:
      type: object
      required:
        - commandType
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1AmendOrder'
          type: string
        orderId:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        type:
          allOf:
            - $ref: '#/components/schemas/OrderTypeAsStringV2'
        price:
          description: price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        clientOrderId:
          description: unique numeric identifier generated on the client side expressed as a string value
          type: string
        quantity:
          description: quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    TradingAccountResponse:
      type: object
      required:
        - isBorrowing
        - isLending
        - isPrimaryAccount
        - maxInitialLeverage
        - rateLimitToken
        - tradingAccountDescription
        - tradingAccountId
        - tradingAccountName
        - isDefaulted
        - riskLimitUSD
        - totalBorrowedUSD
        - totalCollateralUSD
        - initialMarginUSD
        - warningMarginUSD
        - liquidationMarginUSD
        - fullLiquidationMarginUSD
        - defaultedMarginUSD
        - endCustomerId
        - isConcentrationRiskEnabled
        - liquidityAddonUSD
        - marketRiskUSD
        - marginProfile
        - totalLiabilitiesUSD
        - tradeFeeRate
      properties:
        isBorrowing:
          description: whether the trading account is borrowing
          type: string
          example: "false"
        isLending:
          description: whether the trading account is lending
          type: string
          example: "false"
        makerFee:
          description: Deprecated and no longer accurate. See `tradeFeeRate` instead
          type: string
          example: "0.00000000"
          deprecated: true
        takerFee:
          description: Deprecated and no longer accurate. See `tradeFeeRate` instead
          type: string
          example: "0.00020000"
          deprecated: true
        maxInitialLeverage:
          description: max initial leverage
          type: string
          example: "1"
        tradingAccountId:
          description: id of the trading account
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        tradingAccountName:
          description: name of the trading account
          type: string
          example: algo trading account
        tradingAccountDescription:
          description: description of the trading account
          type: string
          example: algo trading account with experimental strategy
        isPrimaryAccount:
          description: whether this is the primary account
          type: string
          example: "false"
        rateLimitToken:
          description: unique rate limit token of the trading account
          type: string
          example: 97d98951b12fb11f330dd9cb1b807d888c702679ee602edcf1ebc6bac17ad63d
        isDefaulted:
          description: whether the trading account is defaulted
          type: string
          example: "false"
        tradeFeeRate:
          description: Trade fees per `feeGroupId` for this trading account
          type: array
          minItems: 0
          items:
            allOf:
              - $ref: '#/components/schemas/TradeFeeRate'
        riskLimitUSD:
          description: The maximum allowed borrowing for this trading account (in USD currency)
          type: string
          example: "10000.0000"
        totalLiabilitiesUSD:
          description: The The total liabilities for this trading account (in USD currency)
          type: string
          example: "14000.0000"
        totalBorrowedUSD:
          description: total borrowed across all assets in this trading account displayed in the reference asset in USD
          type: string
          example: "12000.0000"
        totalCollateralUSD:
          description: total collateral across all assets in this trading account displayed in the reference asset in USD
          type: string
          example: "13000.0000"
        initialMarginUSD:
          description: The minimum margin one must maintain in order to be able to purposefully increase risk
          type: string
          example: "0000.0000"
        warningMarginUSD:
          description: The minimum margin when the customer will receive warning via email/notifications over UI
          type: string
          example: "0000.0000"
        liquidationMarginUSD:
          description: The minimum value of margin one must maintain in order to avoid liquidation
          type: string
          example: "0000.0000"
        fullLiquidationMarginUSD:
          description: The value of margin when full liquidation occurs
          type: string
          example: "0000.0000"
        defaultedMarginUSD:
          description: The value of margin when this trading account will be moved into a Defaulted state
          type: string
          example: "0000.0000"
        endCustomerId:
          description: The end customer id used for self trade prevention (default is institution id, max 32 characters)
          type: string
          example: "PrimeBroker"
        isConcentrationRiskEnabled:
          description: whether concentration risk checks are enforced for an account when sending new orders. By default, concentration risk checks will apply to all accounts
          type: string
          example: true
        liquidityAddonUSD:
          description: expected market impact of unwinding the portfolio in the case of a liquidation event
          type: string
          example: "1000.0000"
        marketRiskUSD:
          description: the worst possible loss on the portfolio based on scenario analysis
          type: string
          example: "2000.0000"
        marginProfile:
          description: Contains the market risk multipliers applied to a trading account to derive the five individual Margin Requirement values
          allOf:
            - $ref: '#/components/schemas/MarginProfile'

    MarginProfile:
      properties:
        initialMarketRiskMultiplierPct:
          description: market risk multiplier used to calculate initial margin requirement of the account
          type: string
          example: "200.00"
        warningMarketRiskMultiplierPct:
          description: market risk multiplier used to calculate warning margin requirement of the account
          type: string
          example: "150.00"
        liquidationMarketRiskMultiplierPct:
          description: market risk multiplier used to calculate liquidation margin requirement of the account
          type: string
          example: "100.00"
        fullLiquidationMarketRiskMultiplierPct:
          description: market risk multiplier used to calculate full liquidation margin requirement of the account
          type: string
          example: "75.00"
        defaultedMarketRiskMultiplierPct:
          description: market risk multiplier used to calculate defaulted margin requirement of the account
          type: string
          example: "50.00"
    CreateAMMInstructionResponse:
      type: object
      required:
        - message
        - requestId
        - liquidityId
        - test
      properties:
        message:
          description: message
          type: string
          example: "Command acknowledged - AddLiquidity"
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        liquidityId:
          description: unique AMM instruction ID
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
    CreateAMMInstructionCommandResponseV3:
      type: object
      required:
        - message
        - requestId
        - instructionId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        instructionId:
          description: unique AMM instruction ID
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
      example:
        message: 'Command acknowledged - CreateAMMInstruction'
        requestId: '633906221577404416'
        instructionId: '633906221577404424'
    TerminateAMMInstructionCommandResponseV3:
      type: object
      required:
        - message
        - requestId
        - instructionId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        instructionId:
          description: unique AMM instruction ID
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
      example:
        message: 'Command acknowledged - TerminateAMMInstruction'
        requestId: '633906221577404416'
        instructionId: '633906221577404424'
    BadOrderEntryResponse:
      type: object
      required:
        - message
        - errorCode
        - errorCodeName
      properties:
        message:
          description: message
          type: string
          example: "Missing signature header"
        errorCode:
          description: unique error code
          type: integer
          example: 6029
        errorCodeName:
          description: unique error code name
          type: string
          example: "MISSING_SIGNATURE_HEADER"
    CreateAMMInstructionCommand:
      type: object
      required:
        - commandType
        - symbol
        - baseQuantity
        - quoteQuantity
        - upperBound
        - lowerBound
        - feeTierId
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V2AddLiquidity'
          type: string
          example: 'V2AddLiquidity'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        baseQuantity:
          description: base quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteQuantity:
          description: quote quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        upperBound:
          type: string
          description: upper bound of price range, in quote currency
          example: "14000.0000"
        lowerBound:
          type: string
          description: lower bound of price range, in quote currency
          example: "12000.0000"
        feeTierId:
          allOf:
            - $ref: '#/components/schemas/FeeTierId'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    CreateAMMInstructionCommandV3:
      type: object
      required:
        - commandType
        - symbol
        - baseQuantity
        - quoteQuantity
        - upperBound
        - lowerBound
        - feeTierId
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V3CreateAMMInstruction'
          type: string
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        baseQuantity:
          description: base quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteQuantity:
          description: quote quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        upperBound:
          type: string
          description: upper bound of price range, in quote currency
        lowerBound:
          type: string
          description: lower bound of price range, in quote currency
        feeTierId:
          allOf:
            - $ref: '#/components/schemas/FeeTierId'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V3CreateAMMInstruction'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        baseQuantity: '0'
        quoteQuantity: '50000.1'
        upperBound: '25000'
        lowerBound: '20000'
        feeTierId:
          $ref: '#/components/schemas/FeeTierId/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CancelOrderCommand:
      type: object
      required:
        - commandType
        - orderId
        - handle
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V2CancelOrder'
          type: string
          example: 'V2CancelOrder'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        handle:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    CancelOrderCommandV3:
      type: object
      required:
        - commandType
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V3CancelOrder'
          type: string
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        clientOrderId:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V3CancelOrder'
        orderId:
          $ref: '#/components/schemas/OrderID/example'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    AmendOrderCommandV1:
      type: object
      required:
        - commandType
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1AmendOrder'
          type: string
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        type:
          allOf:
            - $ref: '#/components/schemas/OrderTypeAsStringAmend'
        price:
          description: price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        clientOrderId:
          description: unique numeric identifier generated on the client side expressed as a string value
          type: string
        quantity:
          description: quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V1AmendOrder'
        orderId:
          $ref: '#/components/schemas/OrderID/example'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        type:
          $ref: '#/components/schemas/OrderTypeAsStringAmend/example'
        price:
          $ref: '#/components/schemas/AssetValue/example'
        clientOrderId: "633914459442118656"
        quantity:
          $ref: '#/components/schemas/AssetValue/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    TerminateAMMInstructionCommandV3:
      type: object
      required:
        - commandType
        - instructionId
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V3TerminateAMMInstruction'
          type: string
        instructionId:
          description: unique AMM instruction ID
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V3TerminateAMMInstruction'
        instructionId:
          $ref: '#/components/schemas/AMMInstructionID/example'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    SetMMPCommandV1:
      type: object
      required:
        - commandType
        - tradingAccountId
        - underlyingAssetSymbol
        - windowTimeInSeconds
        - frozenTimeInSeconds
      properties:
        commandType:
          description: the command type must be provided as 'V1SetMMP'
          type: string
          example: 'V1SetMMP'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        underlyingAssetSymbol:
          allOf:
            - $ref: '#/components/schemas/UnderlyingAssetSymbol'
        windowTimeInSeconds:
          type: string
          description: time window during which the MMP checks are conducted. It helps in determining how frequently the system evaluates the market maker's activity against predefined thresholds. Value needs to be `> 0`. Maximum value is 600 seconds (10 minutes).
        frozenTimeInSeconds:
          type: string
          description: the duration for which a market maker’s trading activity is temporarily halted after a protective measure is triggered. Value needs to be `>= 0`. Maximum value is 3600 seconds (60 minutes).
        quantityLimit:
          type: string
          description: cap on the total number of contracts that a market maker can trade within `windowTimeInSeconds`. This is direction(side) agnostic. Needs to be `> 0` if set.
          example: "100"
        deltaLimit:
          type: string
          description: net delta exposure that a market maker can accumulate within `windowTimeInSeconds`
          example: "10"
      example:
        commandType: "V1SetMMP"
        tradingAccountId: "123567443543"
        underlyingAssetSymbol: "BTC"
        windowTimeInSeconds: "10"
        frozenTimeInSeconds: "5"
        quantityLimit: "10"
        deltaLimit: "1"
    SetMMPCommandResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: 'Command acknowledged - SetMMPConfig'
        requestId: '633910976353665025'
    ResetMMPCommandV1:
      type: object
      required:
        - commandType
        - tradingAccountId
        - underlyingAssetSymbol
      properties:
        commandType:
          description: the command type must be provided as 'V1ResetMMP'
          type: string
          example: 'V1ResetMMP'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        underlyingAssetSymbol:
          allOf:
            - $ref: '#/components/schemas/UnderlyingAssetSymbol'
      example:
        commandType: 'V1ResetMMP'
        tradingAccountId: "123567443543"
        underlyingAssetSymbol: "BTC"
    ResetMMPCommandResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: 'Command acknowledged - ResetMMPConfig'
        requestId: '633910976353665026'
    CancelAllOrdersRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/CancelAllOrdersCommand'
    CancelAllOrdersCommand:
      type: object
      required:
        - commandType
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1CancelAllOrders'
          type: string
        tradingAccountId:
          description: unique trading account Id
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V1CancelAllOrders'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CancelAllOrdersResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: "Command acknowledged - CancelAllOrders"
        requestId: "633900538459062272"

    DelayedCancelAllOrdersRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/DelayedCancelAllOrdersCommand'
    DelayedCancelAllOrdersCommand:
      type: object
      required:
        - commandType
        - delayBySeconds
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1DelayedCancelAllOrders'
          type: string
          example: 'V1DelayedCancelAllOrders'
        cancelId:
          allOf:
            - $ref: '#/components/schemas/CancelId'
        delayBySeconds:
          description: 'Delay of the cancel-all-order in seconds'
          allOf:
            - $ref: '#/components/schemas/DelayBySeconds'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V1DelayedCancelAllOrders'
        delayBySeconds:
          $ref: '#/components/schemas/DelayBySeconds/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    DelayedCancelAllOrdersResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: "Command acknowledged - DelayedCancelAllOrders"
        requestId: "633914459442118656"
    UnsetDelayedCancelAllOrdersRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/UnsetDelayedCancelAllOrdersCommand'
    UnsetDelayedCancelAllOrdersCommand:
      type: object
      required:
        - commandType
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1UnsetDelayedCancelAllOrders'
          type: string
          example: 'V1UnsetDelayedCancelAllOrders'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V1UnsetDelayedCancelAllOrders'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    UnsetDelayedCancelAllOrdersResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: "Command acknowledged - UnsetDelayedCancelAllOrders"
        requestId: "633914459442118656"
    JWT:
      type: string
      format: string
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoic2FuZGVlcCByYWtocmEifQ.wyVq6PlKaldWXtu-jz2hJCvkGl1lM2S7HUKCH8LnXp0"
      description: JWT token
    Authorizer:
      type: string
      format: string
      example: "03E02367E8C900000500000000000000"
      description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
    TradingAccountTransferRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/TransferAssetCommand'
    TradingAccountTransferResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: "Command acknowledged - TransferAsset"
        requestId: '633909659774222336'
    TransferAssetCommand:
      type: object
      required:
        - commandType
        - assetSymbol
        - quantity
        - fromTradingAccountId
        - toTradingAccountId
      properties:
        commandType:
          description: The command type, e.g. 'V1TransferAsset'
          type: string
          example: 'V1TransferAsset'
        assetSymbol:
          description: Symbol of the asset. i.e. currency
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        quantity:
          description: Quantity of the asset.
          type: string
          example: '100'
        fromTradingAccountId:
          description: Source of the asset transfer
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        toTradingAccountId:
          description: Destination of the asset transfer
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
    TransferAssetCommandV2:
      type: object
      required:
        - commandType
        - assetSymbol
        - quantity
        - fromTradingAccountId
        - toTradingAccountId
      properties:
        commandType:
          description: The command type, e.g. 'V2TransferAsset'
          type: string
        assetSymbol:
          description: Symbol of the asset. i.e. currency
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        quantity:
          description: |
            Quantity of the asset. Can be representated with any number of trailing zeroes up to asset precision 
            (eg `100.1`, `100.10`, `100.100`, `100.1000` are valid for asset precision 4)
          type: string
        fromTradingAccountId:
          description: Source of the asset transfer
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        toTradingAccountId:
          description: Destination of the asset transfer
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V2TransferAsset'
        assetSymbol:
          $ref: '#/components/schemas/AssetSymbol/example'
        quantity: '100.1'
        fromTradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
        toTradingAccountId: '111000000000002'
    CancelAllOrdersByMarketRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/CancelAllOrdersByMarketCommand'
    CancelAllOrdersByMarketCommand:
      type: object
      required:
        - commandType
        - symbol
        - tradingAccountId
      properties:
        commandType:
          description: The command type, it must be 'V1CancelAllOrdersByMarket'
          type: string
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        tradingAccountId:
          description: unique trading account Id
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: 'V1CancelAllOrdersByMarket'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CancelAllOrdersByMarketResponse:
      type: object
      required:
        - message
        - requestId
      properties:
        message:
          description: message
          type: string
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
      example:
        message: "Command acknowledged - CancelAllOrdersByMarket"
        requestId: "633914459442118656"
    LoginRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        publicKey:
          allOf:
            - $ref: '#/components/schemas/PublicKey'
        signature:
          allOf:
            - $ref: '#/components/schemas/Signature'
        loginPayload:
          allOf:
            - $ref: '#/components/schemas/LoginPayload'
    LoginPayload:
      type: object
      required:
        - userId
        - nonce
        - expirationTime
        - biometricsUsed
        - sessionKey
      properties:
        userId:
          description: Bullish user ID corresponding to the metadata
          allOf:
            - $ref: '#/components/schemas/UserId'
        nonce:
          description: epoch timestamp in seconds; note this login API nonce has no connection to the orders API nonce
          allOf:
            - $ref: '#/components/schemas/TimeStampInSeconds'
        expirationTime:
          description: epoch timestamp in seconds that is 5 minutes in the future
          allOf:
            - $ref: '#/components/schemas/TimeStampInSeconds'
        biometricsUsed:
          description: biometrics flag. always `false`
          type: boolean
          example: false
        sessionKey:
          description: session key. always `null`
          type: string
          example: null
    LoginResponse:
      type: object
      required:
        - authorizer
        - token
      properties:
        authorizer:
          description: Authorizer
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        token:
          description: JWT token
          allOf:
            - $ref: '#/components/schemas/JWT'
    CreateOrderRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/CreateOrderCommand'
    CreateAMMInstructionRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/CreateAMMInstructionCommand'
    CancelOrderRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - tradingAccountId
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          allOf:
            - $ref: '#/components/schemas/NonceAsString'
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        command:
          description: the command to be executed which is sent in the request payload
          allOf:
            - $ref: '#/components/schemas/CancelOrderCommand'
    Order:
      type: object
      required:
        - orderId
        - clientOrderId
        - symbol
        - price
        - stopPrice
        - averageFillPrice
        - allowBorrow
        - quantity
        - quantityFilled
        - quoteAmount
        - baseFee
        - quoteFee
        - isLiquidation
        - side
        - type
        - timeInForce
        - status
        - statusReason
        - statusReasonCode
        - createdAtTimestamp
        - createdAtDatetime
      properties:
        clientOrderId:
          allOf:
            - $ref: '#/components/schemas/OrderHandle'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        price:
          description: price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        averageFillPrice:
          description: average fill price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        stopPrice:
          description: stop price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        allowBorrow:
          description: indicates if the order was allowed to borrow (does not indicate that borrowing occurred)
          type: boolean
          example: false
        quantity:
          description: quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantityFilled:
          description: quantity filled, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteAmount:
          description: quote quantity deducted from asset account, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        baseFee:
          description: base fee rate that will be charged upon trade execution, see [asset value](#overview--price-and-quantity-precision) format
          example: '0.00100000'
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteFee:
          description: quote fee rate that will be charged upon trade execution, see [asset value](#overview--price-and-quantity-precision) format
          example: '0.0010'
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        borrowedBaseQuantity:
          description: quantity borrowed, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        borrowedQuoteQuantity:
          description: quantity borrowed, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        isLiquidation:
          description: indicates if the order was executed as a liquidation order
          type: boolean
          example: false
        side:
          description: order side
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
          example: 'BUY'
        type:
          description: order type
          allOf:
            - $ref: '#/components/schemas/OrderTypeAsString'
          example: 'LMT'
        timeInForce:
          description: time in force
          allOf:
            - $ref: '#/components/schemas/OrderTimeInForceAsString'
          example: 'GTC'
        status:
          description: order status
          allOf:
            - $ref: '#/components/schemas/OrderStatusAsString'
          example: 'OPEN'
        statusReason:
          description: status reason, describes why the order is in a specific state
          type: string
          example: "User cancelled"
        statusReasonCode:
          description: status reason code, see [details](#overview--error--rejection-codes)
          type: string
          example: "1002"
        createdAtDatetime:
          description: denotes the time the order was ACK'd by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the order was ACK'd by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    AMMInstruction:
      type: object
      required:
        - apy
        - baseCurrentQuantity
        - baseFee
        - baseInvestQuantity
        - basePrice
        - baseWithdrawQuantity
        - createdAtDateTime
        - createdAtTimestamp
        - currentValue
        - dislocationEnabled
        - feeTierId
        - impermanentLoss
        - initialBasePrice
        - initialQuotePrice
        - initialValue
        - liquidityId
        - instructionId
        - lowerBound
        - price
        - quoteFee
        - quoteInvestQuantity
        - quotePrice
        - quoteWithdrawQuantity
        - requestId
        - staticSpreadFee
        - status
        - statusReason
        - statusReasonCode
        - symbol
        - updatedAtDateTime
        - updatedAtTimestamp
        - upperBound
        - yieldEarn
      properties:
        liquidityId:
          description: unique AMM instruction ID
          deprecated: true
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
        instructionId:
          description: unique AMM instruction ID
          allOf:
            - $ref: '#/components/schemas/AMMInstructionID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        baseFee:
          description: base fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteFee:
          description: quote fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        status:
          description: order status
          allOf:
            - $ref: '#/components/schemas/OrderStatusAsString'
          example: 'OPEN'
        statusReason:
          description: status reason, describes why the order is in a specific state
          type: string
          example: "Ok"
        statusReasonCode:
          description: status reason code, see [details](#overview--error--rejection-codes)
          type: integer
          example: 1001
        createdAtDatetime:
          description: denotes the time the order was ACK'd by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the order was ACK'd by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        24HrApy:
          type: string
          description: APY of the last 24 Hours, only for AMM instructions with `OPEN` status
          example: "2.3319"
        24HrYieldEarn:
          type: string
          description: amount of money earned in USD from the last 24 Hours, only for AMM instructions with `OPEN` status
          example: "0.00"
        apy:
          type: string
          description: yield generated from the time AMM instruction was created, in annualised percentage
          example: "0.0000"
        baseCurrentQuantity:
          type: string
          description: amount of base asset this AMM instruction currently holds, only for AMM instruction with `OPEN` status
          example: "0.00000000"
        baseInvestQuantity:
          type: string
          description: initial base investment
          example: "0.00000008"
        basePrice:
          type: string
          description: current price of base asset
          example: "345.6700"
        baseWithdrawQuantity:
          type: string
          description: amount of base asset returned when AMM instruction is terminated
          example: "0.00000010"
        currentValue:
          type: string
          description: value of assets (base and quote) in USD amount that this AMM instruction currently holds
          example: "0.0000"
        dislocationEnabled:
          description: dislocation enabled/disabled
          type: boolean
          example: false
        feeTierId:
          allOf:
            - $ref: '#/components/schemas/FeeTierId'
        finalValue:
          type: string
          description: value of assets (base and quote) in USD amount when AMM instruction was terminated, only for AMM instruction with `CLOSED` status
          example: "0.0001"
        impermanentLoss:
          type: string
          description: impermanent loss
          example: "0.0000"
        initialBasePrice:
          type: string
          description: price of base asset when AMM instruction was created
          example: "100.0000"
        initialQuotePrice:
          type: string
          description: price of quote asset when AMM instruction was created
          example: "0.0100"
        initialValue:
          type: string
          description: value of assets (base and quote) in USD amount when AMM instruction was created
          example: "0.0000"
        lowerBound:
          type: string
          description: lower bound of price range, in quote currency
          example: "0.0013"
        price:
          type: string
          description: current price of AMM, see [Get Tick By Symbol](#get-/v1/markets/-symbol-/tick)
          example: "456.7800"
        quoteCurrentQuantity:
          type: string
          description: amount of quote asset this AMM instruction currently holds, only for AMM instruction with `OPEN` status
          example: "0.0000"
        quoteInvestQuantity:
          type: string
          description: initial quote investment
          example: "0.0009"
        quotePrice:
          type: string
          description: current price of quote asset
          example: "1.0000"
        quoteWithdrawQuantity:
          type: string
          description: amount of quote asset returned when AMM instruction is terminated
          example: "0.0011"
        lastDistributedPrice:
          type: string
          description: (Perpetual market only) The price used at the time of settlement for AMM Instructions that can be used to determine mtmPnl and the actual Pnl
          example: null
        requestId:
          description: unique request ID
          allOf:
            - $ref: '#/components/schemas/RequestID'
        staticSpreadFee:
          type: string
          description: static spread fee, see [Get Market By Symbol](#get-/v1/markets/-symbol-)
          example: "0.00200000"
        updatedAtDatetime:
          description: denotes the time the AMM instruction was updated by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        updatedAtTimestamp:
          description: denotes the time the AMM instruction was updated by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        upperBound:
          type: string
          description: upper bound of price range, in quote currency
          example: "14000.0000"
        yieldEarn:
          type: string
          description: amount of money earned in USD
          example: "0.00"
    ObfuscatedTradeWithId:
      type: object
      required:
        - tradeId
        - symbol
        - price
        - quantity
        - side
        - isTaker
        - createdAtTimestamp
        - createdAtDatetime
      properties:
        tradeId:
          description: unique trade ID
          allOf:
            - $ref: '#/components/schemas/TradeID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        price:
          description: price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        side:
          description: order side
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
          example: 'BUY'
        isTaker:
          description: denotes whether this is a taker's trade
          allOf:
            - $ref: '#/components/schemas/Boolean'
        createdAtDatetime:
          description: denotes the time the trade was executed by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the trade was executed by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    ObfuscatedTrade:
      type: object
      required:
        - tradeId
        - symbol
        - price
        - quantity
        - side
        - isTaker
        - createdAtTimestamp
        - createdAtDatetime
      properties:
        tradeId:
          description: unique trade ID
          allOf:
            - $ref: '#/components/schemas/TradeID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        price:
          description: price
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        side:
          description: order side
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
          example: 'BUY'
        isTaker:
          description: denotes whether this is a taker's trade
          allOf:
            - $ref: '#/components/schemas/Boolean'
        createdAtDatetime:
          description: denotes the time the trade was executed by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the trade was executed by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    CustodyApiWithdrawalCommand:
      type: object
      required:
        - commandType
        - destinationId
        - symbol
        - network
        - quantity
      properties:
        commandType:
          description: the command type, it must be 'V1WithdrawalChallenge'
          type: string
          example: 'V1WithdrawalChallenge'
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        quantity:
          example: '100000.000001'
          allOf:
            - $ref: '#/components/schemas/CustodyQuantity'
    CustodyApiEcdsaWithdrawalCommand:
      type: object
      required:
        - commandType
        - destinationId
        - symbol
        - network
        - quantity
      properties:
        commandType:
          description: the command type, it must be 'V1Withdrawal'
          type: string
          example: 'V1Withdrawal'
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        quantity:
          example: '100000.000001'
          allOf:
            - $ref: '#/components/schemas/CustodyQuantity'
    CustodyApiWithdrawalRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          type: string
          description: Withdrawal nonce, independent of header nonce, recommendation re-use header nonce
          example: "1628376611"
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: withdrawal command
          allOf:
            - $ref: '#/components/schemas/CustodyApiWithdrawalCommand'
    CustodyApiEcdsaWithdrawalRequest:
      type: object
      required:
        - timestamp
        - nonce
        - authorizer
        - command
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        nonce:
          type: string
          description: a UUID withdrawal nonce to protect against replay attacks
          example: "1628376611"
        authorizer:
          description: JWT authorizer you obtain along with the [JWT token](#overview--generate-a-jwt-token)
          allOf:
            - $ref: '#/components/schemas/Authorizer'
        command:
          description: withdrawal command
          allOf:
            - $ref: '#/components/schemas/CustodyApiEcdsaWithdrawalCommand'
    CustodyApiWithdrawalResponse:
      type: object
      properties:
        statusReason:
          description: status reason, describes why withdrawal challenge is in a specific state
          type: string
          example: Withdrawal accepted
        statusReasonCode:
          description: status reason code, see [details](#overview--error--rejection-codes)
          type: integer
          example: 1001
        custodyTransactionId:
          allOf:
            - $ref: '#/components/schemas/CustodyTransactionID'
    CustodyHistory:
      type: object
      properties:
        custodyTransactionId:
          allOf:
            - $ref: '#/components/schemas/CustodyTransactionHistoryID'
        direction:
          allOf:
            - $ref: '#/components/schemas/CustodyDirection'
        quantity:
          allOf:
            - $ref: '#/components/schemas/CustodyQuantity'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        fee:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalFee'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyDepositMemo'
        createdAtDateTime:
          allOf:
            - $ref: '#/components/schemas/CustodyCreatedAtDateTime'
        status:
          allOf:
            - $ref: '#/components/schemas/CustodyTransactionStatus'
        transactionDetails:
          allOf:
            - $ref: '#/components/schemas/CustodyTransactionDetails'
    CustodyCryptoDepositInstructions:
      type: object
      required:
        - network
        - symbol
        - address
      properties:
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyDepositMemo'
        address:
          allOf:
            - $ref: '#/components/schemas/CustodyNetworkAddress'
      example:
        network: 'ETH'
        symbol: 'USDC'
        address: '0xb0a64d976972d87b0783eeb1ff88306cd1891f02'
    CustodyCryptoWithdrawalInstructions:
      type: object
      required:
        - network
        - symbol
        - address
        - fee
        - label
        - destinationId
      properties:
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        address:
          allOf:
            - $ref: '#/components/schemas/CustodyNetworkAddress'
        fee:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalFee'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalMemo'
        label:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalLabel'
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
    CustodySelfHostedInitiateRequest:
      type: object
      required:
        - network
        - symbol
        - address
        - label
        - requestedDepositAmount
      properties:
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        address:
          allOf:
            - $ref: '#/components/schemas/CustodyNetworkAddress'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalMemo'
        label:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalLabel'
        requestedDepositAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedRequestedDepositAmount'
      example:
        network: "ETH"
        symbol: "USDC"
        address: "0xb0a64d976972d87b0783eeb1ff88306cd1891f02"
        label: "Our cold wallet"
        requestedDepositAmount: "12.3456"
    CustodySelfHostedInitiateResponse:
      type: object
      properties:
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        depositAddress:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedDepositAddress'
        depositMemo:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedDepositMemo'
        requestedDepositAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedRequestedDepositAmount'
        verificationAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedVerificationAmount'
        totalDepositAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedTotalDepositAmount'
        verificationExpiryTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
      example:
        destinationId: "1560ec0b406c0d909bb9f5f827dd6aa14a1f638884f33a2a3134878102e78038"
        network: "ETH"
        symbol: "USDC"
        depositAddress: "0xb0a64d976972d87b0783eeb1ff88306cd1891f02"
        requestedDepositAmount: "12.3456"
        verificationAmount: "0.0012"
        totalDepositAmount: "12.3468"
        verificationExpiryTime: "2025-05-20T01:01:01.000Z"
    CustodyGetSelfHostedVerificationResponse:
      type: object
      required:
        - destinationId
        - network
        - symbol
        - address
        - verificationStatus
        - requestedDepositAmount
        - verificationAmount
        - totalDepositAmount
        - verificationExpiryTime
      properties:
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
        network:
          allOf:
            - $ref: '#/components/schemas/NetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        address:
          allOf:
            - $ref: '#/components/schemas/CustodyNetworkAddress'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalMemo'
        verificationStatus:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedVerificationStatus'
        requestedDepositAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedRequestedDepositAmount'
        verificationAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedVerificationAmount'
        totalDepositAmount:
          allOf:
            - $ref: '#/components/schemas/CustodySelfHostedTotalDepositAmount'
        verificationExpiryTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
      example:
        destinationId: "1560ec0b406c0d909bb9f5f827dd6aa14a1f638884f33a2a3134878102e78038"
        network: "ETH"
        symbol: "USDC"
        address: "0xb0a64d976972d87b0783eeb1ff88306cd1891f02"
        verificationStatus: "VERIFIED"
        requestedDepositAmount: "12.3456"
        verificationAmount: "0.0012"
        totalDepositAmount: "12.3468"
        verificationExpiryTime: "2025-05-20T01:01:01.000Z"
    CustodyBankDetails:
      type: object
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/CustodyBankName'
        physicalAddress:
          allOf:
            - $ref: '#/components/schemas/CustodyPhysicalBankAddress'
        routingCode:
          allOf:
            - $ref: '#/components/schemas/CustodyBankRoutingCode'
    CustodyBankIntermediateDetails:
      type: object
      properties:
        name:
          example: 'Middle Bank'
          allOf:
            - $ref: '#/components/schemas/CustodyBankName'
        physicalAddress:
          example: '523 Exchange Square, Canary Wharf, E14 2WA'
          allOf:
            - $ref: '#/components/schemas/CustodyPhysicalBankAddress'
        routingCode:
          example: "321176234"
          allOf:
            - $ref: '#/components/schemas/CustodyBankRoutingCode'
    CustodyFiatDepositInstructions:
      type: object
      properties:
        network:
          type: string
          example: SWIFT
          description: the network that the account belongs to and the transaction will be performed on SWIFT, ABA or SEPA
        symbol:
          type: string
          example: USD
          description: the currency associated with the account, e.g. USD, EUR
        accountNumber:
          allOf:
            - $ref: '#/components/schemas/CustodyBankAccountNumber'
          example: "5090022533"
          description: the Bullish account number, varies for SWIFT/ABA and SEPA
        name:
          type: string
          example: Bullish (GI) Limited
          description: official Bullish account holder name
        physicalAddress:
          type: string
          example: 26/F, The Centrium, 60 Wyndham Street, Central, Hong Kong
          description: bullish entity's physical address for the bank account
        memo:
          type: string
          example: 8VZPKSGPA
          description: client specific reference to identify which account desposits should be allocated to on the exhange
        bank:
          allOf:
            - $ref: '#/components/schemas/CustodyBankDetails'
    CustodyFiatWithdrawalInstructions:
      type: object
      properties:
        destinationId:
          allOf:
            - $ref: '#/components/schemas/CustodyDestinationID'
        accountNumber:
          allOf:
            - $ref: '#/components/schemas/CustodyBankAccountNumber'
        network:
          allOf:
            - $ref: '#/components/schemas/CustodyBankNetworkID'
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodyFiatSymbol'
        name:
          allOf:
            - $ref: '#/components/schemas/CustodyBankName'
        physicalAddress:
          allOf:
            - $ref: '#/components/schemas/CustodyPhysicalBankAddress'
        fee:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalFee'
        memo:
          allOf:
            - $ref: '#/components/schemas/CustodyWithdrawalMemo'
        bank:
          allOf:
            - $ref: '#/components/schemas/CustodyBankDetails'
        intermediaryBank:
          allOf:
            - $ref: '#/components/schemas/CustodyBankIntermediateDetails'
    CustodyLimits:
      type: object
      properties:
        symbol:
          allOf:
            - $ref: '#/components/schemas/CustodySymbol'
        available:
          allOf:
            - $ref: '#/components/schemas/CustodyAvailableWithdrawalLimit'
        twentyFourHour:
          allOf:
            - $ref: '#/components/schemas/Custody24HWithdrawalLimit'
    Trade:
      type: object
      required:
        - tradeId
        - orderId
        - symbol
        - price
        - quantity
        - quoteAmount
        - baseFee
        - quoteFee
        - side
        - isTaker
        - tradeRebateAmount
        - tradeRebateAssetSymbol
        - otcMatchId
        - otcTradeId
        - clientOtcTradeId
        - createdAtTimestamp
        - createdAtDatetime
      properties:
        tradeId:
          description: unique trade ID
          allOf:
            - $ref: '#/components/schemas/TradeID'
        orderId:
          description: unique order ID
          allOf:
            - $ref: '#/components/schemas/OrderID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        price:
          description: price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteAmount:
          description: quote quantity deducted from asset account, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        baseFee:
          description: base fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteFee:
          description: quote fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        side:
          description: order side
          allOf:
            - $ref: '#/components/schemas/OrderSideAsString'
          example: 'BUY'
        isTaker:
          description: denotes whether this is a taker's trade
          allOf:
            - $ref: '#/components/schemas/Boolean'
        tradeRebateAmount:
          description: amount of rebate that is credited to the user as part of the trade.
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        tradeRebateAssetSymbol:
          description: the symbol of the asset in which the rebate is paid
          allOf:
            - $ref: '#/components/schemas/QuoteAssetSymbol'
        otcMatchId:
          description: unique OTC match ID.
          allOf:
            - $ref: '#/components/schemas/OtcMatchId'
        otcTradeId:
          description: unique Bullish OTC trade ID
          allOf:
            - $ref: '#/components/schemas/OtcTradeId'
        clientOtcTradeId:
          description: unique Client OTC trade ID
          allOf:
            - $ref: '#/components/schemas/ClientOtcTradeId'
        createdAtDatetime:
          description: denotes the time the trade was executed by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the trade was executed by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    Tick:
      type: object
      required:
        - createdAtDatetime
        - createdAtTimestamp
        - high
        - low
        - bestBid
        - bidVolume
        - bestAsk
        - askVolume
        - vwap
        - open
        - close
        - last
        - change
        - percentage
        - average
        - baseVolume
        - quoteVolume
        - bancorPrice
        - lastTradeDatetime
        - lastTradeTimestamp
        - lastTradeQuantity
        - ammData
      properties:
        createdAtDatetime:
          description: denotes the time of the current tick on the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time of the current tick on the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        high:
          description: highest price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        low:
          description: lowest price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        bestBid:
          description: current best bid (buy) price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        bidIVPercentage:
          description: Implied volatility of the best bid price
          type: string
          example: "99.0"
        bidVolume:
          description: current best bid (buy) quantity (may be missing or undefined), see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        bestAsk:
          description: current best ask (sell) price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        askIVPercentage:
          description: Implied volatility of the best ask price
          type: string
          example: "99.0"
        askVolume:
          description: current best ask (sell) quantity (may be missing or undefined), see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        vwap:
          description: volume weighed average price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        open:
          description: opening price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        close:
          description: price of last trade (closing price for current period), see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        last:
          description: price of last trade (closing price for current period), see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        change:
          description: absolute change, `last - open`, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        percentage:
          description: relative change, `(change/open) * 100`, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        average:
          description: average price, `(last + open) / 2`, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        baseVolume:
          description: volume of base asset traded for last 24 hours, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteVolume:
          description: volume of quote asset traded for last 24 hours, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        bancorPrice:
          description: current price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        markPrice:
          description: mark price represents the fair value of a contract at the current time.
          type: string
          example: "19999.00"
        fundingRate:
          description: funding rate is used to calculate funding, which measures the relative difference between the index price and mark price.
          type: string
          example: "0.01"
        openInterest:
          description: open interest is the total quantity of open long positions and short positions, see [asset value](#overview--price-and-quantity-precision) format (only applies to derivatives market)
          type: string
          example: "100000.32452"
        lastTradeDatetime:
          description: time of the last trade on this symbol, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        lastTradeTimestamp:
          description: time of the last trade on this symbol
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        lastTradeQuantity:
          description: quantity of the last trade on this symbol, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        ammData:
          description: AMM data of all available fee tiers. Not applicable for `Option` markets 
          type: array
          minItems: 0
          items:
            allOf:
              - $ref: '#/components/schemas/AmmData'
        optionStrikePrice:
          description: The price at which the option can be exercised upon expiry.
          type: string
          example: "70000"
        optionType:
          description: Type of Option
          allOf:
            - $ref: '#/components/schemas/OptionType'
        expiryDateTime:
          description: Expiry Date Time of the instrument
          allOf:
            - $ref: '#/components/schemas/DateTime'
        greeks:
          description: Option greeks
          allOf:
            - $ref: '#/components/schemas/OptionGreeks'
    AmmData:
      type: object
      description: AMM data
      required:
        - feeTierId
        - bidSpreadFee
        - askSpreadFee
        - baseReservesQuantity
        - quoteReservesQuantity
        - currentPrice
      properties:
        feeTierId:
          allOf:
            - $ref: '#/components/schemas/FeeTierId'
        bidSpreadFee:
          description: bid spread fee
          type: string
          example: "0.00040000"
        askSpreadFee:
          description: ask spread fee
          type: string
          example: "0.00040000"
        baseReservesQuantity:
          description: base reserves quantity
          type: string
          example: "245.56257825"
        quoteReservesQuantity:
          description: quote reserves quantity
          type: string
          example: "3424383.3629"
        currentPrice:
          description: current AMM price
          type: string
          example: "16856.0000"
    MarketSymbol:
      type: string
      description: market symbol. Eg `BTCUSDC` for SPOT and `BTC-USDC-PERP` for PERPETUAL market
      example: 'BTCUSDC'
    DatedFutureMarketSymbol:
      type: string
      description: market symbol. Eg `BTC-USDC-PERP` for PERPETUAL and `BTC-USDC-20241201` for DATED FUTURE markets.
      example: 'BTC-USDC-20241201'
    OptionMarketSymbol:
      type: string
      description: market symbol. Eg `BTC-USDC-20241004-70000-C` for OPTION markets.
      example: 'BTC-USDC-20241004-70000-C'
    OptionAndDatedFuturesMarketSymbol:
      type: string
      description: market symbol. Eg `BTC-USDC-20241004-70000-C` for OPTION markets and `BTC-USDC-20241201` for DATED FUTURE markets.
      example: 'BTC-USDC-20241004-70000-C'
    PerpMarketSymbol:
      type: string
      description: market symbol. Eg `BTC-USDC-PERP` for PERPETUAL market
      example: 'BTC-USDC-PERP'
    FeeTier:
      type: object
      description: unique fee tier
      required:
        - feeTierId
        - staticSpreadFee
        - isDislocationEnabled
      properties:
        feeTierId:
          allOf:
            - $ref: '#/components/schemas/FeeTierId'
        staticSpreadFee:
          description: static spread fee
          type: string
          example: "0.00040000"
        isDislocationEnabled:
          description: dislocation enabled/disabled
          type: boolean
          example: true
    FeeTierId:
      type: string
      description: unique fee tier ID, see [Get Market By Symbol](#get-/v1/markets/-symbol-)
      example: "1"
    InstrumentId:
      type: string
      description: custody identifier for instrument
      example: 'BTC'
    AssetSymbol:
      type: string
      description: asset symbol as denoted in the world
      example: 'BTC'
    UnderlyingAssetSymbol:
      type: string
      description: the underlying asset symbol that is configured for MMP checks
      example: 'BTC'
    QuoteAssetSymbol:
      type: string
      description: asset symbol as denoted in the world
      example: 'USDC'
    AssetName:
      type: string
      description: asset name
      example: "Bitcoin"
    AssetID:
      type: string
      description: unique asset ID
      example: "1"
    CollateralBand:
      type: object
      properties:
        collateralPercentage:
          description: collateral percentage applied to the asset for this band - a value of 90.00 indicates 90% of the asset is eligible to be used as collateral
          type: string
          example: "95.00"
        bandLimitUSD:
          description: upper limit in USD for this band
          type: string
          example: "1000000.0000"
    UnderlyingAsset:
      type: object
      properties:
        symbol:
          description: underlying asset symbol
          type: string
          example: "BTC"
        assetId:
          description: underlying asset ID
          type: string
          example: "1"
        bpmMinReturnStart:
          description: start of the 1/1000 biggest downward price movement of an underlying asset over 6 hours
          type: string
          example: "40.0000"
        bpmMinReturnEnd:
          description: end of the 1/1000 biggest downward price movement of an underlying asset over 6 hours
          type: string
          example: "20.0000"
        bpmMaxReturnStart:
          description: start of the 1/1000 biggest upward price movement of an underlying asset over 6 hours
          type: string
          example: "30.0000"
        bpmMaxReturnEnd:
          description: end of the 1/1000 biggest upward price movement of an underlying asset over 6 hours
          type: string
          example: "50.0000"
        marketRiskFloorPctStart:
          description: the percentage range of risk reduction allowed for a portfolio
          type: string
          example: "1.00"
        marketRiskFloorPctEnd:
          description: the percentage range of risk reduction allowed for a portfolio
          type: string
          example: "5.00"
        bpmTransitionDateTimeStart:
          description: the start datetime which the values linearly transition from `bpmMinReturnStart` to `bpmMinReturnEnd` for an underlying asset
          type: string
          example: "2024-08-02T12:00:00.000Z"
        bpmTransitionDateTimeEnd:
          description: the end datetime which the values linearly transition from `bpmMinReturnStart` to `bpmMinReturnEnd` for an underlying asset
          type: string
          example: "2024-08-02T18:00:00.000Z"
    PriceQuantityTuple:
      type: object
      properties:
        price:
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        priceLevelQuantity:
          allOf:
            - $ref: '#/components/schemas/AssetValue'
    OrderBook:
      type: object
      required:
        - bids
        - asks
        - datetime
        - timestamp
        - sequenceNumber
      properties:
        bids:
          description: bids
          type: array
          minItems: 0
          maxItems: 10
          items:
            allOf:
              - $ref: '#/components/schemas/PriceQuantityTuple'
        asks:
          description: asks
          type: array
          minItems: 0
          maxItems: 10
          items:
            allOf:
              - $ref: '#/components/schemas/PriceQuantityTuple'
        datetime:
          description: date and time of order book snapshot, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        timestamp:
          description: timestamp of order book snapshot
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        sequenceNumber:
          description: an incremented unique identifier of the order book snapshot
          type: integer
          example: 999
    IndexPrice:
      type: object
      required:
        - assetSymbol
        - price
        - updatedAtDatetime
        - updatedAtTimestamp
      properties:
        assetSymbol:
          description: Asset symbol
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        price:
          description: Asset price in USD
          example: "66100.0000"
          type: string
        updatedAtDatetime:
          description: Date and time when the index price is updated
          allOf:
            - $ref: '#/components/schemas/DateTime'
        updatedAtTimestamp:
          description: Timestamp when the index price is updated
          allOf:
            - $ref: '#/components/schemas/TimeStamp'
    Market:
      type: object
      required:
        - marketId
        - symbol
        - quoteAssetId
        - baseAssetId
        - quoteSymbol
        - baseSymbol
        - quotePrecision
        - basePrecision
        - pricePrecision
        - quantityPrecision
        - costPrecision
        - priceBuffer
        - minQuantityLimit
        - maxQuantityLimit
        - maxPriceLimit
        - minPriceLimit
        - maxCostLimit
        - minCostLimit
        - timeZone
        - tickSize
        - liquidityTickSize
        - liquidityPrecision
        - feeGroupId
        - roundingCorrectionFactor
        - makerMinLiquidityAddition
        - spotTradingEnabled
        - marginTradingEnabled
        - marketEnabled
        - createOrderEnabled
        - cancelOrderEnabled
        - liquidityInvestEnabled
        - liquidityWithdrawEnabled
        - feeTiers
        - marketType
        - openInterestUSD
        - concentrationRiskThresholdUSD
        - concentrationRiskPercentage
        - expiryDatetime
      properties:
        marketId:
          description: unique market ID
          allOf:
            - $ref: '#/components/schemas/MarketID'
        symbol:
          description: market symbol
          allOf:
            - $ref: '#/components/schemas/OptionMarketSymbol'
        baseSymbol:
          description: base asset symbol (only applies to spot market)
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        underlyingBaseSymbol:
          description: underlying base asset symbol (only applies to derivative market)
          example:
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        quoteSymbol:
          description: quote asset symbol (only applies to spot market)
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        underlyingQuoteSymbol:
          description: underlying quote asset symbol (only applies to derivative market)
          example:
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        quoteAssetId:
          description: quote asset id
          allOf:
            - $ref: '#/components/schemas/AssetID'
        baseAssetId:
          description: base asset id
          allOf:
            - $ref: '#/components/schemas/AssetID'
        quotePrecision:
          description: quote precision
          type: integer
          example: 4
        basePrecision:
          description: base precision
          type: integer
          example: 8
        pricePrecision:
          description: number of decimal digits 'after the dot' for price
          type: integer
          example: 8
        quantityPrecision:
          description: number of decimal digits 'after the dot' for quantity
          type: integer
          example: 8
        costPrecision:
          description: number of decimal digits 'after the dot' for cost, `price * quantity`
          type: integer
          example: 8
        priceBuffer:
          description: buffer range of limit price from the last traded price. Not applicable for `Option` markets
          type: string
          example: 0.3
        minQuantityLimit:
          description: order quantity should be > min, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        maxQuantityLimit:
          description: order quantity should be < max, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        maxPriceLimit:
          description: order price should be < max, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        minPriceLimit:
          description: order price should be > min, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        maxCostLimit:
          description: order cost, `price * quantity` should be < max, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        minCostLimit:
          description: order cost, `price * quantity` should be > min, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        timeZone:
          description: time zone
          type: string
          example: Etc/UTC
        tickSize:
          description: tick size, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        liquidityTickSize:
          description: liquidity tick size. Not applicable for `Option` markets
          type: string
          example: "100.0000"
        liquidityPrecision:
          description: liquidity precision. Not applicable for `Option` markets
          type: integer
          example: 4
        makerFee:
          description: Deprecated and no longer accurate. See `feeGroupId`
          type: integer
          example: 0
          deprecated: true
        takerFee:
          description: Deprecated and no longer accurate. See `feeGroupId`
          type: integer
          example: 2
          deprecated: true
        roundingCorrectionFactor:
          description: rounding correction factor for market
          type: string
          example: "0.00000001"
        makerMinLiquidityAddition:
          description: minimum amount required to invest liquidity to market. Not applicable for `Option` markets
          type: string
          example: "5000"
        orderTypes:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/OrderTypeAsString'
        spotTradingEnabled:
          description: spot trading enabled (only applies for Spot markets)
          type: boolean
          example: true
        marginTradingEnabled:
          description: margin trading enabled (only applies for Spot markets)
          type: boolean
          example: true
        marketEnabled:
          description: market enabled
          type: boolean
          example: true
        createOrderEnabled:
          description: able to create order
          type: boolean
          example: true
        amendOrderEnabled:
          description: able to amend order
          type: boolean
          example: true
          deprecated: true
        cancelOrderEnabled:
          description: able to cancel order
          type: boolean
          example: true
        liquidityInvestEnabled:
          description: able to invest liquidity to market. Not applicable for `Option` markets
          type: boolean
          example: true
        liquidityWithdrawEnabled:
          description: able to withdraw liquidity from market. Not applicable for `Option` markets
          type: boolean
          example: true
        feeGroupId:
          description: Identifier to the trade fee assigned to this market. Used with `tradeFeeRate` at [Get Trading Account](#get-/v1/accounts/trading-accounts/-tradingAccountId-)
          type: integer
          example: 1
        feeTiers:
          description: all available fee tiers. Not applicable for `Option` markets
          type: array
          minItems: 0
          items:
            allOf:
              - $ref: '#/components/schemas/FeeTier'
        marketType:
          description: market type, e.g. "SPOT" for market like "BTCUSD", "PERPETUAL" for market like "BTC-USDC-PERP", "DATED_FUTURE" for market like "BTC-USDC-20250901", "OPTION" for market like "BTC-USDC-20250901-90000-C"
          allOf:
            - $ref: '#/components/schemas/MarketTypeAsString'
        contractMultiplier:
          description: contract multiplier. (only applies to perpetual market)
          type: integer
          example: null
        settlementAssetSymbol:
          description: settlement asset symbol. (only applies to perpetual market)
          type: string
          example: null
        openInterestUSD:
          description: cumulative notional value of all open interest for a specific derivative contract on the exchange.
          type: string
          example: null
        concentrationRiskThresholdUSD:
          description: open interest notional of an account for a specific derivative contract.
          type: string
          example: null
        concentrationRiskPercentage:
          description: percentage of the total open interest for a specific derivative contract.
          type: string
          example: null
        expiryDatetime:
          description: denotes the time when the market expires in ISO 8601 with millisecond format as string
          type: string
          example: 2024-10-04T08:00:00.000Z
        optionStrikePrice:
          description: The price at which the option can be exercised upon expiry.
          type: string
          example: "70000.0000"
        optionType:
          description: Specifies if it’s a call (right to buy) or a put (right to sell)
          allOf:
            - $ref: '#/components/schemas/OptionType'
        premiumCapRatio:
          description: A cap that is set on the underlying asset's movement as part of the premium that limits the option buyer's profit.
          type: string
          example: "0.10"
    Asset:
      type: object
      required:
        - assetId
        - symbol
        - name
        - precision
        - minBalanceInterest
        - minFee
        - apr
        - collateralRating
        - maxBorrow
        - totalOfferedLoanQuantity
        - loanBorrowedQuantity
        - collateralBands
        - underlyingAsset
      properties:
        assetId:
          description: unique asset ID
          allOf:
            - $ref: '#/components/schemas/AssetID'
        symbol:
          description: asset symbol
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        name:
          description: asset name
          allOf:
            - $ref: '#/components/schemas/AssetName'
        precision:
          description: number of decimal digits 'after the dot' for asset amount
          type: string
          example: "8"
        minBalanceInterest:
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        minFee:
          description: minimum fee
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        apr:
          description: annualized percentage rate
          type: string
          example: "12.50"
        collateralRating:
          deprecated: true
          description: collateral rating applied to this asset, a value of 100.00 indicates 100%. `Deprecated in favour of collateral bands`
          type: string
          example: "95.00"
        maxBorrow:
          description: maximum quantity that can be borrowed for this asset
          type: string
          example: "10.00000000"
        totalOfferedLoanQuantity:
          description: quantity of an asset that is across all loan offers on the exchange
          type: string
          example: "5.00000000"
        loanBorrowedQuantity:
          description: amount of loans that is currently being borrowed for the asset
          type: string
          example: "3.00000000"
        collateralBands:
          description: list of collateral bands for the asset. A collateral band holds the upper limit of the USD notional and the corresponding collateral percentage which applies to it. An asset's collateral value will be capped by the highest limit of the collateral bands, any remaining amount greater than this limit will have a collateral percentage of 0. If an asset has an empty list of CollateralBands, this signifies that the asset has a collateralValue of 0.
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/CollateralBand'
        underlyingAsset:
          description: underlying asset for the asset.
          allOf:
            - $ref: '#/components/schemas/UnderlyingAsset'
    OHLCVCandle:
      type: object
      properties:
        open:
          description: see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        high:
          description: see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        low:
          description: see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        close:
          description: see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        volume:
          description: see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        createdAtTimestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        createdAtDatetime:
          description: date and time of the candle, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        publishedAtTimestamp:
          description: date and time of the candle getting published, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    BorrowInterest:
      type: object
      required:
        - assetId
        - assetSymbol
        - borrowedQuantity
        - totalBorrowedQuantity
        - createdAtDatetime
        - createdAtTimestamp
      properties:
        assetId:
          description: unique asset ID
          allOf:
            - $ref: '#/components/schemas/AssetID'
        assetSymbol:
          description: asset symbol
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        borrowedQuantity:
          description: the principal borrowed quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        totalBorrowedQuantity:
          description: the sum of the principal borrowed quantity and the interest charged
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        createdAtDatetime:
          description: denotes the hour in which the principal quantity was borrowed or when the interest was charged, ISO 8601 with millisecond as string
          type: string
          format: date-time
          example: "2020-08-21T08:00:00.000Z"
        createdAtTimestamp:
          description: denotes the hour in which the principal quantity was borrowed or when the interest was charged
          type: string
          format: string
          example: "1621490985000"
    CurrentExchangeTimeResponse:
      type: object
      required:
        - timestamp
        - datetime
      properties:
        timestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        datetime:
          description: ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
    Nonce:
      type: object
      required:
        - upperBound
        - lowerBound
      properties:
        lowerBound:
          description: lower bound of nonce range
          type: integer
          example: 8455
        upperBound:
          description: upper bound of nonce range
          type: integer
          example: 9455
    OrderTimeInForce:
      description: time in force
      type: string
      enum:
        - GTC
        - FOK
        - IOC
    OptionType:
      description: Type of Option market
      example: CALL
      type: string
      enum:
        - CALL
        - PUT
    OrderType:
      type: string
      description: Order Types supported for the market.
      enum:
        - LMT
        - MKT
        - STOP_LIMIT
    OrderSide:
      type: string
      example: BUY
      enum:
        - BUY
        - SELL
    TimeBucket:
      type: string
      example: 1m
      enum:
        - 1m
        - 5m
        - 30m
        - 1h
        - 6h
        - 12h
        - 1d
    OrderStatus:
      type: string
      example: OPEN
      enum:
        - OPEN
        - CLOSED
        - CANCELLED
        - REJECTED
    AMMInstructionStatus:
      type: string
      example: OPEN
      enum:
        - OPEN
        - CLOSED
    LiquidationRisk:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
    PositionType:
      type: string
      enum:
        - LONG
        - SHORT
    DelayBySeconds:
      description: Delay the cancel-all-orders request by (seconds) as a timeout mechanism
      type: string
      enum:
        - "5"
        - "10"
        - "15"
        - "20"
        - "25"
        - "30"
        - "40"
        - "50"
        - "60"
      example: "5"
    CancelId:
      description: Unique id for this cancel request which is an unsigned 64 bit integer expressed as string
      type: string
      example: "123456789"
    DerivativesPositionResponse:
      description: Derivatives Position of one market for the trading account
      type: string
      properties:
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        symbol:
          example: "BTC-USDC-PERP"
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        side:
          allOf:
            - $ref: '#/components/schemas/OrderSide'
        quantity:
          description: Current size of the  position [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        notional:
          description: Notional value of the current position, calculated using the mark price
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        entryNotional:
          description: Notional value of the position, using the average entry price
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        mtmPnl:
          description: Sum of all mark-to-market profits and losses plus profits and losses realised from trading, accumulated since the last settlement
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        reportedMtmPnl:
          description: The profit/losses from the net price change since the last time the absolute quantity decreased. It is updated with every mark to market and is not updated during settlement or a position size increase
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        reportedFundingPnl:
          description: Sum of all funding payments received  since the position was opened. This is updated every time funding is paid.
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        realizedPnl:
          description: Total profits realized since the trading account first opened this position. This is only updated every time a position’s absolute quantity (aka size) is reduced.
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        settlementAssetSymbol:
          description: Settlement Asset Symbol
          type: string
          example: "USDC"
        createdAtDatetime:
          description: Denotes the time the position was created by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: Denotes the time the position was created by the exchange, number of milliseconds since EPOCH
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        updatedAtDatetime:
          description: Denotes the time the position was updated by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        updatedAtTimestamp:
          description: Denotes the time the position was updated by the exchange, number of milliseconds since EPOCH
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    DerivativesSettlementResponse:
      description: Derivatives Settlement of one market for the trading account
      type: string
      properties:
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        symbol:
          example: "BTC-USDC-PERP"
          allOf:
            - $ref: '#/components/schemas/DatedFutureMarketSymbol'
        side:
          allOf:
            - $ref: '#/components/schemas/OrderSide'
        settlementQuantity:
          description: position size at the time of the settlement
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        deltaTradingQuantity:
          description: the change in the position size from the account’s trading activities
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        mtmPnl:
          description: mark to market profit (losses) accumulated since the last settlement
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        fundingPnl:
          description: funding profits (losses) accumulated since the last settlement. Applicable for perpetuals only.
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        eventType:
          description: derivatives position update event types
          type: string
          example: "settlementUpdate"
        settlementMarkPrice:
          description: market price at which the position was settled for this past cycle
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        settlementIndexPrice:
          description: index price at which the position was settled for this past cycle
          allOf:
            - $ref: '#/components/schemas/UsdcValue'
        settlementFundingRate:
          description: funding rate at which the position was settled for this past cycle. Applicable for perpetuals only.
          type: string
          example: "10.0"
        settlementDatetime:
          description: Denotes the time the position was settled by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        settlementTimestamp:
          description: Denotes the time the position was settled by the exchange, number of milliseconds since EPOCH
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    SubAccountTransferResponse:
      description: Get account transfer history
      type: string
      properties:
        requestId:
          description: unique identifier of the transfer request
          type: string
          example: "1"
        toTradingAccountId:
          description: recipient's trading account
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        fromTradingAccountId:
          description: sender's trading account
          type: string
          example: "121000000000001"
        assetSymbol:
          description: asset currency of the transfer
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        quantity:
          description: transfer quantity
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        status:
          description: transfer status [CLOSED/OPEN/REJECTED]
          type: string
          example: "CLOSED"
        statusReasonCode:
          description: status reason code
          type: string
          example: "6002"
        statusReason:
          description: readable status reason
          type: string
          example: "Executed"
        createdAtTimestamp:
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        createdAtDatetime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
    SimulationPosition:
      type: string
      required:
        - symbol
        - quantity
      properties:
        symbol:
          description: asset or market symbol. Eg `USDC` for asset and `BTCUSDC` for market
          type: string
          example: "BTC-USDC-PERP"
        quantity:
          description: size of the position
          type: string
          example: "1.0"

    SimulationOrder:
      type: string
      required:
        - symbol
        - quantity
      properties:
        symbol:
          allOf:
            - $ref: '#/components/schemas/MarketSymbol'
        quantity:
          description: quantity placed for order
          type: string
          example: "1.0"
        limitPrice:
          description: limit price for order
          type: string
          example: "10000.0"

    ReferencePrice:
      type: string
      properties:
        symbol:
          description: asset or market symbol. Eg `USDC` for asset and `BTCUSDC` for market
          type: string
          example: "BTC"
        price:
          description: reference price for asset or market
          type: string
          example: "12000.0"
    TradeFeeRate:
      type: object
      required:
        - feeGroupId
        - makerFee
        - takerFee
      properties:
        feeGroupId:
          type: integer
          description: Identifier for this particular fee tier
          example: 1
        makerFee:
          type: string
          description: Maker Fee in basis points (bps)
          example: "10"
        takerFee:
          type: string
          description: Taker Fee in basis points (bps)
          example: "10"
    PortfolioSimulationRequest:
      type: object
      required:
        - tradingAccountId
      properties:
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        positions:
          type: array
          description: portfolio position to be used in simulation
          items:
            allOf:
              - $ref: '#/components/schemas/SimulationPosition'
        orders:
          type: array
          description: pending orders to be used in simulation
          items:
            allOf:
              - $ref: '#/components/schemas/SimulationOrder'
        referencePrices:
          type: array
          description: reference price to be used in simulation
          items:
            allOf:
              - $ref: '#/components/schemas/ReferencePrice'
    OptionLadderResponse:
      description: Option Ladder Response
      type: string
      properties:
        symbol:
          description: Symbol of the option market. For example `BTC-USDC-20241004-70000-C`
          allOf:
            - $ref: '#/components/schemas/OptionMarketSymbol'
        baseSymbol:
          description: Base symbol of the option market. For `BTC-USDC-20241004-70000-C`, it will be `BTC`
          allOf:
            - $ref: '#/components/schemas/AssetSymbol'
        settlementAssetSymbol:
          description: Asset used for Mark To Market settlement
          allOf:
            - $ref: '#/components/schemas/QuoteAssetSymbol'
        bidQuantity:
          description: Quantity of `bid`
          type: string
          example: "0.0"
        askQuantity:
          description: Quantity of `ask`
          type: string
          example: "0.0"
        bidIVPercentage:
          description: Implied volatility of the best bid price
          type: string
          example: "99.0"
        askIVPercentage:
          description: Implied volatility of the best ask price
          type: string
          example: "99.0"
        bid:
          description: Bid price in the order book
          type: string
          example: "90000.0000"
        ask:
          description: Ask price in the order book
          type: string
          example: "90000.0000"
        underlyingPrice:
          description: Index price of the base asset
          type: string
          example: "100000.0000"
        optionStrikePrice:
          description: Strike price of the option market
          type: string
          example: "90000"
        markPrice:
          description: Mark Price of the option market
          type: string
          example: "100.0000"
        quantity:
          description: Number of contracts outstanding
          type: string
          example: "1000"
        openInterest:
          description: Amount of outstanding contracts in the exchange
          type: string
          example: "0.11442400"
        openInterestUSD:
          description: USD value of outstanding contracts in the exchange
          type: string
          example: "1144240.0000"
        optionType:
          description: Specifies if it’s a call (right to buy) or a put (right to sell)
          allOf:
            - $ref: '#/components/schemas/OptionType'
        expiryDatetime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
        greeks:
          description: Option greeks
          allOf:
            - $ref: '#/components/schemas/OptionGreeks'

    OptionGreeks:
      description: Pricing parameters for option instruments
      type: object
      properties:
        delta:
          description: Sensitivity of an option’s price to a $1 change in the price of the underlying asset
          type: string
          example: "0.98"
        gamma:
          description: Rate of change of Delta with respect to a $1 change in the underlying asset’s price
          type: string
          example: "0.98"
        theta:
          description: The rate at which an option’s price decreases as it approaches its expiration date
          type: string
          example: "-0.17"
        vega:
          description: Sensitivity of an option’s price to a 1% change in the implied volatility of the underlying asset
          type: string
          example: "0.05"
    PortfolioSimulationResponse:
      description: Simulation result
      type: string
      properties:
        collateralUSD:
          description: total collateral across all assets in this trading account displayed in the reference asset in USD
          type: string
          example: "13000.0000"
        borrowedUSD:
          description: total borrowed across all assets in this trading account displayed in the reference asset in USD
          type: string
          example: "12000.0000"
        initialMarginUSD:
          description: The minimum margin one must maintain in order to be able to purposefully increase risk
          type: string
          example: "14000.0000"
        warningMarginUSD:
          description: The minimum margin when the customer will receive warning via email/notifications over UI
          type: string
          example: "15000.0000"
        liquidationMarginUSD:
          description: The minimum value of margin one must maintain in order to avoid liquidation
          type: string
          example: "16000.0000"
        fullLiquidationMarginUSD:
          description: The value of margin when full liquidation occurs
          type: string
          example: "17000.0000"
        defaultedMarginUSD:
          description: The value of margin when this trading account will be moved into a Defaulted state
          type: string
          example: "18000.0000"
        liquidityAddonUSD:
          description: expected market impact of unwinding the portfolio in the case of a liquidation event
          type: string
          example: "19000.0000"
        marketRiskUSD:
          description: the worst possible loss on the portfolio based on scenario analysis
          type: string
          example: "20000.0000"
    FundingRateHistoryResponse:
      description: Hourly Funding Rate History of one market
      type: array
      properties:
        fundingRate:
          description: funding rate for this hour
          type: string
          example: "0.1"
        updatedAtDatetime:
          description: date time of the last funding rate update for the hour
          type: string
          example: "2024-09-16T12:59:59.000Z"
    CreateOtcTradeCommand:
      type: object
      description: A command with details to an OTC trade
      required:
        - commandType
        - sharedMatchKey
        - tradingAccountId
        - isTaker
        - trades
      properties:
        commandType:
          type: string
          description: Specifies the command type and must be ‘V1CreateOtcTrade’ to indicate the submission of an OTC trade.
        clientOtcTradeId:
          $ref: '#/components/schemas/ClientOtcTradeId'
        sharedMatchKey:
          $ref: '#/components/schemas/SharedMatchKey'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId'
        isTaker:
          description: denotes whether the role of the counterparty is Taker or Maker. The corresponding leg of the opposite side of the trade should have the inverse role to be successfully matched on the OTC Clearing Facility
          allOf:
            - $ref: '#/components/schemas/Boolean'
        remarks:
          $ref: '#/components/schemas/Remarks'
        trades:
          type: array
          nullable: false
          description: all trades for the OTC trade
          items:
            $ref: '#/components/schemas/TradeInOtcRequest'
      example:
        commandType: V1CreateOtcTrade
        clientOtcTradeId: '20050900225'
        sharedMatchKey: cfBtcXrpMatch001
        tradingAccountId: '111000000000001'
        isTaker: true
        remarks: "first otc trade with xyz client"
        trades:
          - symbol: BTC-USDC-PERP
            side: BUY
            price: '98213.00000'
            quantity: '1.5000'
          - symbol: XRP-USDC-PERP
            side: SELL
            price: '2.66000000'
            quantity: '50.0000'
    TradeInOtcRequest:
      description: A trade of an OTC trade
      required:
        - symbol
        - side
        - price
        - quantity
      properties:
        symbol:
          $ref: '#/components/schemas/OtcMarketSymbol'
        side:
          $ref: '#/components/schemas/TradeSideAsString'
        price:
          description: price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity, see [ asset value ](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
    OtcTradeView:
      type: object
      required:
        - otcTradeId
        - sharedMatchKey
        - status
        - statusReason
        - statusReasonCode
        - expireDatetime
        - expireTimestamp
        - trades
      properties:
        otcTradeId:
          allOf:
            - $ref: '#/components/schemas/OtcTradeId'
        clientOtcTradeId:
          allOf:
            - $ref: '#/components/schemas/ClientOtcTradeId'
        sharedMatchKey:
          allOf:
            - $ref: '#/components/schemas/SharedMatchKey'
        status:
          allOf:
            - $ref: '#/components/schemas/OtcTradeExternalStatus'
          example: 'MATCHED'
        statusReason:
          description: status reason, describes why the otc trade is in a specific state
          type: string
          example: "Ok"
        statusReasonCode:
          description: status reason code, see [details](#overview--error--rejection-codes)
          type: string
          example: "1002"
        createdAtDatetime:
          description: denotes the time the otc trade was ACK'd by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the otc trade was ACK'd by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        expireDatetime:
          description: denotes the time the otc trade would expire
          allOf:
            - $ref: '#/components/schemas/DateTime'
        expireTimestamp:
          description: denotes the time the otc trade would expire, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
        remarks:
          $ref: '#/components/schemas/Remarks'
        trades:
          type: array
          minItems: 0
          maxItems: 25
          nullable: false
          description: all trades for the OTC trade
          items:
            allOf:
              - $ref: '#/components/schemas/OtcTradeLegView'
    OtcTradeLegView:
      description: a trade of an OTC trade
      required:
        - symbol
        - price
        - quantity
        - side
        - isTaker
      properties:
        tradeId:
          description: unique trade ID
          allOf:
            - $ref: '#/components/schemas/TradeID'
        symbol:
          $ref: '#/components/schemas/OtcMarketSymbol'
        price:
          description: price, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quantity:
          description: quantity, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteAmount:
          description: notional value of the trade in quote or settlement asset, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        baseFee:
          description: base fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        quoteFee:
          description: quote fee, see [asset value](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        tradeRebateAssetSymbol:
          $ref: '#/components/schemas/OtcMarketSymbol'
        tradeRebateAmount:
          description: trade rebate fee, see [ asset value ](#overview--price-and-quantity-precision) format
          allOf:
            - $ref: '#/components/schemas/AssetValue'
        side:
          $ref: '#/components/schemas/TradeSideAsString'
          example: 'BUY'
        isTaker:
          description: denotes whether the role of the counterparty is Taker or Maker. The corresponding leg of the opposite side of the trade should have the inverse role to be successfully matched on the OTC Clearing Facility
          allOf:
            - $ref: '#/components/schemas/Boolean'
        createdAtDatetime:
          description: denotes the time the trade was executed by the exchange, ISO 8601 with millisecond as string
          allOf:
            - $ref: '#/components/schemas/DateTime'
        createdAtTimestamp:
          description: denotes the time the trade was executed by the exchange
          allOf:
            - $ref: '#/components/schemas/TimeStampAsString'
    CreateOtcTradeResponse:
      description: A response for an acknowledged OTC trade creation request
      required:
        - message
        - requestId
        - otcTradeId
        - sharedMatchKey
      properties:
        message:
          type: string
          description: message indicating the status of the request
          example: Command acknowledged - CreateOtcTrade
        requestId:
          $ref: '#/components/schemas/RequestID'
        otcTradeId:
          $ref: '#/components/schemas/OtcTradeId'
        clientOtcTradeId:
          $ref: '#/components/schemas/ClientOtcTradeId'
        sharedMatchKey:
          $ref: '#/components/schemas/SharedMatchKey'
    CancelOtcTradeCommand:
      type: object
      description: A command to cancel an OTC trade. Only one of `clientOtcTradeId` or `otcTradeId` can be used in the cancel OTC trade command
      required:
        - commandType
        - tradingAccountId
      properties:
        commandType:
          type: string
          description: Specifies the command type and must be ‘V1CancelOtcTrade’ to indicate the cancellation of an OTC trade.
        otcTradeId:
          $ref: '#/components/schemas/OtcTradeId'
        clientOtcTradeId:
          $ref: '#/components/schemas/ClientOtcTradeId'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: V1CancelOtcTrade
        clientOtcTradeId: '20050900225'
        tradingAccountId: '111000000000001'
    CancelOtcTradeResponse:
      description: A response for an acknowledged OTC command to cancel an OTC trade
      required:
        - message
        - requestId
        - otcTradeId
        - tradingAccountId
      properties:
        message:
          type: string
          description: message indicating the status of the request
          example: Command acknowledged - CancelOtcTrade
        requestId:
          $ref: '#/components/schemas/RequestID'
        otcTradeId:
          $ref: '#/components/schemas/OtcTradeId'
        clientOtcTradeId:
          $ref: '#/components/schemas/ClientOtcTradeId'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId'
      example:
        message: Command acknowledged - CancelOtcTrade
        requestId: '100000000000000147'
        otcTradeId: '200000000000000098'
        tradingAccountId: '111000000000001'
    CancelAllOtcTradesCommand:
      type: object
      description: A command to cancel all pending OTC trades.
      required:
        - commandType
        - tradingAccountId
      properties:
        commandType:
          type: string
          description: Specifies the command type and must be ‘V1CancelAllOtcTrades’ to indicate the cancellation of all pending OTC trades.
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId'
      example:
        commandType: V1CancelAllOtcTrades
        tradingAccountId: '111000000000001'
    CancelAllOtcTradesResponse:
      description: A response for an acknowledged OTC command to cancel all pending OTC trades
      required:
        - message
        - requestId
        - tradingAccountId
      properties:
        message:
          type: string
          description: message indicating the status of the request
          example: Command acknowledged - CancelOtcTrade
        requestId:
          $ref: '#/components/schemas/RequestID'
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId'
      example:
        message: Command acknowledged - CancelAllOtcTrades
        requestId: '100000000000000148'
        tradingAccountId: '111000000000001'
    BadOtcTradeEntryResponse:
      type: object
      required:
        - message
        - errorCode
        - errorCodeName
      properties:
        message:
          description: message
          type: string
        errorCode:
          description: unique error code
          type: integer
        errorCodeName:
          description: unique error code name
          type: string
    OtcMarketSymbol:
      type: string
      description: market symbol. Eg `BTC-USDC-PERP` for PERPETUAL market `BTC-USDC-20250613` for DATEDFUTURE market and `BTC-USDC-20250613-100000-C` for OPTION market
      example: BTC-USDC-PERP
    SharedMatchKey:
      type: string
      description: Unique shared key that is agreed between the two customers to represent their OTC trade to be matched on Bullish's OTC Clearing Facility. Must be a 12 to 64 characters alphanumeric value
      example: cfBtcXrpMatch001
    TradeSideAsString:
      type: string
      description: trade side can have the following string values `BUY`, `SELL`
      example: BUY
    OtcMatchId:
      type: string
      description: unique numeric (i64) identifier generated on Bullish side expressed as a string value
      example: '15'
    ClientOtcTradeId:
      type: string
      description: unique numeric (i64) identifier generated on the client side expressed as a string value
      example: '20050900225'
    OtcTradeId:
      type: string
      description: unique numeric (i64) identifier generated on Bullish side expressed as a string value
      example: '200000000000000098'
    OtcTradeExternalStatus:
      type: string
      description: otc trade status can have the following string values `"COUNTERPARTY_PENDING"`, `"COUNTERPARTY_PAIRED"`, `"RISK_PENDING"`, `"MATCHED"`, `"CANCELLED"`, `"REJECTED"`
      enum:
        - COUNTERPARTY_PENDING
        - COUNTERPARTY_PAIRED
        - RISK_PENDING
        - MATCHED
        - CANCELLED
        - REJECTED
      example: MATCHED
    Remarks:
      type: string
      description: text field for client’s internal reference to a trade, max length is 255 characters
      example: "first otc trade with xyz client"
    GetMmpConfigurationResponse:
      type: object
      required:
        - tradingAccountId
        - message
        - mmpConfigurations
      properties:
        tradingAccountId:
          allOf:
            - $ref: '#/components/schemas/TradingAccountId'
        message:
          description: If there are no market maker protection configurations setup for this trading account or for the provided optional symbol under the same trading account, this field will be returned as "No mmp config setup".
          type: string
          example: null
        mmpConfigurations:
          description: A list of market maker protection configurations that the user has setup for each underlying asset symbol under the trading account provided. Supports filtering of symbol.
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/MmpConfiguration'
    MmpConfiguration:
      type: object
      required:
        - underlyingAssetSymbol
        - windowTimeInSeconds
        - frozenTimeInSeconds
        - quantityLimit
        - deltaLimit
        - isActive
      properties:
        underlyingAssetSymbol:
          type: string
          description: Underlying Asset Symbol
          example: "BTC"
        windowTimeInSeconds:
          type: integer
          description: Time window during which the MMP checks are conducted. It helps in determining how frequently the system evaluates the market maker's activity against predefined thresholds. Value needs to be `> 0`. Maximum value is 600 seconds (10 minutes).
          example: 60
        frozenTimeInSeconds:
          type: integer
          description: The duration for which a market maker’s trading activity is temporarily halted after a protective measure is triggered. Value needs to be `>= 0`. Maximum value is 3600 seconds (60 minutes).
          example: 120
        quantityLimit:
          type: string
          description: Cap on the total number of contracts that a market maker can trade within `windowTimeInSeconds`. This is direction(side) agnostic. Needs to be `> 0` if set.
          example: '100'
        deltaLimit:
          type: string
          description: Net delta exposure that a market maker can accumulate within `windowTimeInSeconds`
          example: '10'
        isActive:
          type: boolean
          description: This boolean indicates if this configuration is in effect or not.
          example: true
  examples:
    CreateLimitOrderCommand:
      value:
        commandType: 'V3CreateOrder'
        clientOrderId: '1234'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        type: "LIMIT"
        side: "BUY"
        price: "31000.1"
        quantity: "1.1"
        timeInForce: "GTC"
        allowBorrow: true
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CreateMarketOrderCommand:
      value:
        commandType: 'V3CreateOrder'
        clientOrderId: '1234'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        type: "MARKET"
        side: "BUY"
        quantity: "1.1"
        timeInForce: "GTC"
        allowBorrow: true
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CreateStopLimitOrderCommand:
      value:
        commandType: 'V3CreateOrder'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        type: "STOP_LIMIT"
        side: "BUY"
        price: "31000.1"
        stopPrice: "31000.8"
        quantity: "1.1"
        timeInForce: "GTC"
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    CreatePostOnlyOrderCommand:
      value:
        commandType: 'V3CreateOrder'
        clientOrderId: '1234'
        symbol:
          $ref: '#/components/schemas/MarketSymbol/example'
        type: "POST_ONLY"
        side: "BUY"
        price: "31000.1"
        quantity: "1.1"
        timeInForce: "GTC"
        allowBorrow: true
        tradingAccountId:
          $ref: '#/components/schemas/TradingAccountId/example'
    SetMMPCommandV1:
      value:
        $ref: '#/components/schemas/SetMMPCommandV1/example'
    ResetMMPCommandV1:
      value:
        $ref: '#/components/schemas/ResetMMPCommandV1/example'
    SetMMPCommandResponse:
      value:
        $ref: '#/components/schemas/SetMMPCommandResponse/example'
    ResetMMPCommandResponse:
      value:
        $ref: '#/components/schemas/ResetMMPCommandResponse/example'
    CreateAMMInstructionCommand:
      value:
        $ref: '#/components/schemas/CreateAMMInstructionCommandV3/example'
    CancelOrderCommand:
      description: Only one of `orderId` or `clientOrderId` can be used in the cancel order command
      value:
        $ref: '#/components/schemas/CancelOrderCommandV3/example'
    CancelAllOrdersCommand:
      value:
        $ref: '#/components/schemas/CancelAllOrdersCommand/example'
    CancelAllOrdersByMarketCommand:
      value:
        $ref: '#/components/schemas/CancelAllOrdersByMarketCommand/example'
    DelayedCancelAllOrdersCommand:
      value:
        $ref: '#/components/schemas/DelayedCancelAllOrdersCommand/example'
    UnsetDelayedCancelAllOrdersCommand:
      value:
        $ref: '#/components/schemas/UnsetDelayedCancelAllOrdersCommand/example'
    AmendOrderCommand:
      value:
        $ref: '#/components/schemas/AmendOrderCommandV1/example'
    TerminateAMMInstructionCommand:
      value:
        $ref: '#/components/schemas/TerminateAMMInstructionCommandV3/example'
    TransferAssetCommand:
      value:
        $ref: '#/components/schemas/TransferAssetCommandV2/example'
    CreateOrderCommandResponse:
      value:
        $ref: '#/components/schemas/CreateOrderCommandResponseV3/example'
    AmendOrderCommandResponse:
      value:
        $ref: '#/components/schemas/AmendOrderCommandResponseV1/example'
    CancelOrderCommandResponse:
      description: Only one of `orderId` or `clientOrderId` present
      value:
        $ref: '#/components/schemas/CancelOrderCommandResponseV3/example'
    CancelAllOrdersCommandResponse:
      value:
        $ref: '#/components/schemas/CancelAllOrdersResponse/example'
    CancelAllOrdersByMarketCommandResponse:
      value:
        $ref: '#/components/schemas/CancelAllOrdersByMarketResponse/example'
    DelayedCancelAllOrdersCommandResponse:
      value:
        $ref: '#/components/schemas/DelayedCancelAllOrdersResponse/example'
    UnsetDelayedCancelAllOrdersCommandResponse:
      value:
        $ref: '#/components/schemas/UnsetDelayedCancelAllOrdersResponse/example'
    CreateAMMInstructionCommandResponse:
      value:
        $ref: '#/components/schemas/CreateAMMInstructionCommandResponseV3/example'
    TerminateAMMInstructionCommandResponse:
      value:
        $ref: '#/components/schemas/TerminateAMMInstructionCommandResponseV3/example'
    TransferAssetCommandResponse:
      value:
        $ref: '#/components/schemas/TradingAccountTransferResponse/example'
    CancelOtcTradeCommand:
      value:
        $ref: '#/components/schemas/CancelOtcTradeCommand/example'
    CancelAllOtcTradesCommand:
      value:
        $ref: '#/components/schemas/CancelAllOtcTradesCommand/example'
    CancelOtcTradeResponse:
      value:
        $ref: '#/components/schemas/CancelOtcTradeResponse/example'
    CancelAllOtcTradesResponse:
      value:
        $ref: '#/components/schemas/CancelAllOtcTradesResponse/example'